ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_Green.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_Green_Stop,"ax",%progbits
  18              		.align	2
  19              		.global	PWM_Green_Stop
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_Green_Stop, %function
  23              	PWM_Green_Stop:
  24              	.LFB4:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_Green.c"
   1:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_Green.c **** * File Name: PWM_Green.c
   3:.\Generated_Source\PSoC4/PWM_Green.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/PWM_Green.c **** *
   5:.\Generated_Source\PSoC4/PWM_Green.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_Green.c **** *  This file provides the source code to the API for the PWM_Green
   7:.\Generated_Source\PSoC4/PWM_Green.c **** *  component
   8:.\Generated_Source\PSoC4/PWM_Green.c **** *
   9:.\Generated_Source\PSoC4/PWM_Green.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
  11:.\Generated_Source\PSoC4/PWM_Green.c **** *
  12:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM_Green.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM_Green.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM_Green.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM_Green.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PWM_Green.c **** 
  19:.\Generated_Source\PSoC4/PWM_Green.c **** #include "PWM_Green.h"
  20:.\Generated_Source\PSoC4/PWM_Green.c **** 
  21:.\Generated_Source\PSoC4/PWM_Green.c **** uint8 PWM_Green_initVar = 0u;
  22:.\Generated_Source\PSoC4/PWM_Green.c **** 
  23:.\Generated_Source\PSoC4/PWM_Green.c **** 
  24:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_Init
  26:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/PWM_Green.c **** *
  28:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
  29:.\Generated_Source\PSoC4/PWM_Green.c **** *  Initialize/Restore default PWM_Green configuration.
  30:.\Generated_Source\PSoC4/PWM_Green.c **** *
  31:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
  32:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 2


  33:.\Generated_Source\PSoC4/PWM_Green.c **** *
  34:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
  35:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
  36:.\Generated_Source\PSoC4/PWM_Green.c **** *
  37:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_Init(void)
  39:.\Generated_Source\PSoC4/PWM_Green.c **** {
  40:.\Generated_Source\PSoC4/PWM_Green.c **** 
  41:.\Generated_Source\PSoC4/PWM_Green.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/PWM_Green.c ****     #if (PWM_Green__QUAD == PWM_Green_CONFIG)
  43:.\Generated_Source\PSoC4/PWM_Green.c ****         PWM_Green_CONTROL_REG = PWM_Green_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/PWM_Green.c ****         
  45:.\Generated_Source\PSoC4/PWM_Green.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/PWM_Green.c ****         PWM_Green_TRIG_CONTROL1_REG  = PWM_Green_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/PWM_Green.c **** 
  48:.\Generated_Source\PSoC4/PWM_Green.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/PWM_Green.c ****         PWM_Green_SetInterruptMode(PWM_Green_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/PWM_Green.c ****         
  51:.\Generated_Source\PSoC4/PWM_Green.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/PWM_Green.c ****         PWM_Green_SetCounterMode(PWM_Green_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/PWM_Green.c ****         PWM_Green_WritePeriod(PWM_Green_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/PWM_Green.c ****         PWM_Green_WriteCounter(PWM_Green_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/PWM_Green.c ****     #endif  /* (PWM_Green__QUAD == PWM_Green_CONFIG) */
  56:.\Generated_Source\PSoC4/PWM_Green.c **** 
  57:.\Generated_Source\PSoC4/PWM_Green.c ****     #if (PWM_Green__TIMER == PWM_Green_CONFIG)
  58:.\Generated_Source\PSoC4/PWM_Green.c ****         PWM_Green_CONTROL_REG = PWM_Green_CTRL_TIMER_BASE_CONFIG;
  59:.\Generated_Source\PSoC4/PWM_Green.c ****         
  60:.\Generated_Source\PSoC4/PWM_Green.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/PWM_Green.c ****         PWM_Green_TRIG_CONTROL1_REG  = PWM_Green_TIMER_SIGNALS_MODES;
  62:.\Generated_Source\PSoC4/PWM_Green.c ****     
  63:.\Generated_Source\PSoC4/PWM_Green.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/PWM_Green.c ****         PWM_Green_SetInterruptMode(PWM_Green_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/PWM_Green.c ****         
  66:.\Generated_Source\PSoC4/PWM_Green.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/PWM_Green.c ****         PWM_Green_WritePeriod(PWM_Green_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/PWM_Green.c **** 
  69:.\Generated_Source\PSoC4/PWM_Green.c ****         #if (PWM_Green__COMPARE == PWM_Green_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/PWM_Green.c ****             PWM_Green_WriteCompare(PWM_Green_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/PWM_Green.c **** 
  72:.\Generated_Source\PSoC4/PWM_Green.c ****             #if (1u == PWM_Green_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/PWM_Green.c ****                 PWM_Green_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/PWM_Green.c ****                 PWM_Green_WriteCompareBuf(PWM_Green_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/PWM_Green.c ****             #endif  /* (1u == PWM_Green_TC_COMPARE_SWAP) */
  76:.\Generated_Source\PSoC4/PWM_Green.c ****         #endif  /* (PWM_Green__COMPARE == PWM_Green_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/PWM_Green.c **** 
  78:.\Generated_Source\PSoC4/PWM_Green.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/PWM_Green.c ****         #if (PWM_Green_CY_TCPWM_V2 && PWM_Green_TIMER_UPDOWN_CNT_USED && !PWM_Green_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/PWM_Green.c ****             PWM_Green_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/PWM_Green.c ****         #elif(PWM_Green__COUNT_DOWN == PWM_Green_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/PWM_Green.c ****             PWM_Green_WriteCounter(PWM_Green_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/PWM_Green.c ****         #else
  84:.\Generated_Source\PSoC4/PWM_Green.c ****             PWM_Green_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/PWM_Green.c ****         #endif /* (PWM_Green_CY_TCPWM_V2 && PWM_Green_TIMER_UPDOWN_CNT_USED && !PWM_Green_CY_TCPWM_
  86:.\Generated_Source\PSoC4/PWM_Green.c ****     #endif  /* (PWM_Green__TIMER == PWM_Green_CONFIG) */
  87:.\Generated_Source\PSoC4/PWM_Green.c **** 
  88:.\Generated_Source\PSoC4/PWM_Green.c ****     #if (PWM_Green__PWM_SEL == PWM_Green_CONFIG)
  89:.\Generated_Source\PSoC4/PWM_Green.c ****         PWM_Green_CONTROL_REG = PWM_Green_CTRL_PWM_BASE_CONFIG;
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 3


  90:.\Generated_Source\PSoC4/PWM_Green.c **** 
  91:.\Generated_Source\PSoC4/PWM_Green.c ****         #if (PWM_Green__PWM_PR == PWM_Green_PWM_MODE)
  92:.\Generated_Source\PSoC4/PWM_Green.c ****             PWM_Green_CONTROL_REG |= PWM_Green_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/PWM_Green.c ****             PWM_Green_WriteCounter(PWM_Green_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/PWM_Green.c ****         #else
  95:.\Generated_Source\PSoC4/PWM_Green.c ****             PWM_Green_CONTROL_REG |= PWM_Green_CTRL_PWM_ALIGN | PWM_Green_CTRL_PWM_KILL_EVENT;
  96:.\Generated_Source\PSoC4/PWM_Green.c ****             
  97:.\Generated_Source\PSoC4/PWM_Green.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/PWM_Green.c ****             #if (PWM_Green_CY_TCPWM_V2 && PWM_Green_PWM_UPDOWN_CNT_USED && !PWM_Green_CY_TCPWM_4000
  99:.\Generated_Source\PSoC4/PWM_Green.c ****                 PWM_Green_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/PWM_Green.c ****             #elif (PWM_Green__RIGHT == PWM_Green_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/PWM_Green.c ****                 PWM_Green_WriteCounter(PWM_Green_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/PWM_Green.c ****             #else 
 103:.\Generated_Source\PSoC4/PWM_Green.c ****                 PWM_Green_WriteCounter(0u);
 104:.\Generated_Source\PSoC4/PWM_Green.c ****             #endif  /* (PWM_Green_CY_TCPWM_V2 && PWM_Green_PWM_UPDOWN_CNT_USED && !PWM_Green_CY_TCP
 105:.\Generated_Source\PSoC4/PWM_Green.c ****         #endif  /* (PWM_Green__PWM_PR == PWM_Green_PWM_MODE) */
 106:.\Generated_Source\PSoC4/PWM_Green.c **** 
 107:.\Generated_Source\PSoC4/PWM_Green.c ****         #if (PWM_Green__PWM_DT == PWM_Green_PWM_MODE)
 108:.\Generated_Source\PSoC4/PWM_Green.c ****             PWM_Green_CONTROL_REG |= PWM_Green_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/PWM_Green.c ****         #endif  /* (PWM_Green__PWM_DT == PWM_Green_PWM_MODE) */
 110:.\Generated_Source\PSoC4/PWM_Green.c **** 
 111:.\Generated_Source\PSoC4/PWM_Green.c ****         #if (PWM_Green__PWM == PWM_Green_PWM_MODE)
 112:.\Generated_Source\PSoC4/PWM_Green.c ****             PWM_Green_CONTROL_REG |= PWM_Green_CTRL_PWM_PRESCALER;
 113:.\Generated_Source\PSoC4/PWM_Green.c ****         #endif  /* (PWM_Green__PWM == PWM_Green_PWM_MODE) */
 114:.\Generated_Source\PSoC4/PWM_Green.c **** 
 115:.\Generated_Source\PSoC4/PWM_Green.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/PWM_Green.c ****         PWM_Green_TRIG_CONTROL1_REG  = PWM_Green_PWM_SIGNALS_MODES;
 117:.\Generated_Source\PSoC4/PWM_Green.c ****     
 118:.\Generated_Source\PSoC4/PWM_Green.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/PWM_Green.c ****         PWM_Green_SetInterruptMode(PWM_Green_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/PWM_Green.c **** 
 121:.\Generated_Source\PSoC4/PWM_Green.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/PWM_Green.c ****         #if (PWM_Green__PWM_PR == PWM_Green_PWM_MODE)
 123:.\Generated_Source\PSoC4/PWM_Green.c ****             PWM_Green_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/PWM_Green.c ****                     (PWM_Green_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/PWM_Green.c ****                     PWM_Green_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/PWM_Green.c ****                     PWM_Green_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/PWM_Green.c ****         #else
 128:.\Generated_Source\PSoC4/PWM_Green.c ****             #if (PWM_Green__LEFT == PWM_Green_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/PWM_Green.c ****                 PWM_Green_TRIG_CONTROL2_REG = PWM_Green_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/PWM_Green.c ****             #endif  /* ( PWM_Green_PWM_LEFT == PWM_Green_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/PWM_Green.c **** 
 132:.\Generated_Source\PSoC4/PWM_Green.c ****             #if (PWM_Green__RIGHT == PWM_Green_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/PWM_Green.c ****                 PWM_Green_TRIG_CONTROL2_REG = PWM_Green_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/PWM_Green.c ****             #endif  /* ( PWM_Green_PWM_RIGHT == PWM_Green_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/PWM_Green.c **** 
 136:.\Generated_Source\PSoC4/PWM_Green.c ****             #if (PWM_Green__CENTER == PWM_Green_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/PWM_Green.c ****                 PWM_Green_TRIG_CONTROL2_REG = PWM_Green_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/PWM_Green.c ****             #endif  /* ( PWM_Green_PWM_CENTER == PWM_Green_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/PWM_Green.c **** 
 140:.\Generated_Source\PSoC4/PWM_Green.c ****             #if (PWM_Green__ASYMMETRIC == PWM_Green_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/PWM_Green.c ****                 PWM_Green_TRIG_CONTROL2_REG = PWM_Green_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/PWM_Green.c ****             #endif  /* (PWM_Green__ASYMMETRIC == PWM_Green_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/PWM_Green.c ****         #endif  /* (PWM_Green__PWM_PR == PWM_Green_PWM_MODE) */
 144:.\Generated_Source\PSoC4/PWM_Green.c **** 
 145:.\Generated_Source\PSoC4/PWM_Green.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/PWM_Green.c ****         PWM_Green_WritePeriod(PWM_Green_PWM_PERIOD_VALUE );
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 4


 147:.\Generated_Source\PSoC4/PWM_Green.c ****         PWM_Green_WriteCompare(PWM_Green_PWM_COMPARE_VALUE);
 148:.\Generated_Source\PSoC4/PWM_Green.c **** 
 149:.\Generated_Source\PSoC4/PWM_Green.c ****         #if (1u == PWM_Green_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/PWM_Green.c ****             PWM_Green_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/PWM_Green.c ****             PWM_Green_WriteCompareBuf(PWM_Green_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/PWM_Green.c ****         #endif  /* (1u == PWM_Green_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/PWM_Green.c **** 
 154:.\Generated_Source\PSoC4/PWM_Green.c ****         #if (1u == PWM_Green_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/PWM_Green.c ****             PWM_Green_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/PWM_Green.c ****             PWM_Green_WritePeriodBuf(PWM_Green_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/PWM_Green.c ****         #endif  /* (1u == PWM_Green_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/PWM_Green.c ****     #endif  /* (PWM_Green__PWM_SEL == PWM_Green_CONFIG) */
 159:.\Generated_Source\PSoC4/PWM_Green.c ****     
 160:.\Generated_Source\PSoC4/PWM_Green.c **** }
 161:.\Generated_Source\PSoC4/PWM_Green.c **** 
 162:.\Generated_Source\PSoC4/PWM_Green.c **** 
 163:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_Enable
 165:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/PWM_Green.c **** *
 167:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 168:.\Generated_Source\PSoC4/PWM_Green.c **** *  Enables the PWM_Green.
 169:.\Generated_Source\PSoC4/PWM_Green.c **** *
 170:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 171:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 172:.\Generated_Source\PSoC4/PWM_Green.c **** *
 173:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 174:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 175:.\Generated_Source\PSoC4/PWM_Green.c **** *
 176:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_Enable(void)
 178:.\Generated_Source\PSoC4/PWM_Green.c **** {
 179:.\Generated_Source\PSoC4/PWM_Green.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/PWM_Green.c **** 
 181:.\Generated_Source\PSoC4/PWM_Green.c ****     enableInterrupts = CyEnterCriticalSection();
 182:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_BLOCK_CONTROL_REG |= PWM_Green_MASK;
 183:.\Generated_Source\PSoC4/PWM_Green.c ****     CyExitCriticalSection(enableInterrupts);
 184:.\Generated_Source\PSoC4/PWM_Green.c **** 
 185:.\Generated_Source\PSoC4/PWM_Green.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/PWM_Green.c ****     #if (PWM_Green__PWM_SEL == PWM_Green_CONFIG)
 187:.\Generated_Source\PSoC4/PWM_Green.c ****         #if (0u == PWM_Green_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/PWM_Green.c ****             PWM_Green_TriggerCommand(PWM_Green_MASK, PWM_Green_CMD_START);
 189:.\Generated_Source\PSoC4/PWM_Green.c ****         #endif /* (0u == PWM_Green_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/PWM_Green.c ****     #endif /* (PWM_Green__PWM_SEL == PWM_Green_CONFIG) */
 191:.\Generated_Source\PSoC4/PWM_Green.c **** 
 192:.\Generated_Source\PSoC4/PWM_Green.c ****     #if (PWM_Green__TIMER == PWM_Green_CONFIG)
 193:.\Generated_Source\PSoC4/PWM_Green.c ****         #if (0u == PWM_Green_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/PWM_Green.c ****             PWM_Green_TriggerCommand(PWM_Green_MASK, PWM_Green_CMD_START);
 195:.\Generated_Source\PSoC4/PWM_Green.c ****         #endif /* (0u == PWM_Green_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/PWM_Green.c ****     #endif /* (PWM_Green__TIMER == PWM_Green_CONFIG) */
 197:.\Generated_Source\PSoC4/PWM_Green.c **** }
 198:.\Generated_Source\PSoC4/PWM_Green.c **** 
 199:.\Generated_Source\PSoC4/PWM_Green.c **** 
 200:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 201:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_Start
 202:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 203:.\Generated_Source\PSoC4/PWM_Green.c **** *
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 5


 204:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 205:.\Generated_Source\PSoC4/PWM_Green.c **** *  Initializes the PWM_Green with default customizer
 206:.\Generated_Source\PSoC4/PWM_Green.c **** *  values when called the first time and enables the PWM_Green.
 207:.\Generated_Source\PSoC4/PWM_Green.c **** *  For subsequent calls the configuration is left unchanged and the component is
 208:.\Generated_Source\PSoC4/PWM_Green.c **** *  just enabled.
 209:.\Generated_Source\PSoC4/PWM_Green.c **** *
 210:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 211:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 212:.\Generated_Source\PSoC4/PWM_Green.c **** *
 213:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 214:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 215:.\Generated_Source\PSoC4/PWM_Green.c **** *
 216:.\Generated_Source\PSoC4/PWM_Green.c **** * Global variables:
 217:.\Generated_Source\PSoC4/PWM_Green.c **** *  PWM_Green_initVar: global variable is used to indicate initial
 218:.\Generated_Source\PSoC4/PWM_Green.c **** *  configuration of this component.  The variable is initialized to zero and set
 219:.\Generated_Source\PSoC4/PWM_Green.c **** *  to 1 the first time PWM_Green_Start() is called. This allows
 220:.\Generated_Source\PSoC4/PWM_Green.c **** *  enabling/disabling a component without re-initialization in all subsequent
 221:.\Generated_Source\PSoC4/PWM_Green.c **** *  calls to the PWM_Green_Start() routine.
 222:.\Generated_Source\PSoC4/PWM_Green.c **** *
 223:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 224:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_Start(void)
 225:.\Generated_Source\PSoC4/PWM_Green.c **** {
 226:.\Generated_Source\PSoC4/PWM_Green.c ****     if (0u == PWM_Green_initVar)
 227:.\Generated_Source\PSoC4/PWM_Green.c ****     {
 228:.\Generated_Source\PSoC4/PWM_Green.c ****         PWM_Green_Init();
 229:.\Generated_Source\PSoC4/PWM_Green.c ****         PWM_Green_initVar = 1u;
 230:.\Generated_Source\PSoC4/PWM_Green.c ****     }
 231:.\Generated_Source\PSoC4/PWM_Green.c **** 
 232:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_Enable();
 233:.\Generated_Source\PSoC4/PWM_Green.c **** }
 234:.\Generated_Source\PSoC4/PWM_Green.c **** 
 235:.\Generated_Source\PSoC4/PWM_Green.c **** 
 236:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 237:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_Stop
 238:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 239:.\Generated_Source\PSoC4/PWM_Green.c **** *
 240:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 241:.\Generated_Source\PSoC4/PWM_Green.c **** *  Disables the PWM_Green.
 242:.\Generated_Source\PSoC4/PWM_Green.c **** *
 243:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 244:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 245:.\Generated_Source\PSoC4/PWM_Green.c **** *
 246:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 247:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 248:.\Generated_Source\PSoC4/PWM_Green.c **** *
 249:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 250:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_Stop(void)
 251:.\Generated_Source\PSoC4/PWM_Green.c **** {
  26              		.loc 1 251 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
 252:.\Generated_Source\PSoC4/PWM_Green.c ****     uint8 enableInterrupts;
 253:.\Generated_Source\PSoC4/PWM_Green.c **** 
 254:.\Generated_Source\PSoC4/PWM_Green.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 6


  32              		.loc 1 254 0
  33 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  34              	.LVL0:
 255:.\Generated_Source\PSoC4/PWM_Green.c **** 
 256:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_BLOCK_CONTROL_REG &= (uint32)~PWM_Green_MASK;
  35              		.loc 1 256 0
  36 0006 044A     		ldr	r2, .L2
  37 0008 1368     		ldr	r3, [r2]
  38 000a 0121     		mov	r1, #1
  39 000c 8B43     		bic	r3, r1
  40 000e 1360     		str	r3, [r2]
 257:.\Generated_Source\PSoC4/PWM_Green.c **** 
 258:.\Generated_Source\PSoC4/PWM_Green.c ****     CyExitCriticalSection(enableInterrupts);
  41              		.loc 1 258 0
  42 0010 FFF7FEFF 		bl	CyExitCriticalSection
  43              	.LVL1:
 259:.\Generated_Source\PSoC4/PWM_Green.c **** }
  44              		.loc 1 259 0
  45              		@ sp needed
  46 0014 08BD     		pop	{r3, pc}
  47              	.L3:
  48 0016 C046     		.align	2
  49              	.L2:
  50 0018 00002040 		.word	1075838976
  51              		.cfi_endproc
  52              	.LFE4:
  53              		.size	PWM_Green_Stop, .-PWM_Green_Stop
  54              		.section	.text.PWM_Green_SetMode,"ax",%progbits
  55              		.align	2
  56              		.global	PWM_Green_SetMode
  57              		.code	16
  58              		.thumb_func
  59              		.type	PWM_Green_SetMode, %function
  60              	PWM_Green_SetMode:
  61              	.LFB5:
 260:.\Generated_Source\PSoC4/PWM_Green.c **** 
 261:.\Generated_Source\PSoC4/PWM_Green.c **** 
 262:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_SetMode
 264:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 265:.\Generated_Source\PSoC4/PWM_Green.c **** *
 266:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 267:.\Generated_Source\PSoC4/PWM_Green.c **** *  Sets the operation mode of the PWM_Green. This function is used when
 268:.\Generated_Source\PSoC4/PWM_Green.c **** *  configured as a generic PWM_Green and the actual mode of operation is
 269:.\Generated_Source\PSoC4/PWM_Green.c **** *  set at runtime. The mode must be set while the component is disabled.
 270:.\Generated_Source\PSoC4/PWM_Green.c **** *
 271:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 272:.\Generated_Source\PSoC4/PWM_Green.c **** *  mode: Mode for the PWM_Green to operate in
 273:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
 274:.\Generated_Source\PSoC4/PWM_Green.c **** *   - PWM_Green_MODE_TIMER_COMPARE - Timer / Counter with
 275:.\Generated_Source\PSoC4/PWM_Green.c **** *                                                 compare capability
 276:.\Generated_Source\PSoC4/PWM_Green.c **** *         - PWM_Green_MODE_TIMER_CAPTURE - Timer / Counter with
 277:.\Generated_Source\PSoC4/PWM_Green.c **** *                                                 capture capability
 278:.\Generated_Source\PSoC4/PWM_Green.c **** *         - PWM_Green_MODE_QUAD - Quadrature decoder
 279:.\Generated_Source\PSoC4/PWM_Green.c **** *         - PWM_Green_MODE_PWM - PWM
 280:.\Generated_Source\PSoC4/PWM_Green.c **** *         - PWM_Green_MODE_PWM_DT - PWM with dead time
 281:.\Generated_Source\PSoC4/PWM_Green.c **** *         - PWM_Green_MODE_PWM_PR - PWM with pseudo random capability
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 7


 282:.\Generated_Source\PSoC4/PWM_Green.c **** *
 283:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 284:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 285:.\Generated_Source\PSoC4/PWM_Green.c **** *
 286:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 287:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_SetMode(uint32 mode)
 288:.\Generated_Source\PSoC4/PWM_Green.c **** {
  62              		.loc 1 288 0
  63              		.cfi_startproc
  64              	.LVL2:
  65 0000 10B5     		push	{r4, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 4, -8
  68              		.cfi_offset 14, -4
  69 0002 041C     		mov	r4, r0
 289:.\Generated_Source\PSoC4/PWM_Green.c ****     uint8 enableInterrupts;
 290:.\Generated_Source\PSoC4/PWM_Green.c **** 
 291:.\Generated_Source\PSoC4/PWM_Green.c ****     enableInterrupts = CyEnterCriticalSection();
  70              		.loc 1 291 0
  71 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  72              	.LVL3:
 292:.\Generated_Source\PSoC4/PWM_Green.c **** 
 293:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_CONTROL_REG &= (uint32)~PWM_Green_MODE_MASK;
  73              		.loc 1 293 0
  74 0008 054B     		ldr	r3, .L5
  75 000a 1968     		ldr	r1, [r3]
  76 000c 054A     		ldr	r2, .L5+4
  77 000e 0A40     		and	r2, r1
  78 0010 1A60     		str	r2, [r3]
 294:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_CONTROL_REG |= mode;
  79              		.loc 1 294 0
  80 0012 1A68     		ldr	r2, [r3]
  81 0014 1443     		orr	r4, r2
  82              	.LVL4:
  83 0016 1C60     		str	r4, [r3]
 295:.\Generated_Source\PSoC4/PWM_Green.c **** 
 296:.\Generated_Source\PSoC4/PWM_Green.c ****     CyExitCriticalSection(enableInterrupts);
  84              		.loc 1 296 0
  85 0018 FFF7FEFF 		bl	CyExitCriticalSection
  86              	.LVL5:
 297:.\Generated_Source\PSoC4/PWM_Green.c **** }
  87              		.loc 1 297 0
  88              		@ sp needed
  89 001c 10BD     		pop	{r4, pc}
  90              	.L6:
  91 001e C046     		.align	2
  92              	.L5:
  93 0020 00012040 		.word	1075839232
  94 0024 FFFFFFF8 		.word	-117440513
  95              		.cfi_endproc
  96              	.LFE5:
  97              		.size	PWM_Green_SetMode, .-PWM_Green_SetMode
  98              		.section	.text.PWM_Green_SetQDMode,"ax",%progbits
  99              		.align	2
 100              		.global	PWM_Green_SetQDMode
 101              		.code	16
 102              		.thumb_func
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 8


 103              		.type	PWM_Green_SetQDMode, %function
 104              	PWM_Green_SetQDMode:
 105              	.LFB6:
 298:.\Generated_Source\PSoC4/PWM_Green.c **** 
 299:.\Generated_Source\PSoC4/PWM_Green.c **** 
 300:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 301:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_SetQDMode
 302:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 303:.\Generated_Source\PSoC4/PWM_Green.c **** *
 304:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 305:.\Generated_Source\PSoC4/PWM_Green.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 306:.\Generated_Source\PSoC4/PWM_Green.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 307:.\Generated_Source\PSoC4/PWM_Green.c **** *
 308:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 309:.\Generated_Source\PSoC4/PWM_Green.c **** *  qdMode: Quadrature Decoder mode
 310:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
 311:.\Generated_Source\PSoC4/PWM_Green.c **** *         - PWM_Green_MODE_X1 - Counts on phi 1 rising
 312:.\Generated_Source\PSoC4/PWM_Green.c **** *         - PWM_Green_MODE_X2 - Counts on both edges of phi1 (2x faster)
 313:.\Generated_Source\PSoC4/PWM_Green.c **** *         - PWM_Green_MODE_X4 - Counts on both edges of phi1 and phi2
 314:.\Generated_Source\PSoC4/PWM_Green.c **** *                                        (4x faster)
 315:.\Generated_Source\PSoC4/PWM_Green.c **** *
 316:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 317:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 318:.\Generated_Source\PSoC4/PWM_Green.c **** *
 319:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 320:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_SetQDMode(uint32 qdMode)
 321:.\Generated_Source\PSoC4/PWM_Green.c **** {
 106              		.loc 1 321 0
 107              		.cfi_startproc
 108              	.LVL6:
 109 0000 10B5     		push	{r4, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 4, -8
 112              		.cfi_offset 14, -4
 113 0002 041C     		mov	r4, r0
 322:.\Generated_Source\PSoC4/PWM_Green.c ****     uint8 enableInterrupts;
 323:.\Generated_Source\PSoC4/PWM_Green.c **** 
 324:.\Generated_Source\PSoC4/PWM_Green.c ****     enableInterrupts = CyEnterCriticalSection();
 114              		.loc 1 324 0
 115 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 116              	.LVL7:
 325:.\Generated_Source\PSoC4/PWM_Green.c **** 
 326:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_CONTROL_REG &= (uint32)~PWM_Green_QUAD_MODE_MASK;
 117              		.loc 1 326 0
 118 0008 054B     		ldr	r3, .L8
 119 000a 1968     		ldr	r1, [r3]
 120 000c 054A     		ldr	r2, .L8+4
 121 000e 0A40     		and	r2, r1
 122 0010 1A60     		str	r2, [r3]
 327:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_CONTROL_REG |= qdMode;
 123              		.loc 1 327 0
 124 0012 1A68     		ldr	r2, [r3]
 125 0014 1443     		orr	r4, r2
 126              	.LVL8:
 127 0016 1C60     		str	r4, [r3]
 328:.\Generated_Source\PSoC4/PWM_Green.c **** 
 329:.\Generated_Source\PSoC4/PWM_Green.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 9


 128              		.loc 1 329 0
 129 0018 FFF7FEFF 		bl	CyExitCriticalSection
 130              	.LVL9:
 330:.\Generated_Source\PSoC4/PWM_Green.c **** }
 131              		.loc 1 330 0
 132              		@ sp needed
 133 001c 10BD     		pop	{r4, pc}
 134              	.L9:
 135 001e C046     		.align	2
 136              	.L8:
 137 0020 00012040 		.word	1075839232
 138 0024 FFFF8FFF 		.word	-7340033
 139              		.cfi_endproc
 140              	.LFE6:
 141              		.size	PWM_Green_SetQDMode, .-PWM_Green_SetQDMode
 142              		.section	.text.PWM_Green_SetPrescaler,"ax",%progbits
 143              		.align	2
 144              		.global	PWM_Green_SetPrescaler
 145              		.code	16
 146              		.thumb_func
 147              		.type	PWM_Green_SetPrescaler, %function
 148              	PWM_Green_SetPrescaler:
 149              	.LFB7:
 331:.\Generated_Source\PSoC4/PWM_Green.c **** 
 332:.\Generated_Source\PSoC4/PWM_Green.c **** 
 333:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 334:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_SetPrescaler
 335:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 336:.\Generated_Source\PSoC4/PWM_Green.c **** *
 337:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 338:.\Generated_Source\PSoC4/PWM_Green.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 339:.\Generated_Source\PSoC4/PWM_Green.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 340:.\Generated_Source\PSoC4/PWM_Green.c **** *
 341:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 342:.\Generated_Source\PSoC4/PWM_Green.c **** *  prescaler: Prescaler divider value
 343:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
 344:.\Generated_Source\PSoC4/PWM_Green.c **** *         - PWM_Green_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 345:.\Generated_Source\PSoC4/PWM_Green.c **** *         - PWM_Green_PRESCALE_DIVBY2    - Divide by 2
 346:.\Generated_Source\PSoC4/PWM_Green.c **** *         - PWM_Green_PRESCALE_DIVBY4    - Divide by 4
 347:.\Generated_Source\PSoC4/PWM_Green.c **** *         - PWM_Green_PRESCALE_DIVBY8    - Divide by 8
 348:.\Generated_Source\PSoC4/PWM_Green.c **** *         - PWM_Green_PRESCALE_DIVBY16   - Divide by 16
 349:.\Generated_Source\PSoC4/PWM_Green.c **** *         - PWM_Green_PRESCALE_DIVBY32   - Divide by 32
 350:.\Generated_Source\PSoC4/PWM_Green.c **** *         - PWM_Green_PRESCALE_DIVBY64   - Divide by 64
 351:.\Generated_Source\PSoC4/PWM_Green.c **** *         - PWM_Green_PRESCALE_DIVBY128  - Divide by 128
 352:.\Generated_Source\PSoC4/PWM_Green.c **** *
 353:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 354:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 355:.\Generated_Source\PSoC4/PWM_Green.c **** *
 356:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_SetPrescaler(uint32 prescaler)
 358:.\Generated_Source\PSoC4/PWM_Green.c **** {
 150              		.loc 1 358 0
 151              		.cfi_startproc
 152              	.LVL10:
 153 0000 10B5     		push	{r4, lr}
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 10


 156              		.cfi_offset 14, -4
 157 0002 041C     		mov	r4, r0
 359:.\Generated_Source\PSoC4/PWM_Green.c ****     uint8 enableInterrupts;
 360:.\Generated_Source\PSoC4/PWM_Green.c **** 
 361:.\Generated_Source\PSoC4/PWM_Green.c ****     enableInterrupts = CyEnterCriticalSection();
 158              		.loc 1 361 0
 159 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 160              	.LVL11:
 362:.\Generated_Source\PSoC4/PWM_Green.c **** 
 363:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_CONTROL_REG &= (uint32)~PWM_Green_PRESCALER_MASK;
 161              		.loc 1 363 0
 162 0008 054B     		ldr	r3, .L11
 163 000a 1968     		ldr	r1, [r3]
 164 000c 054A     		ldr	r2, .L11+4
 165 000e 0A40     		and	r2, r1
 166 0010 1A60     		str	r2, [r3]
 364:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_CONTROL_REG |= prescaler;
 167              		.loc 1 364 0
 168 0012 1A68     		ldr	r2, [r3]
 169 0014 1443     		orr	r4, r2
 170              	.LVL12:
 171 0016 1C60     		str	r4, [r3]
 365:.\Generated_Source\PSoC4/PWM_Green.c **** 
 366:.\Generated_Source\PSoC4/PWM_Green.c ****     CyExitCriticalSection(enableInterrupts);
 172              		.loc 1 366 0
 173 0018 FFF7FEFF 		bl	CyExitCriticalSection
 174              	.LVL13:
 367:.\Generated_Source\PSoC4/PWM_Green.c **** }
 175              		.loc 1 367 0
 176              		@ sp needed
 177 001c 10BD     		pop	{r4, pc}
 178              	.L12:
 179 001e C046     		.align	2
 180              	.L11:
 181 0020 00012040 		.word	1075839232
 182 0024 FF00FFFF 		.word	-65281
 183              		.cfi_endproc
 184              	.LFE7:
 185              		.size	PWM_Green_SetPrescaler, .-PWM_Green_SetPrescaler
 186              		.section	.text.PWM_Green_SetOneShot,"ax",%progbits
 187              		.align	2
 188              		.global	PWM_Green_SetOneShot
 189              		.code	16
 190              		.thumb_func
 191              		.type	PWM_Green_SetOneShot, %function
 192              	PWM_Green_SetOneShot:
 193              	.LFB8:
 368:.\Generated_Source\PSoC4/PWM_Green.c **** 
 369:.\Generated_Source\PSoC4/PWM_Green.c **** 
 370:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_SetOneShot
 372:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/PWM_Green.c **** *
 374:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 375:.\Generated_Source\PSoC4/PWM_Green.c **** *  Writes the register that controls whether the PWM_Green runs
 376:.\Generated_Source\PSoC4/PWM_Green.c **** *  continuously or stops when terminal count is reached.  By default the
 377:.\Generated_Source\PSoC4/PWM_Green.c **** *  PWM_Green operates in the continuous mode.
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 11


 378:.\Generated_Source\PSoC4/PWM_Green.c **** *
 379:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 380:.\Generated_Source\PSoC4/PWM_Green.c **** *  oneShotEnable
 381:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
 382:.\Generated_Source\PSoC4/PWM_Green.c **** *     - 0 - Continuous
 383:.\Generated_Source\PSoC4/PWM_Green.c **** *     - 1 - Enable One Shot
 384:.\Generated_Source\PSoC4/PWM_Green.c **** *
 385:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 386:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 387:.\Generated_Source\PSoC4/PWM_Green.c **** *
 388:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_SetOneShot(uint32 oneShotEnable)
 390:.\Generated_Source\PSoC4/PWM_Green.c **** {
 194              		.loc 1 390 0
 195              		.cfi_startproc
 196              	.LVL14:
 197 0000 10B5     		push	{r4, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
 201 0002 041C     		mov	r4, r0
 391:.\Generated_Source\PSoC4/PWM_Green.c ****     uint8 enableInterrupts;
 392:.\Generated_Source\PSoC4/PWM_Green.c **** 
 393:.\Generated_Source\PSoC4/PWM_Green.c ****     enableInterrupts = CyEnterCriticalSection();
 202              		.loc 1 393 0
 203 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 204              	.LVL15:
 394:.\Generated_Source\PSoC4/PWM_Green.c **** 
 395:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_CONTROL_REG &= (uint32)~PWM_Green_ONESHOT_MASK;
 205              		.loc 1 395 0
 206 0008 064B     		ldr	r3, .L14
 207 000a 1968     		ldr	r1, [r3]
 208 000c 064A     		ldr	r2, .L14+4
 209 000e 0A40     		and	r2, r1
 210 0010 1A60     		str	r2, [r3]
 396:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_Green_1BIT_MASK) <<
 211              		.loc 1 396 0
 212 0012 1A68     		ldr	r2, [r3]
 213 0014 0121     		mov	r1, #1
 214 0016 0C40     		and	r4, r1
 215              	.LVL16:
 216 0018 A404     		lsl	r4, r4, #18
 217 001a 1443     		orr	r4, r2
 218 001c 1C60     		str	r4, [r3]
 397:.\Generated_Source\PSoC4/PWM_Green.c ****                                                                PWM_Green_ONESHOT_SHIFT));
 398:.\Generated_Source\PSoC4/PWM_Green.c **** 
 399:.\Generated_Source\PSoC4/PWM_Green.c ****     CyExitCriticalSection(enableInterrupts);
 219              		.loc 1 399 0
 220 001e FFF7FEFF 		bl	CyExitCriticalSection
 221              	.LVL17:
 400:.\Generated_Source\PSoC4/PWM_Green.c **** }
 222              		.loc 1 400 0
 223              		@ sp needed
 224 0022 10BD     		pop	{r4, pc}
 225              	.L15:
 226              		.align	2
 227              	.L14:
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 12


 228 0024 00012040 		.word	1075839232
 229 0028 FFFFFBFF 		.word	-262145
 230              		.cfi_endproc
 231              	.LFE8:
 232              		.size	PWM_Green_SetOneShot, .-PWM_Green_SetOneShot
 233              		.section	.text.PWM_Green_SetPWMMode,"ax",%progbits
 234              		.align	2
 235              		.global	PWM_Green_SetPWMMode
 236              		.code	16
 237              		.thumb_func
 238              		.type	PWM_Green_SetPWMMode, %function
 239              	PWM_Green_SetPWMMode:
 240              	.LFB9:
 401:.\Generated_Source\PSoC4/PWM_Green.c **** 
 402:.\Generated_Source\PSoC4/PWM_Green.c **** 
 403:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 404:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_SetPWMMode
 405:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 406:.\Generated_Source\PSoC4/PWM_Green.c **** *
 407:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 408:.\Generated_Source\PSoC4/PWM_Green.c **** *  Writes the control register that determines what mode of operation the PWM
 409:.\Generated_Source\PSoC4/PWM_Green.c **** *  output lines are driven in.  There is a setting for what to do on a
 410:.\Generated_Source\PSoC4/PWM_Green.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 411:.\Generated_Source\PSoC4/PWM_Green.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 412:.\Generated_Source\PSoC4/PWM_Green.c **** *  the mode.
 413:.\Generated_Source\PSoC4/PWM_Green.c **** *
 414:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 415:.\Generated_Source\PSoC4/PWM_Green.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 416:.\Generated_Source\PSoC4/PWM_Green.c **** *  for each of the three or use one of the preconfigured PWM settings.
 417:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
 418:.\Generated_Source\PSoC4/PWM_Green.c **** *     - CC_MATCH_SET        - Set on comparison match
 419:.\Generated_Source\PSoC4/PWM_Green.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 420:.\Generated_Source\PSoC4/PWM_Green.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 421:.\Generated_Source\PSoC4/PWM_Green.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 422:.\Generated_Source\PSoC4/PWM_Green.c **** *     - OVERLOW_SET         - Set on overflow
 423:.\Generated_Source\PSoC4/PWM_Green.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 424:.\Generated_Source\PSoC4/PWM_Green.c **** *     - OVERLOW_INVERT      - Invert on overflow
 425:.\Generated_Source\PSoC4/PWM_Green.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 426:.\Generated_Source\PSoC4/PWM_Green.c **** *     - UNDERFLOW_SET       - Set on underflow
 427:.\Generated_Source\PSoC4/PWM_Green.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 428:.\Generated_Source\PSoC4/PWM_Green.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 429:.\Generated_Source\PSoC4/PWM_Green.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 430:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 431:.\Generated_Source\PSoC4/PWM_Green.c **** *                             with up counting mode
 432:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 433:.\Generated_Source\PSoC4/PWM_Green.c **** *                             with down counting mode
 434:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 435:.\Generated_Source\PSoC4/PWM_Green.c **** *                             combined with up/down 0 mode
 436:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 437:.\Generated_Source\PSoC4/PWM_Green.c **** *                             with up/down 1 mode
 438:.\Generated_Source\PSoC4/PWM_Green.c **** *
 439:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 440:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 441:.\Generated_Source\PSoC4/PWM_Green.c **** *
 442:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 443:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_SetPWMMode(uint32 modeMask)
 444:.\Generated_Source\PSoC4/PWM_Green.c **** {
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 13


 241              		.loc 1 444 0
 242              		.cfi_startproc
 243              	.LVL18:
 445:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_TRIG_CONTROL2_REG = (modeMask & PWM_Green_6BIT_MASK);
 244              		.loc 1 445 0
 245 0000 3F23     		mov	r3, #63
 246 0002 1840     		and	r0, r3
 247              	.LVL19:
 248 0004 014B     		ldr	r3, .L17
 249 0006 1860     		str	r0, [r3]
 446:.\Generated_Source\PSoC4/PWM_Green.c **** }
 250              		.loc 1 446 0
 251              		@ sp needed
 252 0008 7047     		bx	lr
 253              	.L18:
 254 000a C046     		.align	2
 255              	.L17:
 256 000c 28012040 		.word	1075839272
 257              		.cfi_endproc
 258              	.LFE9:
 259              		.size	PWM_Green_SetPWMMode, .-PWM_Green_SetPWMMode
 260              		.section	.text.PWM_Green_SetPWMSyncKill,"ax",%progbits
 261              		.align	2
 262              		.global	PWM_Green_SetPWMSyncKill
 263              		.code	16
 264              		.thumb_func
 265              		.type	PWM_Green_SetPWMSyncKill, %function
 266              	PWM_Green_SetPWMSyncKill:
 267              	.LFB10:
 447:.\Generated_Source\PSoC4/PWM_Green.c **** 
 448:.\Generated_Source\PSoC4/PWM_Green.c **** 
 449:.\Generated_Source\PSoC4/PWM_Green.c **** 
 450:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_SetPWMSyncKill
 452:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 453:.\Generated_Source\PSoC4/PWM_Green.c **** *
 454:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 455:.\Generated_Source\PSoC4/PWM_Green.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 456:.\Generated_Source\PSoC4/PWM_Green.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 457:.\Generated_Source\PSoC4/PWM_Green.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 458:.\Generated_Source\PSoC4/PWM_Green.c **** *  and PWM with dead time modes.
 459:.\Generated_Source\PSoC4/PWM_Green.c **** *
 460:.\Generated_Source\PSoC4/PWM_Green.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 461:.\Generated_Source\PSoC4/PWM_Green.c **** *  signals until the next terminal count.
 462:.\Generated_Source\PSoC4/PWM_Green.c **** *
 463:.\Generated_Source\PSoC4/PWM_Green.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 464:.\Generated_Source\PSoC4/PWM_Green.c **** *  signals when the kill signal is present.  This mode should only be used
 465:.\Generated_Source\PSoC4/PWM_Green.c **** *  when the kill signal (stop input) is configured in the pass through mode
 466:.\Generated_Source\PSoC4/PWM_Green.c **** *  (Level sensitive signal).
 467:.\Generated_Source\PSoC4/PWM_Green.c **** 
 468:.\Generated_Source\PSoC4/PWM_Green.c **** *
 469:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 470:.\Generated_Source\PSoC4/PWM_Green.c **** *  syncKillEnable
 471:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
 472:.\Generated_Source\PSoC4/PWM_Green.c **** *     - 0 - Asynchronous
 473:.\Generated_Source\PSoC4/PWM_Green.c **** *     - 1 - Synchronous
 474:.\Generated_Source\PSoC4/PWM_Green.c **** *
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 14


 475:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 476:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 477:.\Generated_Source\PSoC4/PWM_Green.c **** *
 478:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 479:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_SetPWMSyncKill(uint32 syncKillEnable)
 480:.\Generated_Source\PSoC4/PWM_Green.c **** {
 268              		.loc 1 480 0
 269              		.cfi_startproc
 270              	.LVL20:
 271 0000 10B5     		push	{r4, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 4, -8
 274              		.cfi_offset 14, -4
 275 0002 041C     		mov	r4, r0
 481:.\Generated_Source\PSoC4/PWM_Green.c ****     uint8 enableInterrupts;
 482:.\Generated_Source\PSoC4/PWM_Green.c **** 
 483:.\Generated_Source\PSoC4/PWM_Green.c ****     enableInterrupts = CyEnterCriticalSection();
 276              		.loc 1 483 0
 277 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 278              	.LVL21:
 484:.\Generated_Source\PSoC4/PWM_Green.c **** 
 485:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_CONTROL_REG &= (uint32)~PWM_Green_PWM_SYNC_KILL_MASK;
 279              		.loc 1 485 0
 280 0008 064B     		ldr	r3, .L20
 281 000a 1A68     		ldr	r2, [r3]
 282 000c 0421     		mov	r1, #4
 283 000e 8A43     		bic	r2, r1
 284 0010 1A60     		str	r2, [r3]
 486:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_Green_1BIT_MASK)  <<
 285              		.loc 1 486 0
 286 0012 1A68     		ldr	r2, [r3]
 287 0014 0339     		sub	r1, r1, #3
 288 0016 0C40     		and	r4, r1
 289              	.LVL22:
 290 0018 A400     		lsl	r4, r4, #2
 291 001a 1443     		orr	r4, r2
 292 001c 1C60     		str	r4, [r3]
 487:.\Generated_Source\PSoC4/PWM_Green.c ****                                                PWM_Green_PWM_SYNC_KILL_SHIFT));
 488:.\Generated_Source\PSoC4/PWM_Green.c **** 
 489:.\Generated_Source\PSoC4/PWM_Green.c ****     CyExitCriticalSection(enableInterrupts);
 293              		.loc 1 489 0
 294 001e FFF7FEFF 		bl	CyExitCriticalSection
 295              	.LVL23:
 490:.\Generated_Source\PSoC4/PWM_Green.c **** }
 296              		.loc 1 490 0
 297              		@ sp needed
 298 0022 10BD     		pop	{r4, pc}
 299              	.L21:
 300              		.align	2
 301              	.L20:
 302 0024 00012040 		.word	1075839232
 303              		.cfi_endproc
 304              	.LFE10:
 305              		.size	PWM_Green_SetPWMSyncKill, .-PWM_Green_SetPWMSyncKill
 306              		.section	.text.PWM_Green_SetPWMStopOnKill,"ax",%progbits
 307              		.align	2
 308              		.global	PWM_Green_SetPWMStopOnKill
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 15


 309              		.code	16
 310              		.thumb_func
 311              		.type	PWM_Green_SetPWMStopOnKill, %function
 312              	PWM_Green_SetPWMStopOnKill:
 313              	.LFB11:
 491:.\Generated_Source\PSoC4/PWM_Green.c **** 
 492:.\Generated_Source\PSoC4/PWM_Green.c **** 
 493:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 494:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_SetPWMStopOnKill
 495:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 496:.\Generated_Source\PSoC4/PWM_Green.c **** *
 497:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 498:.\Generated_Source\PSoC4/PWM_Green.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 499:.\Generated_Source\PSoC4/PWM_Green.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 500:.\Generated_Source\PSoC4/PWM_Green.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 501:.\Generated_Source\PSoC4/PWM_Green.c **** *
 502:.\Generated_Source\PSoC4/PWM_Green.c **** *
 503:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 504:.\Generated_Source\PSoC4/PWM_Green.c **** *  stopOnKillEnable
 505:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
 506:.\Generated_Source\PSoC4/PWM_Green.c **** *     - 0 - Don't stop
 507:.\Generated_Source\PSoC4/PWM_Green.c **** *     - 1 - Stop
 508:.\Generated_Source\PSoC4/PWM_Green.c **** *
 509:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 510:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 511:.\Generated_Source\PSoC4/PWM_Green.c **** *
 512:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_SetPWMStopOnKill(uint32 stopOnKillEnable)
 514:.\Generated_Source\PSoC4/PWM_Green.c **** {
 314              		.loc 1 514 0
 315              		.cfi_startproc
 316              	.LVL24:
 317 0000 10B5     		push	{r4, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 4, -8
 320              		.cfi_offset 14, -4
 321 0002 041C     		mov	r4, r0
 515:.\Generated_Source\PSoC4/PWM_Green.c ****     uint8 enableInterrupts;
 516:.\Generated_Source\PSoC4/PWM_Green.c **** 
 517:.\Generated_Source\PSoC4/PWM_Green.c ****     enableInterrupts = CyEnterCriticalSection();
 322              		.loc 1 517 0
 323 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 324              	.LVL25:
 518:.\Generated_Source\PSoC4/PWM_Green.c **** 
 519:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_CONTROL_REG &= (uint32)~PWM_Green_PWM_STOP_KILL_MASK;
 325              		.loc 1 519 0
 326 0008 064B     		ldr	r3, .L23
 327 000a 1A68     		ldr	r2, [r3]
 328 000c 0821     		mov	r1, #8
 329 000e 8A43     		bic	r2, r1
 330 0010 1A60     		str	r2, [r3]
 520:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_Green_1BIT_MASK)  <<
 331              		.loc 1 520 0
 332 0012 1A68     		ldr	r2, [r3]
 333 0014 0739     		sub	r1, r1, #7
 334 0016 0C40     		and	r4, r1
 335              	.LVL26:
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 16


 336 0018 E400     		lsl	r4, r4, #3
 337 001a 1443     		orr	r4, r2
 338 001c 1C60     		str	r4, [r3]
 521:.\Generated_Source\PSoC4/PWM_Green.c ****                                                          PWM_Green_PWM_STOP_KILL_SHIFT));
 522:.\Generated_Source\PSoC4/PWM_Green.c **** 
 523:.\Generated_Source\PSoC4/PWM_Green.c ****     CyExitCriticalSection(enableInterrupts);
 339              		.loc 1 523 0
 340 001e FFF7FEFF 		bl	CyExitCriticalSection
 341              	.LVL27:
 524:.\Generated_Source\PSoC4/PWM_Green.c **** }
 342              		.loc 1 524 0
 343              		@ sp needed
 344 0022 10BD     		pop	{r4, pc}
 345              	.L24:
 346              		.align	2
 347              	.L23:
 348 0024 00012040 		.word	1075839232
 349              		.cfi_endproc
 350              	.LFE11:
 351              		.size	PWM_Green_SetPWMStopOnKill, .-PWM_Green_SetPWMStopOnKill
 352              		.section	.text.PWM_Green_SetPWMDeadTime,"ax",%progbits
 353              		.align	2
 354              		.global	PWM_Green_SetPWMDeadTime
 355              		.code	16
 356              		.thumb_func
 357              		.type	PWM_Green_SetPWMDeadTime, %function
 358              	PWM_Green_SetPWMDeadTime:
 359              	.LFB12:
 525:.\Generated_Source\PSoC4/PWM_Green.c **** 
 526:.\Generated_Source\PSoC4/PWM_Green.c **** 
 527:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 528:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_SetPWMDeadTime
 529:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 530:.\Generated_Source\PSoC4/PWM_Green.c **** *
 531:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 532:.\Generated_Source\PSoC4/PWM_Green.c **** *  Writes the dead time control value.  This value delays the rising edge of
 533:.\Generated_Source\PSoC4/PWM_Green.c **** *  both the line and line_n signals the designated number of cycles resulting
 534:.\Generated_Source\PSoC4/PWM_Green.c **** *  in both signals being inactive for that many cycles.  This functionality is
 535:.\Generated_Source\PSoC4/PWM_Green.c **** *  only applicable to the PWM in the dead time mode.
 536:.\Generated_Source\PSoC4/PWM_Green.c **** 
 537:.\Generated_Source\PSoC4/PWM_Green.c **** *
 538:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 539:.\Generated_Source\PSoC4/PWM_Green.c **** *  Dead time to insert
 540:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values: 0 to 255
 541:.\Generated_Source\PSoC4/PWM_Green.c **** *
 542:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 543:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 544:.\Generated_Source\PSoC4/PWM_Green.c **** *
 545:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 546:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_SetPWMDeadTime(uint32 deadTime)
 547:.\Generated_Source\PSoC4/PWM_Green.c **** {
 360              		.loc 1 547 0
 361              		.cfi_startproc
 362              	.LVL28:
 363 0000 10B5     		push	{r4, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 4, -8
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 17


 366              		.cfi_offset 14, -4
 367 0002 041C     		mov	r4, r0
 548:.\Generated_Source\PSoC4/PWM_Green.c ****     uint8 enableInterrupts;
 549:.\Generated_Source\PSoC4/PWM_Green.c **** 
 550:.\Generated_Source\PSoC4/PWM_Green.c ****     enableInterrupts = CyEnterCriticalSection();
 368              		.loc 1 550 0
 369 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 370              	.LVL29:
 551:.\Generated_Source\PSoC4/PWM_Green.c **** 
 552:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_CONTROL_REG &= (uint32)~PWM_Green_PRESCALER_MASK;
 371              		.loc 1 552 0
 372 0008 064B     		ldr	r3, .L26
 373 000a 1968     		ldr	r1, [r3]
 374 000c 064A     		ldr	r2, .L26+4
 375 000e 0A40     		and	r2, r1
 376 0010 1A60     		str	r2, [r3]
 553:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_CONTROL_REG |= ((uint32)((deadTime & PWM_Green_8BIT_MASK) <<
 377              		.loc 1 553 0
 378 0012 1A68     		ldr	r2, [r3]
 379 0014 2406     		lsl	r4, r4, #24
 380              	.LVL30:
 381 0016 240C     		lsr	r4, r4, #16
 382 0018 1443     		orr	r4, r2
 383 001a 1C60     		str	r4, [r3]
 554:.\Generated_Source\PSoC4/PWM_Green.c ****                                                           PWM_Green_PRESCALER_SHIFT));
 555:.\Generated_Source\PSoC4/PWM_Green.c **** 
 556:.\Generated_Source\PSoC4/PWM_Green.c ****     CyExitCriticalSection(enableInterrupts);
 384              		.loc 1 556 0
 385 001c FFF7FEFF 		bl	CyExitCriticalSection
 386              	.LVL31:
 557:.\Generated_Source\PSoC4/PWM_Green.c **** }
 387              		.loc 1 557 0
 388              		@ sp needed
 389 0020 10BD     		pop	{r4, pc}
 390              	.L27:
 391 0022 C046     		.align	2
 392              	.L26:
 393 0024 00012040 		.word	1075839232
 394 0028 FF00FFFF 		.word	-65281
 395              		.cfi_endproc
 396              	.LFE12:
 397              		.size	PWM_Green_SetPWMDeadTime, .-PWM_Green_SetPWMDeadTime
 398              		.section	.text.PWM_Green_SetPWMInvert,"ax",%progbits
 399              		.align	2
 400              		.global	PWM_Green_SetPWMInvert
 401              		.code	16
 402              		.thumb_func
 403              		.type	PWM_Green_SetPWMInvert, %function
 404              	PWM_Green_SetPWMInvert:
 405              	.LFB13:
 558:.\Generated_Source\PSoC4/PWM_Green.c **** 
 559:.\Generated_Source\PSoC4/PWM_Green.c **** 
 560:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_SetPWMInvert
 562:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 563:.\Generated_Source\PSoC4/PWM_Green.c **** *
 564:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 18


 565:.\Generated_Source\PSoC4/PWM_Green.c **** *  Writes the bits that control whether the line and line_n outputs are
 566:.\Generated_Source\PSoC4/PWM_Green.c **** *  inverted from their normal output values.  This functionality is only
 567:.\Generated_Source\PSoC4/PWM_Green.c **** *  applicable to the three PWM modes.
 568:.\Generated_Source\PSoC4/PWM_Green.c **** *
 569:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 570:.\Generated_Source\PSoC4/PWM_Green.c **** *  mask: Mask of outputs to invert.
 571:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
 572:.\Generated_Source\PSoC4/PWM_Green.c **** *         - PWM_Green_INVERT_LINE   - Inverts the line output
 573:.\Generated_Source\PSoC4/PWM_Green.c **** *         - PWM_Green_INVERT_LINE_N - Inverts the line_n output
 574:.\Generated_Source\PSoC4/PWM_Green.c **** *
 575:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 576:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 577:.\Generated_Source\PSoC4/PWM_Green.c **** *
 578:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 579:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_SetPWMInvert(uint32 mask)
 580:.\Generated_Source\PSoC4/PWM_Green.c **** {
 406              		.loc 1 580 0
 407              		.cfi_startproc
 408              	.LVL32:
 409 0000 10B5     		push	{r4, lr}
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 4, -8
 412              		.cfi_offset 14, -4
 413 0002 041C     		mov	r4, r0
 581:.\Generated_Source\PSoC4/PWM_Green.c ****     uint8 enableInterrupts;
 582:.\Generated_Source\PSoC4/PWM_Green.c **** 
 583:.\Generated_Source\PSoC4/PWM_Green.c ****     enableInterrupts = CyEnterCriticalSection();
 414              		.loc 1 583 0
 415 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 416              	.LVL33:
 584:.\Generated_Source\PSoC4/PWM_Green.c **** 
 585:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_CONTROL_REG &= (uint32)~PWM_Green_INV_OUT_MASK;
 417              		.loc 1 585 0
 418 0008 054B     		ldr	r3, .L29
 419 000a 1968     		ldr	r1, [r3]
 420 000c 054A     		ldr	r2, .L29+4
 421 000e 0A40     		and	r2, r1
 422 0010 1A60     		str	r2, [r3]
 586:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_CONTROL_REG |= mask;
 423              		.loc 1 586 0
 424 0012 1A68     		ldr	r2, [r3]
 425 0014 1443     		orr	r4, r2
 426              	.LVL34:
 427 0016 1C60     		str	r4, [r3]
 587:.\Generated_Source\PSoC4/PWM_Green.c **** 
 588:.\Generated_Source\PSoC4/PWM_Green.c ****     CyExitCriticalSection(enableInterrupts);
 428              		.loc 1 588 0
 429 0018 FFF7FEFF 		bl	CyExitCriticalSection
 430              	.LVL35:
 589:.\Generated_Source\PSoC4/PWM_Green.c **** }
 431              		.loc 1 589 0
 432              		@ sp needed
 433 001c 10BD     		pop	{r4, pc}
 434              	.L30:
 435 001e C046     		.align	2
 436              	.L29:
 437 0020 00012040 		.word	1075839232
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 19


 438 0024 FFFFCFFF 		.word	-3145729
 439              		.cfi_endproc
 440              	.LFE13:
 441              		.size	PWM_Green_SetPWMInvert, .-PWM_Green_SetPWMInvert
 442              		.section	.text.PWM_Green_WriteCounter,"ax",%progbits
 443              		.align	2
 444              		.global	PWM_Green_WriteCounter
 445              		.code	16
 446              		.thumb_func
 447              		.type	PWM_Green_WriteCounter, %function
 448              	PWM_Green_WriteCounter:
 449              	.LFB14:
 590:.\Generated_Source\PSoC4/PWM_Green.c **** 
 591:.\Generated_Source\PSoC4/PWM_Green.c **** 
 592:.\Generated_Source\PSoC4/PWM_Green.c **** 
 593:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 594:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_WriteCounter
 595:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 596:.\Generated_Source\PSoC4/PWM_Green.c **** *
 597:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 598:.\Generated_Source\PSoC4/PWM_Green.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 599:.\Generated_Source\PSoC4/PWM_Green.c **** *  setting the counter (not the period) to the value written. It is not
 600:.\Generated_Source\PSoC4/PWM_Green.c **** *  advised to write to this field when the counter is running.
 601:.\Generated_Source\PSoC4/PWM_Green.c **** *
 602:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 603:.\Generated_Source\PSoC4/PWM_Green.c **** *  count: value to write
 604:.\Generated_Source\PSoC4/PWM_Green.c **** *
 605:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 606:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 607:.\Generated_Source\PSoC4/PWM_Green.c **** *
 608:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 609:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_WriteCounter(uint32 count)
 610:.\Generated_Source\PSoC4/PWM_Green.c **** {
 450              		.loc 1 610 0
 451              		.cfi_startproc
 452              	.LVL36:
 611:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_COUNTER_REG = (count & PWM_Green_16BIT_MASK);
 453              		.loc 1 611 0
 454 0000 0004     		lsl	r0, r0, #16
 455              	.LVL37:
 456 0002 000C     		lsr	r0, r0, #16
 457 0004 014B     		ldr	r3, .L32
 458 0006 1860     		str	r0, [r3]
 612:.\Generated_Source\PSoC4/PWM_Green.c **** }
 459              		.loc 1 612 0
 460              		@ sp needed
 461 0008 7047     		bx	lr
 462              	.L33:
 463 000a C046     		.align	2
 464              	.L32:
 465 000c 08012040 		.word	1075839240
 466              		.cfi_endproc
 467              	.LFE14:
 468              		.size	PWM_Green_WriteCounter, .-PWM_Green_WriteCounter
 469              		.section	.text.PWM_Green_ReadCounter,"ax",%progbits
 470              		.align	2
 471              		.global	PWM_Green_ReadCounter
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 20


 472              		.code	16
 473              		.thumb_func
 474              		.type	PWM_Green_ReadCounter, %function
 475              	PWM_Green_ReadCounter:
 476              	.LFB15:
 613:.\Generated_Source\PSoC4/PWM_Green.c **** 
 614:.\Generated_Source\PSoC4/PWM_Green.c **** 
 615:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_ReadCounter
 617:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/PWM_Green.c **** *
 619:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 620:.\Generated_Source\PSoC4/PWM_Green.c **** *  Reads the current counter value.
 621:.\Generated_Source\PSoC4/PWM_Green.c **** *
 622:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 623:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 624:.\Generated_Source\PSoC4/PWM_Green.c **** *
 625:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 626:.\Generated_Source\PSoC4/PWM_Green.c **** *  Current counter value
 627:.\Generated_Source\PSoC4/PWM_Green.c **** *
 628:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/PWM_Green.c **** uint32 PWM_Green_ReadCounter(void)
 630:.\Generated_Source\PSoC4/PWM_Green.c **** {
 477              		.loc 1 630 0
 478              		.cfi_startproc
 631:.\Generated_Source\PSoC4/PWM_Green.c ****     return (PWM_Green_COUNTER_REG & PWM_Green_16BIT_MASK);
 479              		.loc 1 631 0
 480 0000 024B     		ldr	r3, .L35
 481 0002 1868     		ldr	r0, [r3]
 482 0004 0004     		lsl	r0, r0, #16
 483 0006 000C     		lsr	r0, r0, #16
 632:.\Generated_Source\PSoC4/PWM_Green.c **** }
 484              		.loc 1 632 0
 485              		@ sp needed
 486 0008 7047     		bx	lr
 487              	.L36:
 488 000a C046     		.align	2
 489              	.L35:
 490 000c 08012040 		.word	1075839240
 491              		.cfi_endproc
 492              	.LFE15:
 493              		.size	PWM_Green_ReadCounter, .-PWM_Green_ReadCounter
 494              		.section	.text.PWM_Green_SetCounterMode,"ax",%progbits
 495              		.align	2
 496              		.global	PWM_Green_SetCounterMode
 497              		.code	16
 498              		.thumb_func
 499              		.type	PWM_Green_SetCounterMode, %function
 500              	PWM_Green_SetCounterMode:
 501              	.LFB16:
 633:.\Generated_Source\PSoC4/PWM_Green.c **** 
 634:.\Generated_Source\PSoC4/PWM_Green.c **** 
 635:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 636:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_SetCounterMode
 637:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/PWM_Green.c **** *
 639:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 21


 640:.\Generated_Source\PSoC4/PWM_Green.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 641:.\Generated_Source\PSoC4/PWM_Green.c **** *  and the PWM with a pseudo random output.
 642:.\Generated_Source\PSoC4/PWM_Green.c **** *
 643:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 644:.\Generated_Source\PSoC4/PWM_Green.c **** *  counterMode: Enumerated counter type values
 645:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
 646:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_COUNT_UP       - Counts up
 647:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_COUNT_DOWN     - Counts down
 648:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_COUNT_UPDOWN0  - Counts up and down. Terminal count
 649:.\Generated_Source\PSoC4/PWM_Green.c **** *                                         generated when counter reaches 0
 650:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_COUNT_UPDOWN1  - Counts up and down. Terminal count
 651:.\Generated_Source\PSoC4/PWM_Green.c **** *                                         generated both when counter reaches 0
 652:.\Generated_Source\PSoC4/PWM_Green.c **** *                                         and period
 653:.\Generated_Source\PSoC4/PWM_Green.c **** *
 654:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 655:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 656:.\Generated_Source\PSoC4/PWM_Green.c **** *
 657:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 658:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_SetCounterMode(uint32 counterMode)
 659:.\Generated_Source\PSoC4/PWM_Green.c **** {
 502              		.loc 1 659 0
 503              		.cfi_startproc
 504              	.LVL38:
 505 0000 10B5     		push	{r4, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 4, -8
 508              		.cfi_offset 14, -4
 509 0002 041C     		mov	r4, r0
 660:.\Generated_Source\PSoC4/PWM_Green.c ****     uint8 enableInterrupts;
 661:.\Generated_Source\PSoC4/PWM_Green.c **** 
 662:.\Generated_Source\PSoC4/PWM_Green.c ****     enableInterrupts = CyEnterCriticalSection();
 510              		.loc 1 662 0
 511 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 512              	.LVL39:
 663:.\Generated_Source\PSoC4/PWM_Green.c **** 
 664:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_CONTROL_REG &= (uint32)~PWM_Green_UPDOWN_MASK;
 513              		.loc 1 664 0
 514 0008 054B     		ldr	r3, .L38
 515 000a 1968     		ldr	r1, [r3]
 516 000c 054A     		ldr	r2, .L38+4
 517 000e 0A40     		and	r2, r1
 518 0010 1A60     		str	r2, [r3]
 665:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_CONTROL_REG |= counterMode;
 519              		.loc 1 665 0
 520 0012 1A68     		ldr	r2, [r3]
 521 0014 1443     		orr	r4, r2
 522              	.LVL40:
 523 0016 1C60     		str	r4, [r3]
 666:.\Generated_Source\PSoC4/PWM_Green.c **** 
 667:.\Generated_Source\PSoC4/PWM_Green.c ****     CyExitCriticalSection(enableInterrupts);
 524              		.loc 1 667 0
 525 0018 FFF7FEFF 		bl	CyExitCriticalSection
 526              	.LVL41:
 668:.\Generated_Source\PSoC4/PWM_Green.c **** }
 527              		.loc 1 668 0
 528              		@ sp needed
 529 001c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 22


 530              	.L39:
 531 001e C046     		.align	2
 532              	.L38:
 533 0020 00012040 		.word	1075839232
 534 0024 FFFFFCFF 		.word	-196609
 535              		.cfi_endproc
 536              	.LFE16:
 537              		.size	PWM_Green_SetCounterMode, .-PWM_Green_SetCounterMode
 538              		.section	.text.PWM_Green_WritePeriod,"ax",%progbits
 539              		.align	2
 540              		.global	PWM_Green_WritePeriod
 541              		.code	16
 542              		.thumb_func
 543              		.type	PWM_Green_WritePeriod, %function
 544              	PWM_Green_WritePeriod:
 545              	.LFB17:
 669:.\Generated_Source\PSoC4/PWM_Green.c **** 
 670:.\Generated_Source\PSoC4/PWM_Green.c **** 
 671:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_WritePeriod
 673:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 674:.\Generated_Source\PSoC4/PWM_Green.c **** *
 675:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 676:.\Generated_Source\PSoC4/PWM_Green.c **** *  Writes the 16 bit period register with the new period value.
 677:.\Generated_Source\PSoC4/PWM_Green.c **** *  To cause the counter to count for N cycles this register should be written
 678:.\Generated_Source\PSoC4/PWM_Green.c **** *  with N-1 (counts from 0 to period inclusive).
 679:.\Generated_Source\PSoC4/PWM_Green.c **** *
 680:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 681:.\Generated_Source\PSoC4/PWM_Green.c **** *  period: Period value
 682:.\Generated_Source\PSoC4/PWM_Green.c **** *
 683:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 684:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 685:.\Generated_Source\PSoC4/PWM_Green.c **** *
 686:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 687:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_WritePeriod(uint32 period)
 688:.\Generated_Source\PSoC4/PWM_Green.c **** {
 546              		.loc 1 688 0
 547              		.cfi_startproc
 548              	.LVL42:
 689:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_PERIOD_REG = (period & PWM_Green_16BIT_MASK);
 549              		.loc 1 689 0
 550 0000 0004     		lsl	r0, r0, #16
 551              	.LVL43:
 552 0002 000C     		lsr	r0, r0, #16
 553 0004 014B     		ldr	r3, .L41
 554 0006 1860     		str	r0, [r3]
 690:.\Generated_Source\PSoC4/PWM_Green.c **** }
 555              		.loc 1 690 0
 556              		@ sp needed
 557 0008 7047     		bx	lr
 558              	.L42:
 559 000a C046     		.align	2
 560              	.L41:
 561 000c 14012040 		.word	1075839252
 562              		.cfi_endproc
 563              	.LFE17:
 564              		.size	PWM_Green_WritePeriod, .-PWM_Green_WritePeriod
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 23


 565              		.section	.text.PWM_Green_ReadPeriod,"ax",%progbits
 566              		.align	2
 567              		.global	PWM_Green_ReadPeriod
 568              		.code	16
 569              		.thumb_func
 570              		.type	PWM_Green_ReadPeriod, %function
 571              	PWM_Green_ReadPeriod:
 572              	.LFB18:
 691:.\Generated_Source\PSoC4/PWM_Green.c **** 
 692:.\Generated_Source\PSoC4/PWM_Green.c **** 
 693:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 694:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_ReadPeriod
 695:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 696:.\Generated_Source\PSoC4/PWM_Green.c **** *
 697:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 698:.\Generated_Source\PSoC4/PWM_Green.c **** *  Reads the 16 bit period register.
 699:.\Generated_Source\PSoC4/PWM_Green.c **** *
 700:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 701:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 702:.\Generated_Source\PSoC4/PWM_Green.c **** *
 703:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 704:.\Generated_Source\PSoC4/PWM_Green.c **** *  Period value
 705:.\Generated_Source\PSoC4/PWM_Green.c **** *
 706:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 707:.\Generated_Source\PSoC4/PWM_Green.c **** uint32 PWM_Green_ReadPeriod(void)
 708:.\Generated_Source\PSoC4/PWM_Green.c **** {
 573              		.loc 1 708 0
 574              		.cfi_startproc
 709:.\Generated_Source\PSoC4/PWM_Green.c ****     return (PWM_Green_PERIOD_REG & PWM_Green_16BIT_MASK);
 575              		.loc 1 709 0
 576 0000 024B     		ldr	r3, .L44
 577 0002 1868     		ldr	r0, [r3]
 578 0004 0004     		lsl	r0, r0, #16
 579 0006 000C     		lsr	r0, r0, #16
 710:.\Generated_Source\PSoC4/PWM_Green.c **** }
 580              		.loc 1 710 0
 581              		@ sp needed
 582 0008 7047     		bx	lr
 583              	.L45:
 584 000a C046     		.align	2
 585              	.L44:
 586 000c 14012040 		.word	1075839252
 587              		.cfi_endproc
 588              	.LFE18:
 589              		.size	PWM_Green_ReadPeriod, .-PWM_Green_ReadPeriod
 590              		.section	.text.PWM_Green_SetCompareSwap,"ax",%progbits
 591              		.align	2
 592              		.global	PWM_Green_SetCompareSwap
 593              		.code	16
 594              		.thumb_func
 595              		.type	PWM_Green_SetCompareSwap, %function
 596              	PWM_Green_SetCompareSwap:
 597              	.LFB19:
 711:.\Generated_Source\PSoC4/PWM_Green.c **** 
 712:.\Generated_Source\PSoC4/PWM_Green.c **** 
 713:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_SetCompareSwap
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 24


 715:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 716:.\Generated_Source\PSoC4/PWM_Green.c **** *
 717:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 718:.\Generated_Source\PSoC4/PWM_Green.c **** *  Writes the register that controls whether the compare registers are
 719:.\Generated_Source\PSoC4/PWM_Green.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 720:.\Generated_Source\PSoC4/PWM_Green.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 721:.\Generated_Source\PSoC4/PWM_Green.c **** *  following a hardware switch event.
 722:.\Generated_Source\PSoC4/PWM_Green.c **** *
 723:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 724:.\Generated_Source\PSoC4/PWM_Green.c **** *  swapEnable
 725:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
 726:.\Generated_Source\PSoC4/PWM_Green.c **** *     - 0 - Disable swap
 727:.\Generated_Source\PSoC4/PWM_Green.c **** *     - 1 - Enable swap
 728:.\Generated_Source\PSoC4/PWM_Green.c **** *
 729:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 730:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 731:.\Generated_Source\PSoC4/PWM_Green.c **** *
 732:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 733:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_SetCompareSwap(uint32 swapEnable)
 734:.\Generated_Source\PSoC4/PWM_Green.c **** {
 598              		.loc 1 734 0
 599              		.cfi_startproc
 600              	.LVL44:
 601 0000 10B5     		push	{r4, lr}
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 4, -8
 604              		.cfi_offset 14, -4
 605 0002 041C     		mov	r4, r0
 735:.\Generated_Source\PSoC4/PWM_Green.c ****     uint8 enableInterrupts;
 736:.\Generated_Source\PSoC4/PWM_Green.c **** 
 737:.\Generated_Source\PSoC4/PWM_Green.c ****     enableInterrupts = CyEnterCriticalSection();
 606              		.loc 1 737 0
 607 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 608              	.LVL45:
 738:.\Generated_Source\PSoC4/PWM_Green.c **** 
 739:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_CONTROL_REG &= (uint32)~PWM_Green_RELOAD_CC_MASK;
 609              		.loc 1 739 0
 610 0008 054B     		ldr	r3, .L47
 611 000a 1A68     		ldr	r2, [r3]
 612 000c 0121     		mov	r1, #1
 613 000e 8A43     		bic	r2, r1
 614 0010 1A60     		str	r2, [r3]
 740:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_CONTROL_REG |= (swapEnable & PWM_Green_1BIT_MASK);
 615              		.loc 1 740 0
 616 0012 1A68     		ldr	r2, [r3]
 617 0014 0C40     		and	r4, r1
 618              	.LVL46:
 619 0016 1443     		orr	r4, r2
 620 0018 1C60     		str	r4, [r3]
 741:.\Generated_Source\PSoC4/PWM_Green.c **** 
 742:.\Generated_Source\PSoC4/PWM_Green.c ****     CyExitCriticalSection(enableInterrupts);
 621              		.loc 1 742 0
 622 001a FFF7FEFF 		bl	CyExitCriticalSection
 623              	.LVL47:
 743:.\Generated_Source\PSoC4/PWM_Green.c **** }
 624              		.loc 1 743 0
 625              		@ sp needed
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 25


 626 001e 10BD     		pop	{r4, pc}
 627              	.L48:
 628              		.align	2
 629              	.L47:
 630 0020 00012040 		.word	1075839232
 631              		.cfi_endproc
 632              	.LFE19:
 633              		.size	PWM_Green_SetCompareSwap, .-PWM_Green_SetCompareSwap
 634              		.section	.text.PWM_Green_WritePeriodBuf,"ax",%progbits
 635              		.align	2
 636              		.global	PWM_Green_WritePeriodBuf
 637              		.code	16
 638              		.thumb_func
 639              		.type	PWM_Green_WritePeriodBuf, %function
 640              	PWM_Green_WritePeriodBuf:
 641              	.LFB20:
 744:.\Generated_Source\PSoC4/PWM_Green.c **** 
 745:.\Generated_Source\PSoC4/PWM_Green.c **** 
 746:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_WritePeriodBuf
 748:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM_Green.c **** *
 750:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 751:.\Generated_Source\PSoC4/PWM_Green.c **** *  Writes the 16 bit period buf register with the new period value.
 752:.\Generated_Source\PSoC4/PWM_Green.c **** *
 753:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 754:.\Generated_Source\PSoC4/PWM_Green.c **** *  periodBuf: Period value
 755:.\Generated_Source\PSoC4/PWM_Green.c **** *
 756:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 757:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 758:.\Generated_Source\PSoC4/PWM_Green.c **** *
 759:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 760:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_WritePeriodBuf(uint32 periodBuf)
 761:.\Generated_Source\PSoC4/PWM_Green.c **** {
 642              		.loc 1 761 0
 643              		.cfi_startproc
 644              	.LVL48:
 762:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_PERIOD_BUF_REG = (periodBuf & PWM_Green_16BIT_MASK);
 645              		.loc 1 762 0
 646 0000 0004     		lsl	r0, r0, #16
 647              	.LVL49:
 648 0002 000C     		lsr	r0, r0, #16
 649 0004 014B     		ldr	r3, .L50
 650 0006 1860     		str	r0, [r3]
 763:.\Generated_Source\PSoC4/PWM_Green.c **** }
 651              		.loc 1 763 0
 652              		@ sp needed
 653 0008 7047     		bx	lr
 654              	.L51:
 655 000a C046     		.align	2
 656              	.L50:
 657 000c 18012040 		.word	1075839256
 658              		.cfi_endproc
 659              	.LFE20:
 660              		.size	PWM_Green_WritePeriodBuf, .-PWM_Green_WritePeriodBuf
 661              		.section	.text.PWM_Green_ReadPeriodBuf,"ax",%progbits
 662              		.align	2
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 26


 663              		.global	PWM_Green_ReadPeriodBuf
 664              		.code	16
 665              		.thumb_func
 666              		.type	PWM_Green_ReadPeriodBuf, %function
 667              	PWM_Green_ReadPeriodBuf:
 668              	.LFB21:
 764:.\Generated_Source\PSoC4/PWM_Green.c **** 
 765:.\Generated_Source\PSoC4/PWM_Green.c **** 
 766:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 767:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_ReadPeriodBuf
 768:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 769:.\Generated_Source\PSoC4/PWM_Green.c **** *
 770:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 771:.\Generated_Source\PSoC4/PWM_Green.c **** *  Reads the 16 bit period buf register.
 772:.\Generated_Source\PSoC4/PWM_Green.c **** *
 773:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 774:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 775:.\Generated_Source\PSoC4/PWM_Green.c **** *
 776:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 777:.\Generated_Source\PSoC4/PWM_Green.c **** *  Period value
 778:.\Generated_Source\PSoC4/PWM_Green.c **** *
 779:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 780:.\Generated_Source\PSoC4/PWM_Green.c **** uint32 PWM_Green_ReadPeriodBuf(void)
 781:.\Generated_Source\PSoC4/PWM_Green.c **** {
 669              		.loc 1 781 0
 670              		.cfi_startproc
 782:.\Generated_Source\PSoC4/PWM_Green.c ****     return (PWM_Green_PERIOD_BUF_REG & PWM_Green_16BIT_MASK);
 671              		.loc 1 782 0
 672 0000 024B     		ldr	r3, .L53
 673 0002 1868     		ldr	r0, [r3]
 674 0004 0004     		lsl	r0, r0, #16
 675 0006 000C     		lsr	r0, r0, #16
 783:.\Generated_Source\PSoC4/PWM_Green.c **** }
 676              		.loc 1 783 0
 677              		@ sp needed
 678 0008 7047     		bx	lr
 679              	.L54:
 680 000a C046     		.align	2
 681              	.L53:
 682 000c 18012040 		.word	1075839256
 683              		.cfi_endproc
 684              	.LFE21:
 685              		.size	PWM_Green_ReadPeriodBuf, .-PWM_Green_ReadPeriodBuf
 686              		.section	.text.PWM_Green_SetPeriodSwap,"ax",%progbits
 687              		.align	2
 688              		.global	PWM_Green_SetPeriodSwap
 689              		.code	16
 690              		.thumb_func
 691              		.type	PWM_Green_SetPeriodSwap, %function
 692              	PWM_Green_SetPeriodSwap:
 693              	.LFB22:
 784:.\Generated_Source\PSoC4/PWM_Green.c **** 
 785:.\Generated_Source\PSoC4/PWM_Green.c **** 
 786:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 787:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_SetPeriodSwap
 788:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 789:.\Generated_Source\PSoC4/PWM_Green.c **** *
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 27


 790:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 791:.\Generated_Source\PSoC4/PWM_Green.c **** *  Writes the register that controls whether the period registers are
 792:.\Generated_Source\PSoC4/PWM_Green.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 793:.\Generated_Source\PSoC4/PWM_Green.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 794:.\Generated_Source\PSoC4/PWM_Green.c **** *  switch event.
 795:.\Generated_Source\PSoC4/PWM_Green.c **** *
 796:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 797:.\Generated_Source\PSoC4/PWM_Green.c **** *  swapEnable
 798:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
 799:.\Generated_Source\PSoC4/PWM_Green.c **** *     - 0 - Disable swap
 800:.\Generated_Source\PSoC4/PWM_Green.c **** *     - 1 - Enable swap
 801:.\Generated_Source\PSoC4/PWM_Green.c **** *
 802:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 803:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 804:.\Generated_Source\PSoC4/PWM_Green.c **** *
 805:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 806:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_SetPeriodSwap(uint32 swapEnable)
 807:.\Generated_Source\PSoC4/PWM_Green.c **** {
 694              		.loc 1 807 0
 695              		.cfi_startproc
 696              	.LVL50:
 697 0000 10B5     		push	{r4, lr}
 698              		.cfi_def_cfa_offset 8
 699              		.cfi_offset 4, -8
 700              		.cfi_offset 14, -4
 701 0002 041C     		mov	r4, r0
 808:.\Generated_Source\PSoC4/PWM_Green.c ****     uint8 enableInterrupts;
 809:.\Generated_Source\PSoC4/PWM_Green.c **** 
 810:.\Generated_Source\PSoC4/PWM_Green.c ****     enableInterrupts = CyEnterCriticalSection();
 702              		.loc 1 810 0
 703 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 704              	.LVL51:
 811:.\Generated_Source\PSoC4/PWM_Green.c **** 
 812:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_CONTROL_REG &= (uint32)~PWM_Green_RELOAD_PERIOD_MASK;
 705              		.loc 1 812 0
 706 0008 064B     		ldr	r3, .L56
 707 000a 1A68     		ldr	r2, [r3]
 708 000c 0221     		mov	r1, #2
 709 000e 8A43     		bic	r2, r1
 710 0010 1A60     		str	r2, [r3]
 813:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_CONTROL_REG |= ((uint32)((swapEnable & PWM_Green_1BIT_MASK) <<
 711              		.loc 1 813 0
 712 0012 1A68     		ldr	r2, [r3]
 713 0014 0139     		sub	r1, r1, #1
 714 0016 0C40     		and	r4, r1
 715              	.LVL52:
 716 0018 6400     		lsl	r4, r4, #1
 717 001a 1443     		orr	r4, r2
 718 001c 1C60     		str	r4, [r3]
 814:.\Generated_Source\PSoC4/PWM_Green.c ****                                                             PWM_Green_RELOAD_PERIOD_SHIFT));
 815:.\Generated_Source\PSoC4/PWM_Green.c **** 
 816:.\Generated_Source\PSoC4/PWM_Green.c ****     CyExitCriticalSection(enableInterrupts);
 719              		.loc 1 816 0
 720 001e FFF7FEFF 		bl	CyExitCriticalSection
 721              	.LVL53:
 817:.\Generated_Source\PSoC4/PWM_Green.c **** }
 722              		.loc 1 817 0
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 28


 723              		@ sp needed
 724 0022 10BD     		pop	{r4, pc}
 725              	.L57:
 726              		.align	2
 727              	.L56:
 728 0024 00012040 		.word	1075839232
 729              		.cfi_endproc
 730              	.LFE22:
 731              		.size	PWM_Green_SetPeriodSwap, .-PWM_Green_SetPeriodSwap
 732              		.section	.text.PWM_Green_WriteCompare,"ax",%progbits
 733              		.align	2
 734              		.global	PWM_Green_WriteCompare
 735              		.code	16
 736              		.thumb_func
 737              		.type	PWM_Green_WriteCompare, %function
 738              	PWM_Green_WriteCompare:
 739              	.LFB23:
 818:.\Generated_Source\PSoC4/PWM_Green.c **** 
 819:.\Generated_Source\PSoC4/PWM_Green.c **** 
 820:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 821:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_WriteCompare
 822:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 823:.\Generated_Source\PSoC4/PWM_Green.c **** *
 824:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 825:.\Generated_Source\PSoC4/PWM_Green.c **** *  Writes the 16 bit compare register with the new compare value. Not
 826:.\Generated_Source\PSoC4/PWM_Green.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 827:.\Generated_Source\PSoC4/PWM_Green.c **** *
 828:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 829:.\Generated_Source\PSoC4/PWM_Green.c **** *  compare: Compare value
 830:.\Generated_Source\PSoC4/PWM_Green.c **** *
 831:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 832:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 833:.\Generated_Source\PSoC4/PWM_Green.c **** *
 834:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 835:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_WriteCompare(uint32 compare)
 836:.\Generated_Source\PSoC4/PWM_Green.c **** {
 740              		.loc 1 836 0
 741              		.cfi_startproc
 742              	.LVL54:
 837:.\Generated_Source\PSoC4/PWM_Green.c ****     #if (PWM_Green_CY_TCPWM_4000)
 838:.\Generated_Source\PSoC4/PWM_Green.c ****         uint32 currentMode;
 839:.\Generated_Source\PSoC4/PWM_Green.c ****     #endif /* (PWM_Green_CY_TCPWM_4000) */
 840:.\Generated_Source\PSoC4/PWM_Green.c **** 
 841:.\Generated_Source\PSoC4/PWM_Green.c ****     #if (PWM_Green_CY_TCPWM_4000)
 842:.\Generated_Source\PSoC4/PWM_Green.c ****         currentMode = ((PWM_Green_CONTROL_REG & PWM_Green_UPDOWN_MASK) >> PWM_Green_UPDOWN_SHIFT);
 843:.\Generated_Source\PSoC4/PWM_Green.c **** 
 844:.\Generated_Source\PSoC4/PWM_Green.c ****         if (((uint32)PWM_Green__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 845:.\Generated_Source\PSoC4/PWM_Green.c ****         {
 846:.\Generated_Source\PSoC4/PWM_Green.c ****             compare++;
 847:.\Generated_Source\PSoC4/PWM_Green.c ****         }
 848:.\Generated_Source\PSoC4/PWM_Green.c ****         else if (((uint32)PWM_Green__COUNT_UP == currentMode) && (0u != compare))
 849:.\Generated_Source\PSoC4/PWM_Green.c ****         {
 850:.\Generated_Source\PSoC4/PWM_Green.c ****             compare--;
 851:.\Generated_Source\PSoC4/PWM_Green.c ****         }
 852:.\Generated_Source\PSoC4/PWM_Green.c ****         else
 853:.\Generated_Source\PSoC4/PWM_Green.c ****         {
 854:.\Generated_Source\PSoC4/PWM_Green.c ****         }
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 29


 855:.\Generated_Source\PSoC4/PWM_Green.c ****         
 856:.\Generated_Source\PSoC4/PWM_Green.c ****     
 857:.\Generated_Source\PSoC4/PWM_Green.c ****     #endif /* (PWM_Green_CY_TCPWM_4000) */
 858:.\Generated_Source\PSoC4/PWM_Green.c ****     
 859:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_COMP_CAP_REG = (compare & PWM_Green_16BIT_MASK);
 743              		.loc 1 859 0
 744 0000 0004     		lsl	r0, r0, #16
 745              	.LVL55:
 746 0002 000C     		lsr	r0, r0, #16
 747 0004 014B     		ldr	r3, .L59
 748 0006 1860     		str	r0, [r3]
 860:.\Generated_Source\PSoC4/PWM_Green.c **** }
 749              		.loc 1 860 0
 750              		@ sp needed
 751 0008 7047     		bx	lr
 752              	.L60:
 753 000a C046     		.align	2
 754              	.L59:
 755 000c 0C012040 		.word	1075839244
 756              		.cfi_endproc
 757              	.LFE23:
 758              		.size	PWM_Green_WriteCompare, .-PWM_Green_WriteCompare
 759              		.section	.text.PWM_Green_ReadCompare,"ax",%progbits
 760              		.align	2
 761              		.global	PWM_Green_ReadCompare
 762              		.code	16
 763              		.thumb_func
 764              		.type	PWM_Green_ReadCompare, %function
 765              	PWM_Green_ReadCompare:
 766              	.LFB24:
 861:.\Generated_Source\PSoC4/PWM_Green.c **** 
 862:.\Generated_Source\PSoC4/PWM_Green.c **** 
 863:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 864:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_ReadCompare
 865:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 866:.\Generated_Source\PSoC4/PWM_Green.c **** *
 867:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 868:.\Generated_Source\PSoC4/PWM_Green.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 869:.\Generated_Source\PSoC4/PWM_Green.c **** *  or in Quadrature Decoder modes.
 870:.\Generated_Source\PSoC4/PWM_Green.c **** *
 871:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 872:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 873:.\Generated_Source\PSoC4/PWM_Green.c **** *
 874:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 875:.\Generated_Source\PSoC4/PWM_Green.c **** *  Compare value
 876:.\Generated_Source\PSoC4/PWM_Green.c **** *
 877:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 878:.\Generated_Source\PSoC4/PWM_Green.c **** uint32 PWM_Green_ReadCompare(void)
 879:.\Generated_Source\PSoC4/PWM_Green.c **** {
 767              		.loc 1 879 0
 768              		.cfi_startproc
 880:.\Generated_Source\PSoC4/PWM_Green.c ****     #if (PWM_Green_CY_TCPWM_4000)
 881:.\Generated_Source\PSoC4/PWM_Green.c ****         uint32 currentMode;
 882:.\Generated_Source\PSoC4/PWM_Green.c ****         uint32 regVal;
 883:.\Generated_Source\PSoC4/PWM_Green.c ****     #endif /* (PWM_Green_CY_TCPWM_4000) */
 884:.\Generated_Source\PSoC4/PWM_Green.c **** 
 885:.\Generated_Source\PSoC4/PWM_Green.c ****     #if (PWM_Green_CY_TCPWM_4000)
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 30


 886:.\Generated_Source\PSoC4/PWM_Green.c ****         currentMode = ((PWM_Green_CONTROL_REG & PWM_Green_UPDOWN_MASK) >> PWM_Green_UPDOWN_SHIFT);
 887:.\Generated_Source\PSoC4/PWM_Green.c ****         
 888:.\Generated_Source\PSoC4/PWM_Green.c ****         regVal = PWM_Green_COMP_CAP_REG;
 889:.\Generated_Source\PSoC4/PWM_Green.c ****         
 890:.\Generated_Source\PSoC4/PWM_Green.c ****         if (((uint32)PWM_Green__COUNT_DOWN == currentMode) && (0u != regVal))
 891:.\Generated_Source\PSoC4/PWM_Green.c ****         {
 892:.\Generated_Source\PSoC4/PWM_Green.c ****             regVal--;
 893:.\Generated_Source\PSoC4/PWM_Green.c ****         }
 894:.\Generated_Source\PSoC4/PWM_Green.c ****         else if (((uint32)PWM_Green__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 895:.\Generated_Source\PSoC4/PWM_Green.c ****         {
 896:.\Generated_Source\PSoC4/PWM_Green.c ****             regVal++;
 897:.\Generated_Source\PSoC4/PWM_Green.c ****         }
 898:.\Generated_Source\PSoC4/PWM_Green.c ****         else
 899:.\Generated_Source\PSoC4/PWM_Green.c ****         {
 900:.\Generated_Source\PSoC4/PWM_Green.c ****         }
 901:.\Generated_Source\PSoC4/PWM_Green.c **** 
 902:.\Generated_Source\PSoC4/PWM_Green.c ****         return (regVal & PWM_Green_16BIT_MASK);
 903:.\Generated_Source\PSoC4/PWM_Green.c ****     #else
 904:.\Generated_Source\PSoC4/PWM_Green.c ****         return (PWM_Green_COMP_CAP_REG & PWM_Green_16BIT_MASK);
 769              		.loc 1 904 0
 770 0000 024B     		ldr	r3, .L62
 771 0002 1868     		ldr	r0, [r3]
 772 0004 0004     		lsl	r0, r0, #16
 773 0006 000C     		lsr	r0, r0, #16
 905:.\Generated_Source\PSoC4/PWM_Green.c ****     #endif /* (PWM_Green_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/PWM_Green.c **** }
 774              		.loc 1 906 0
 775              		@ sp needed
 776 0008 7047     		bx	lr
 777              	.L63:
 778 000a C046     		.align	2
 779              	.L62:
 780 000c 0C012040 		.word	1075839244
 781              		.cfi_endproc
 782              	.LFE24:
 783              		.size	PWM_Green_ReadCompare, .-PWM_Green_ReadCompare
 784              		.section	.text.PWM_Green_WriteCompareBuf,"ax",%progbits
 785              		.align	2
 786              		.global	PWM_Green_WriteCompareBuf
 787              		.code	16
 788              		.thumb_func
 789              		.type	PWM_Green_WriteCompareBuf, %function
 790              	PWM_Green_WriteCompareBuf:
 791              	.LFB25:
 907:.\Generated_Source\PSoC4/PWM_Green.c **** 
 908:.\Generated_Source\PSoC4/PWM_Green.c **** 
 909:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 910:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_WriteCompareBuf
 911:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 912:.\Generated_Source\PSoC4/PWM_Green.c **** *
 913:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 914:.\Generated_Source\PSoC4/PWM_Green.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 915:.\Generated_Source\PSoC4/PWM_Green.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 916:.\Generated_Source\PSoC4/PWM_Green.c **** *
 917:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 918:.\Generated_Source\PSoC4/PWM_Green.c **** *  compareBuf: Compare value
 919:.\Generated_Source\PSoC4/PWM_Green.c **** *
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 31


 920:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 921:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 922:.\Generated_Source\PSoC4/PWM_Green.c **** *
 923:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 924:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_WriteCompareBuf(uint32 compareBuf)
 925:.\Generated_Source\PSoC4/PWM_Green.c **** {
 792              		.loc 1 925 0
 793              		.cfi_startproc
 794              	.LVL56:
 926:.\Generated_Source\PSoC4/PWM_Green.c ****     #if (PWM_Green_CY_TCPWM_4000)
 927:.\Generated_Source\PSoC4/PWM_Green.c ****         uint32 currentMode;
 928:.\Generated_Source\PSoC4/PWM_Green.c ****     #endif /* (PWM_Green_CY_TCPWM_4000) */
 929:.\Generated_Source\PSoC4/PWM_Green.c **** 
 930:.\Generated_Source\PSoC4/PWM_Green.c ****     #if (PWM_Green_CY_TCPWM_4000)
 931:.\Generated_Source\PSoC4/PWM_Green.c ****         currentMode = ((PWM_Green_CONTROL_REG & PWM_Green_UPDOWN_MASK) >> PWM_Green_UPDOWN_SHIFT);
 932:.\Generated_Source\PSoC4/PWM_Green.c **** 
 933:.\Generated_Source\PSoC4/PWM_Green.c ****         if (((uint32)PWM_Green__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 934:.\Generated_Source\PSoC4/PWM_Green.c ****         {
 935:.\Generated_Source\PSoC4/PWM_Green.c ****             compareBuf++;
 936:.\Generated_Source\PSoC4/PWM_Green.c ****         }
 937:.\Generated_Source\PSoC4/PWM_Green.c ****         else if (((uint32)PWM_Green__COUNT_UP == currentMode) && (0u != compareBuf))
 938:.\Generated_Source\PSoC4/PWM_Green.c ****         {
 939:.\Generated_Source\PSoC4/PWM_Green.c ****             compareBuf --;
 940:.\Generated_Source\PSoC4/PWM_Green.c ****         }
 941:.\Generated_Source\PSoC4/PWM_Green.c ****         else
 942:.\Generated_Source\PSoC4/PWM_Green.c ****         {
 943:.\Generated_Source\PSoC4/PWM_Green.c ****         }
 944:.\Generated_Source\PSoC4/PWM_Green.c ****     #endif /* (PWM_Green_CY_TCPWM_4000) */
 945:.\Generated_Source\PSoC4/PWM_Green.c ****     
 946:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_COMP_CAP_BUF_REG = (compareBuf & PWM_Green_16BIT_MASK);
 795              		.loc 1 946 0
 796 0000 0004     		lsl	r0, r0, #16
 797              	.LVL57:
 798 0002 000C     		lsr	r0, r0, #16
 799 0004 014B     		ldr	r3, .L65
 800 0006 1860     		str	r0, [r3]
 947:.\Generated_Source\PSoC4/PWM_Green.c **** }
 801              		.loc 1 947 0
 802              		@ sp needed
 803 0008 7047     		bx	lr
 804              	.L66:
 805 000a C046     		.align	2
 806              	.L65:
 807 000c 10012040 		.word	1075839248
 808              		.cfi_endproc
 809              	.LFE25:
 810              		.size	PWM_Green_WriteCompareBuf, .-PWM_Green_WriteCompareBuf
 811              		.section	.text.PWM_Green_ReadCompareBuf,"ax",%progbits
 812              		.align	2
 813              		.global	PWM_Green_ReadCompareBuf
 814              		.code	16
 815              		.thumb_func
 816              		.type	PWM_Green_ReadCompareBuf, %function
 817              	PWM_Green_ReadCompareBuf:
 818              	.LFB26:
 948:.\Generated_Source\PSoC4/PWM_Green.c **** 
 949:.\Generated_Source\PSoC4/PWM_Green.c **** 
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 32


 950:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 951:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_ReadCompareBuf
 952:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 953:.\Generated_Source\PSoC4/PWM_Green.c **** *
 954:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
 955:.\Generated_Source\PSoC4/PWM_Green.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 956:.\Generated_Source\PSoC4/PWM_Green.c **** *  Capture or in Quadrature Decoder modes.
 957:.\Generated_Source\PSoC4/PWM_Green.c **** *
 958:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
 959:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
 960:.\Generated_Source\PSoC4/PWM_Green.c **** *
 961:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
 962:.\Generated_Source\PSoC4/PWM_Green.c **** *  Compare buffer value
 963:.\Generated_Source\PSoC4/PWM_Green.c **** *
 964:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
 965:.\Generated_Source\PSoC4/PWM_Green.c **** uint32 PWM_Green_ReadCompareBuf(void)
 966:.\Generated_Source\PSoC4/PWM_Green.c **** {
 819              		.loc 1 966 0
 820              		.cfi_startproc
 967:.\Generated_Source\PSoC4/PWM_Green.c ****     #if (PWM_Green_CY_TCPWM_4000)
 968:.\Generated_Source\PSoC4/PWM_Green.c ****         uint32 currentMode;
 969:.\Generated_Source\PSoC4/PWM_Green.c ****         uint32 regVal;
 970:.\Generated_Source\PSoC4/PWM_Green.c ****     #endif /* (PWM_Green_CY_TCPWM_4000) */
 971:.\Generated_Source\PSoC4/PWM_Green.c **** 
 972:.\Generated_Source\PSoC4/PWM_Green.c ****     #if (PWM_Green_CY_TCPWM_4000)
 973:.\Generated_Source\PSoC4/PWM_Green.c ****         currentMode = ((PWM_Green_CONTROL_REG & PWM_Green_UPDOWN_MASK) >> PWM_Green_UPDOWN_SHIFT);
 974:.\Generated_Source\PSoC4/PWM_Green.c **** 
 975:.\Generated_Source\PSoC4/PWM_Green.c ****         regVal = PWM_Green_COMP_CAP_BUF_REG;
 976:.\Generated_Source\PSoC4/PWM_Green.c ****         
 977:.\Generated_Source\PSoC4/PWM_Green.c ****         if (((uint32)PWM_Green__COUNT_DOWN == currentMode) && (0u != regVal))
 978:.\Generated_Source\PSoC4/PWM_Green.c ****         {
 979:.\Generated_Source\PSoC4/PWM_Green.c ****             regVal--;
 980:.\Generated_Source\PSoC4/PWM_Green.c ****         }
 981:.\Generated_Source\PSoC4/PWM_Green.c ****         else if (((uint32)PWM_Green__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 982:.\Generated_Source\PSoC4/PWM_Green.c ****         {
 983:.\Generated_Source\PSoC4/PWM_Green.c ****             regVal++;
 984:.\Generated_Source\PSoC4/PWM_Green.c ****         }
 985:.\Generated_Source\PSoC4/PWM_Green.c ****         else
 986:.\Generated_Source\PSoC4/PWM_Green.c ****         {
 987:.\Generated_Source\PSoC4/PWM_Green.c ****         }
 988:.\Generated_Source\PSoC4/PWM_Green.c **** 
 989:.\Generated_Source\PSoC4/PWM_Green.c ****         return (regVal & PWM_Green_16BIT_MASK);
 990:.\Generated_Source\PSoC4/PWM_Green.c ****     #else
 991:.\Generated_Source\PSoC4/PWM_Green.c ****         return (PWM_Green_COMP_CAP_BUF_REG & PWM_Green_16BIT_MASK);
 821              		.loc 1 991 0
 822 0000 024B     		ldr	r3, .L68
 823 0002 1868     		ldr	r0, [r3]
 824 0004 0004     		lsl	r0, r0, #16
 825 0006 000C     		lsr	r0, r0, #16
 992:.\Generated_Source\PSoC4/PWM_Green.c ****     #endif /* (PWM_Green_CY_TCPWM_4000) */
 993:.\Generated_Source\PSoC4/PWM_Green.c **** }
 826              		.loc 1 993 0
 827              		@ sp needed
 828 0008 7047     		bx	lr
 829              	.L69:
 830 000a C046     		.align	2
 831              	.L68:
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 33


 832 000c 10012040 		.word	1075839248
 833              		.cfi_endproc
 834              	.LFE26:
 835              		.size	PWM_Green_ReadCompareBuf, .-PWM_Green_ReadCompareBuf
 836              		.section	.text.PWM_Green_ReadCapture,"ax",%progbits
 837              		.align	2
 838              		.global	PWM_Green_ReadCapture
 839              		.code	16
 840              		.thumb_func
 841              		.type	PWM_Green_ReadCapture, %function
 842              	PWM_Green_ReadCapture:
 843              	.LFB27:
 994:.\Generated_Source\PSoC4/PWM_Green.c **** 
 995:.\Generated_Source\PSoC4/PWM_Green.c **** 
 996:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
 997:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_ReadCapture
 998:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/PWM_Green.c **** *
1000:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
1001:.\Generated_Source\PSoC4/PWM_Green.c **** *  Reads the captured counter value. This API is applicable only for
1002:.\Generated_Source\PSoC4/PWM_Green.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1003:.\Generated_Source\PSoC4/PWM_Green.c **** *
1004:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
1005:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
1006:.\Generated_Source\PSoC4/PWM_Green.c **** *
1007:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
1008:.\Generated_Source\PSoC4/PWM_Green.c **** *  Capture value
1009:.\Generated_Source\PSoC4/PWM_Green.c **** *
1010:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
1011:.\Generated_Source\PSoC4/PWM_Green.c **** uint32 PWM_Green_ReadCapture(void)
1012:.\Generated_Source\PSoC4/PWM_Green.c **** {
 844              		.loc 1 1012 0
 845              		.cfi_startproc
1013:.\Generated_Source\PSoC4/PWM_Green.c ****     return (PWM_Green_COMP_CAP_REG & PWM_Green_16BIT_MASK);
 846              		.loc 1 1013 0
 847 0000 024B     		ldr	r3, .L71
 848 0002 1868     		ldr	r0, [r3]
 849 0004 0004     		lsl	r0, r0, #16
 850 0006 000C     		lsr	r0, r0, #16
1014:.\Generated_Source\PSoC4/PWM_Green.c **** }
 851              		.loc 1 1014 0
 852              		@ sp needed
 853 0008 7047     		bx	lr
 854              	.L72:
 855 000a C046     		.align	2
 856              	.L71:
 857 000c 0C012040 		.word	1075839244
 858              		.cfi_endproc
 859              	.LFE27:
 860              		.size	PWM_Green_ReadCapture, .-PWM_Green_ReadCapture
 861              		.section	.text.PWM_Green_ReadCaptureBuf,"ax",%progbits
 862              		.align	2
 863              		.global	PWM_Green_ReadCaptureBuf
 864              		.code	16
 865              		.thumb_func
 866              		.type	PWM_Green_ReadCaptureBuf, %function
 867              	PWM_Green_ReadCaptureBuf:
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 34


 868              	.LFB28:
1015:.\Generated_Source\PSoC4/PWM_Green.c **** 
1016:.\Generated_Source\PSoC4/PWM_Green.c **** 
1017:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
1018:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_ReadCaptureBuf
1019:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
1020:.\Generated_Source\PSoC4/PWM_Green.c **** *
1021:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
1022:.\Generated_Source\PSoC4/PWM_Green.c **** *  Reads the capture buffer register. This API is applicable only for
1023:.\Generated_Source\PSoC4/PWM_Green.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1024:.\Generated_Source\PSoC4/PWM_Green.c **** *
1025:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
1026:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
1027:.\Generated_Source\PSoC4/PWM_Green.c **** *
1028:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
1029:.\Generated_Source\PSoC4/PWM_Green.c **** *  Capture buffer value
1030:.\Generated_Source\PSoC4/PWM_Green.c **** *
1031:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
1032:.\Generated_Source\PSoC4/PWM_Green.c **** uint32 PWM_Green_ReadCaptureBuf(void)
1033:.\Generated_Source\PSoC4/PWM_Green.c **** {
 869              		.loc 1 1033 0
 870              		.cfi_startproc
1034:.\Generated_Source\PSoC4/PWM_Green.c ****     return (PWM_Green_COMP_CAP_BUF_REG & PWM_Green_16BIT_MASK);
 871              		.loc 1 1034 0
 872 0000 024B     		ldr	r3, .L74
 873 0002 1868     		ldr	r0, [r3]
 874 0004 0004     		lsl	r0, r0, #16
 875 0006 000C     		lsr	r0, r0, #16
1035:.\Generated_Source\PSoC4/PWM_Green.c **** }
 876              		.loc 1 1035 0
 877              		@ sp needed
 878 0008 7047     		bx	lr
 879              	.L75:
 880 000a C046     		.align	2
 881              	.L74:
 882 000c 10012040 		.word	1075839248
 883              		.cfi_endproc
 884              	.LFE28:
 885              		.size	PWM_Green_ReadCaptureBuf, .-PWM_Green_ReadCaptureBuf
 886              		.section	.text.PWM_Green_SetCaptureMode,"ax",%progbits
 887              		.align	2
 888              		.global	PWM_Green_SetCaptureMode
 889              		.code	16
 890              		.thumb_func
 891              		.type	PWM_Green_SetCaptureMode, %function
 892              	PWM_Green_SetCaptureMode:
 893              	.LFB29:
1036:.\Generated_Source\PSoC4/PWM_Green.c **** 
1037:.\Generated_Source\PSoC4/PWM_Green.c **** 
1038:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
1039:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_SetCaptureMode
1040:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
1041:.\Generated_Source\PSoC4/PWM_Green.c **** *
1042:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
1043:.\Generated_Source\PSoC4/PWM_Green.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1044:.\Generated_Source\PSoC4/PWM_Green.c **** *  This input is not applicable to the Timer/Counter without Capture and
1045:.\Generated_Source\PSoC4/PWM_Green.c **** *  Quadrature Decoder modes.
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 35


1046:.\Generated_Source\PSoC4/PWM_Green.c **** *
1047:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
1048:.\Generated_Source\PSoC4/PWM_Green.c **** *  triggerMode: Enumerated trigger mode value
1049:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
1050:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_TRIG_LEVEL     - Level
1051:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_TRIG_RISING    - Rising edge
1052:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_TRIG_FALLING   - Falling edge
1053:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_TRIG_BOTH      - Both rising and falling edge
1054:.\Generated_Source\PSoC4/PWM_Green.c **** *
1055:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
1056:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
1057:.\Generated_Source\PSoC4/PWM_Green.c **** *
1058:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
1059:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_SetCaptureMode(uint32 triggerMode)
1060:.\Generated_Source\PSoC4/PWM_Green.c **** {
 894              		.loc 1 1060 0
 895              		.cfi_startproc
 896              	.LVL58:
 897 0000 10B5     		push	{r4, lr}
 898              		.cfi_def_cfa_offset 8
 899              		.cfi_offset 4, -8
 900              		.cfi_offset 14, -4
 901 0002 041C     		mov	r4, r0
1061:.\Generated_Source\PSoC4/PWM_Green.c ****     uint8 enableInterrupts;
1062:.\Generated_Source\PSoC4/PWM_Green.c **** 
1063:.\Generated_Source\PSoC4/PWM_Green.c ****     enableInterrupts = CyEnterCriticalSection();
 902              		.loc 1 1063 0
 903 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 904              	.LVL59:
1064:.\Generated_Source\PSoC4/PWM_Green.c **** 
1065:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_TRIG_CONTROL1_REG &= (uint32)~PWM_Green_CAPTURE_MASK;
 905              		.loc 1 1065 0
 906 0008 054B     		ldr	r3, .L77
 907 000a 1A68     		ldr	r2, [r3]
 908 000c 0321     		mov	r1, #3
 909 000e 8A43     		bic	r2, r1
 910 0010 1A60     		str	r2, [r3]
1066:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_TRIG_CONTROL1_REG |= triggerMode;
 911              		.loc 1 1066 0
 912 0012 1A68     		ldr	r2, [r3]
 913 0014 1443     		orr	r4, r2
 914              	.LVL60:
 915 0016 1C60     		str	r4, [r3]
1067:.\Generated_Source\PSoC4/PWM_Green.c **** 
1068:.\Generated_Source\PSoC4/PWM_Green.c ****     CyExitCriticalSection(enableInterrupts);
 916              		.loc 1 1068 0
 917 0018 FFF7FEFF 		bl	CyExitCriticalSection
 918              	.LVL61:
1069:.\Generated_Source\PSoC4/PWM_Green.c **** }
 919              		.loc 1 1069 0
 920              		@ sp needed
 921 001c 10BD     		pop	{r4, pc}
 922              	.L78:
 923 001e C046     		.align	2
 924              	.L77:
 925 0020 24012040 		.word	1075839268
 926              		.cfi_endproc
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 36


 927              	.LFE29:
 928              		.size	PWM_Green_SetCaptureMode, .-PWM_Green_SetCaptureMode
 929              		.section	.text.PWM_Green_SetReloadMode,"ax",%progbits
 930              		.align	2
 931              		.global	PWM_Green_SetReloadMode
 932              		.code	16
 933              		.thumb_func
 934              		.type	PWM_Green_SetReloadMode, %function
 935              	PWM_Green_SetReloadMode:
 936              	.LFB30:
1070:.\Generated_Source\PSoC4/PWM_Green.c **** 
1071:.\Generated_Source\PSoC4/PWM_Green.c **** 
1072:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
1073:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_SetReloadMode
1074:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
1075:.\Generated_Source\PSoC4/PWM_Green.c **** *
1076:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
1077:.\Generated_Source\PSoC4/PWM_Green.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1078:.\Generated_Source\PSoC4/PWM_Green.c **** *  input.
1079:.\Generated_Source\PSoC4/PWM_Green.c **** *
1080:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
1081:.\Generated_Source\PSoC4/PWM_Green.c **** *  triggerMode: Enumerated trigger mode value
1082:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
1083:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_TRIG_LEVEL     - Level
1084:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_TRIG_RISING    - Rising edge
1085:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_TRIG_FALLING   - Falling edge
1086:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_TRIG_BOTH      - Both rising and falling edge
1087:.\Generated_Source\PSoC4/PWM_Green.c **** *
1088:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
1089:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
1090:.\Generated_Source\PSoC4/PWM_Green.c **** *
1091:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
1092:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_SetReloadMode(uint32 triggerMode)
1093:.\Generated_Source\PSoC4/PWM_Green.c **** {
 937              		.loc 1 1093 0
 938              		.cfi_startproc
 939              	.LVL62:
 940 0000 10B5     		push	{r4, lr}
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 4, -8
 943              		.cfi_offset 14, -4
 944 0002 041C     		mov	r4, r0
1094:.\Generated_Source\PSoC4/PWM_Green.c ****     uint8 enableInterrupts;
1095:.\Generated_Source\PSoC4/PWM_Green.c **** 
1096:.\Generated_Source\PSoC4/PWM_Green.c ****     enableInterrupts = CyEnterCriticalSection();
 945              		.loc 1 1096 0
 946 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 947              	.LVL63:
1097:.\Generated_Source\PSoC4/PWM_Green.c **** 
1098:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_TRIG_CONTROL1_REG &= (uint32)~PWM_Green_RELOAD_MASK;
 948              		.loc 1 1098 0
 949 0008 054B     		ldr	r3, .L80
 950 000a 1A68     		ldr	r2, [r3]
 951 000c 3021     		mov	r1, #48
 952 000e 8A43     		bic	r2, r1
 953 0010 1A60     		str	r2, [r3]
1099:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_Green_RELOAD_SHIFT));
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 37


 954              		.loc 1 1099 0
 955 0012 1A68     		ldr	r2, [r3]
 956 0014 2401     		lsl	r4, r4, #4
 957              	.LVL64:
 958 0016 1443     		orr	r4, r2
 959 0018 1C60     		str	r4, [r3]
1100:.\Generated_Source\PSoC4/PWM_Green.c **** 
1101:.\Generated_Source\PSoC4/PWM_Green.c ****     CyExitCriticalSection(enableInterrupts);
 960              		.loc 1 1101 0
 961 001a FFF7FEFF 		bl	CyExitCriticalSection
 962              	.LVL65:
1102:.\Generated_Source\PSoC4/PWM_Green.c **** }
 963              		.loc 1 1102 0
 964              		@ sp needed
 965 001e 10BD     		pop	{r4, pc}
 966              	.L81:
 967              		.align	2
 968              	.L80:
 969 0020 24012040 		.word	1075839268
 970              		.cfi_endproc
 971              	.LFE30:
 972              		.size	PWM_Green_SetReloadMode, .-PWM_Green_SetReloadMode
 973              		.section	.text.PWM_Green_SetStartMode,"ax",%progbits
 974              		.align	2
 975              		.global	PWM_Green_SetStartMode
 976              		.code	16
 977              		.thumb_func
 978              		.type	PWM_Green_SetStartMode, %function
 979              	PWM_Green_SetStartMode:
 980              	.LFB31:
1103:.\Generated_Source\PSoC4/PWM_Green.c **** 
1104:.\Generated_Source\PSoC4/PWM_Green.c **** 
1105:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
1106:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_SetStartMode
1107:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
1108:.\Generated_Source\PSoC4/PWM_Green.c **** *
1109:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
1110:.\Generated_Source\PSoC4/PWM_Green.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1111:.\Generated_Source\PSoC4/PWM_Green.c **** *  phiB input.
1112:.\Generated_Source\PSoC4/PWM_Green.c **** *
1113:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
1114:.\Generated_Source\PSoC4/PWM_Green.c **** *  triggerMode: Enumerated trigger mode value
1115:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
1116:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_TRIG_LEVEL     - Level
1117:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_TRIG_RISING    - Rising edge
1118:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_TRIG_FALLING   - Falling edge
1119:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_TRIG_BOTH      - Both rising and falling edge
1120:.\Generated_Source\PSoC4/PWM_Green.c **** *
1121:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
1122:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
1123:.\Generated_Source\PSoC4/PWM_Green.c **** *
1124:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
1125:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_SetStartMode(uint32 triggerMode)
1126:.\Generated_Source\PSoC4/PWM_Green.c **** {
 981              		.loc 1 1126 0
 982              		.cfi_startproc
 983              	.LVL66:
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 38


 984 0000 10B5     		push	{r4, lr}
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 4, -8
 987              		.cfi_offset 14, -4
 988 0002 041C     		mov	r4, r0
1127:.\Generated_Source\PSoC4/PWM_Green.c ****     uint8 enableInterrupts;
1128:.\Generated_Source\PSoC4/PWM_Green.c **** 
1129:.\Generated_Source\PSoC4/PWM_Green.c ****     enableInterrupts = CyEnterCriticalSection();
 989              		.loc 1 1129 0
 990 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 991              	.LVL67:
1130:.\Generated_Source\PSoC4/PWM_Green.c **** 
1131:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_TRIG_CONTROL1_REG &= (uint32)~PWM_Green_START_MASK;
 992              		.loc 1 1131 0
 993 0008 054B     		ldr	r3, .L83
 994 000a 1968     		ldr	r1, [r3]
 995 000c 054A     		ldr	r2, .L83+4
 996 000e 0A40     		and	r2, r1
 997 0010 1A60     		str	r2, [r3]
1132:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_Green_START_SHIFT));
 998              		.loc 1 1132 0
 999 0012 1A68     		ldr	r2, [r3]
 1000 0014 2402     		lsl	r4, r4, #8
 1001              	.LVL68:
 1002 0016 1443     		orr	r4, r2
 1003 0018 1C60     		str	r4, [r3]
1133:.\Generated_Source\PSoC4/PWM_Green.c **** 
1134:.\Generated_Source\PSoC4/PWM_Green.c ****     CyExitCriticalSection(enableInterrupts);
 1004              		.loc 1 1134 0
 1005 001a FFF7FEFF 		bl	CyExitCriticalSection
 1006              	.LVL69:
1135:.\Generated_Source\PSoC4/PWM_Green.c **** }
 1007              		.loc 1 1135 0
 1008              		@ sp needed
 1009 001e 10BD     		pop	{r4, pc}
 1010              	.L84:
 1011              		.align	2
 1012              	.L83:
 1013 0020 24012040 		.word	1075839268
 1014 0024 FFFCFFFF 		.word	-769
 1015              		.cfi_endproc
 1016              	.LFE31:
 1017              		.size	PWM_Green_SetStartMode, .-PWM_Green_SetStartMode
 1018              		.section	.text.PWM_Green_SetStopMode,"ax",%progbits
 1019              		.align	2
 1020              		.global	PWM_Green_SetStopMode
 1021              		.code	16
 1022              		.thumb_func
 1023              		.type	PWM_Green_SetStopMode, %function
 1024              	PWM_Green_SetStopMode:
 1025              	.LFB32:
1136:.\Generated_Source\PSoC4/PWM_Green.c **** 
1137:.\Generated_Source\PSoC4/PWM_Green.c **** 
1138:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
1139:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_SetStopMode
1140:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
1141:.\Generated_Source\PSoC4/PWM_Green.c **** *
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 39


1142:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
1143:.\Generated_Source\PSoC4/PWM_Green.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1144:.\Generated_Source\PSoC4/PWM_Green.c **** *
1145:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
1146:.\Generated_Source\PSoC4/PWM_Green.c **** *  triggerMode: Enumerated trigger mode value
1147:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
1148:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_TRIG_LEVEL     - Level
1149:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_TRIG_RISING    - Rising edge
1150:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_TRIG_FALLING   - Falling edge
1151:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_TRIG_BOTH      - Both rising and falling edge
1152:.\Generated_Source\PSoC4/PWM_Green.c **** *
1153:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
1154:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
1155:.\Generated_Source\PSoC4/PWM_Green.c **** *
1156:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
1157:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_SetStopMode(uint32 triggerMode)
1158:.\Generated_Source\PSoC4/PWM_Green.c **** {
 1026              		.loc 1 1158 0
 1027              		.cfi_startproc
 1028              	.LVL70:
 1029 0000 10B5     		push	{r4, lr}
 1030              		.cfi_def_cfa_offset 8
 1031              		.cfi_offset 4, -8
 1032              		.cfi_offset 14, -4
 1033 0002 041C     		mov	r4, r0
1159:.\Generated_Source\PSoC4/PWM_Green.c ****     uint8 enableInterrupts;
1160:.\Generated_Source\PSoC4/PWM_Green.c **** 
1161:.\Generated_Source\PSoC4/PWM_Green.c ****     enableInterrupts = CyEnterCriticalSection();
 1034              		.loc 1 1161 0
 1035 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1036              	.LVL71:
1162:.\Generated_Source\PSoC4/PWM_Green.c **** 
1163:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_TRIG_CONTROL1_REG &= (uint32)~PWM_Green_STOP_MASK;
 1037              		.loc 1 1163 0
 1038 0008 054B     		ldr	r3, .L86
 1039 000a 1A68     		ldr	r2, [r3]
 1040 000c C021     		mov	r1, #192
 1041 000e 8A43     		bic	r2, r1
 1042 0010 1A60     		str	r2, [r3]
1164:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_Green_STOP_SHIFT));
 1043              		.loc 1 1164 0
 1044 0012 1A68     		ldr	r2, [r3]
 1045 0014 A401     		lsl	r4, r4, #6
 1046              	.LVL72:
 1047 0016 1443     		orr	r4, r2
 1048 0018 1C60     		str	r4, [r3]
1165:.\Generated_Source\PSoC4/PWM_Green.c **** 
1166:.\Generated_Source\PSoC4/PWM_Green.c ****     CyExitCriticalSection(enableInterrupts);
 1049              		.loc 1 1166 0
 1050 001a FFF7FEFF 		bl	CyExitCriticalSection
 1051              	.LVL73:
1167:.\Generated_Source\PSoC4/PWM_Green.c **** }
 1052              		.loc 1 1167 0
 1053              		@ sp needed
 1054 001e 10BD     		pop	{r4, pc}
 1055              	.L87:
 1056              		.align	2
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 40


 1057              	.L86:
 1058 0020 24012040 		.word	1075839268
 1059              		.cfi_endproc
 1060              	.LFE32:
 1061              		.size	PWM_Green_SetStopMode, .-PWM_Green_SetStopMode
 1062              		.section	.text.PWM_Green_SetCountMode,"ax",%progbits
 1063              		.align	2
 1064              		.global	PWM_Green_SetCountMode
 1065              		.code	16
 1066              		.thumb_func
 1067              		.type	PWM_Green_SetCountMode, %function
 1068              	PWM_Green_SetCountMode:
 1069              	.LFB33:
1168:.\Generated_Source\PSoC4/PWM_Green.c **** 
1169:.\Generated_Source\PSoC4/PWM_Green.c **** 
1170:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
1171:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_SetCountMode
1172:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
1173:.\Generated_Source\PSoC4/PWM_Green.c **** *
1174:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
1175:.\Generated_Source\PSoC4/PWM_Green.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1176:.\Generated_Source\PSoC4/PWM_Green.c **** *  input.
1177:.\Generated_Source\PSoC4/PWM_Green.c **** *
1178:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
1179:.\Generated_Source\PSoC4/PWM_Green.c **** *  triggerMode: Enumerated trigger mode value
1180:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
1181:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_TRIG_LEVEL     - Level
1182:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_TRIG_RISING    - Rising edge
1183:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_TRIG_FALLING   - Falling edge
1184:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_TRIG_BOTH      - Both rising and falling edge
1185:.\Generated_Source\PSoC4/PWM_Green.c **** *
1186:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
1187:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
1188:.\Generated_Source\PSoC4/PWM_Green.c **** *
1189:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
1190:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_SetCountMode(uint32 triggerMode)
1191:.\Generated_Source\PSoC4/PWM_Green.c **** {
 1070              		.loc 1 1191 0
 1071              		.cfi_startproc
 1072              	.LVL74:
 1073 0000 10B5     		push	{r4, lr}
 1074              		.cfi_def_cfa_offset 8
 1075              		.cfi_offset 4, -8
 1076              		.cfi_offset 14, -4
 1077 0002 041C     		mov	r4, r0
1192:.\Generated_Source\PSoC4/PWM_Green.c ****     uint8 enableInterrupts;
1193:.\Generated_Source\PSoC4/PWM_Green.c **** 
1194:.\Generated_Source\PSoC4/PWM_Green.c ****     enableInterrupts = CyEnterCriticalSection();
 1078              		.loc 1 1194 0
 1079 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1080              	.LVL75:
1195:.\Generated_Source\PSoC4/PWM_Green.c **** 
1196:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_TRIG_CONTROL1_REG &= (uint32)~PWM_Green_COUNT_MASK;
 1081              		.loc 1 1196 0
 1082 0008 054B     		ldr	r3, .L89
 1083 000a 1A68     		ldr	r2, [r3]
 1084 000c 0C21     		mov	r1, #12
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 41


 1085 000e 8A43     		bic	r2, r1
 1086 0010 1A60     		str	r2, [r3]
1197:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_Green_COUNT_SHIFT));
 1087              		.loc 1 1197 0
 1088 0012 1A68     		ldr	r2, [r3]
 1089 0014 A400     		lsl	r4, r4, #2
 1090              	.LVL76:
 1091 0016 1443     		orr	r4, r2
 1092 0018 1C60     		str	r4, [r3]
1198:.\Generated_Source\PSoC4/PWM_Green.c **** 
1199:.\Generated_Source\PSoC4/PWM_Green.c ****     CyExitCriticalSection(enableInterrupts);
 1093              		.loc 1 1199 0
 1094 001a FFF7FEFF 		bl	CyExitCriticalSection
 1095              	.LVL77:
1200:.\Generated_Source\PSoC4/PWM_Green.c **** }
 1096              		.loc 1 1200 0
 1097              		@ sp needed
 1098 001e 10BD     		pop	{r4, pc}
 1099              	.L90:
 1100              		.align	2
 1101              	.L89:
 1102 0020 24012040 		.word	1075839268
 1103              		.cfi_endproc
 1104              	.LFE33:
 1105              		.size	PWM_Green_SetCountMode, .-PWM_Green_SetCountMode
 1106              		.section	.text.PWM_Green_TriggerCommand,"ax",%progbits
 1107              		.align	2
 1108              		.global	PWM_Green_TriggerCommand
 1109              		.code	16
 1110              		.thumb_func
 1111              		.type	PWM_Green_TriggerCommand, %function
 1112              	PWM_Green_TriggerCommand:
 1113              	.LFB34:
1201:.\Generated_Source\PSoC4/PWM_Green.c **** 
1202:.\Generated_Source\PSoC4/PWM_Green.c **** 
1203:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_TriggerCommand
1205:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/PWM_Green.c **** *
1207:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
1208:.\Generated_Source\PSoC4/PWM_Green.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1209:.\Generated_Source\PSoC4/PWM_Green.c **** *  The mask can be used to apply this command simultaneously to more than one
1210:.\Generated_Source\PSoC4/PWM_Green.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1211:.\Generated_Source\PSoC4/PWM_Green.c **** *
1212:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
1213:.\Generated_Source\PSoC4/PWM_Green.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1214:.\Generated_Source\PSoC4/PWM_Green.c **** *        command should apply to.  This function from one instance can be used
1215:.\Generated_Source\PSoC4/PWM_Green.c **** *        to apply the command to any of the instances in the design.
1216:.\Generated_Source\PSoC4/PWM_Green.c **** *        The mask value for a specific instance is available with the MASK
1217:.\Generated_Source\PSoC4/PWM_Green.c **** *        define.
1218:.\Generated_Source\PSoC4/PWM_Green.c **** *  command: Enumerated command values. Capture command only applicable for
1219:.\Generated_Source\PSoC4/PWM_Green.c **** *           Timer/Counter with Capture and PWM modes.
1220:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
1221:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_CMD_CAPTURE    - Trigger Capture command
1222:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_CMD_RELOAD     - Trigger Reload command
1223:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_CMD_STOP       - Trigger Stop command
1224:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_CMD_START      - Trigger Start command
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 42


1225:.\Generated_Source\PSoC4/PWM_Green.c **** *
1226:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
1227:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
1228:.\Generated_Source\PSoC4/PWM_Green.c **** *
1229:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
1230:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_TriggerCommand(uint32 mask, uint32 command)
1231:.\Generated_Source\PSoC4/PWM_Green.c **** {
 1114              		.loc 1 1231 0
 1115              		.cfi_startproc
 1116              	.LVL78:
 1117 0000 38B5     		push	{r3, r4, r5, lr}
 1118              		.cfi_def_cfa_offset 16
 1119              		.cfi_offset 3, -16
 1120              		.cfi_offset 4, -12
 1121              		.cfi_offset 5, -8
 1122              		.cfi_offset 14, -4
 1123 0002 041C     		mov	r4, r0
 1124 0004 0D1C     		mov	r5, r1
1232:.\Generated_Source\PSoC4/PWM_Green.c ****     uint8 enableInterrupts;
1233:.\Generated_Source\PSoC4/PWM_Green.c **** 
1234:.\Generated_Source\PSoC4/PWM_Green.c ****     enableInterrupts = CyEnterCriticalSection();
 1125              		.loc 1 1234 0
 1126 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1127              	.LVL79:
1235:.\Generated_Source\PSoC4/PWM_Green.c **** 
1236:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_COMMAND_REG = ((uint32)(mask << command));
 1128              		.loc 1 1236 0
 1129 000a AC40     		lsl	r4, r4, r5
 1130              	.LVL80:
 1131 000c 024B     		ldr	r3, .L92
 1132 000e 1C60     		str	r4, [r3]
1237:.\Generated_Source\PSoC4/PWM_Green.c **** 
1238:.\Generated_Source\PSoC4/PWM_Green.c ****     CyExitCriticalSection(enableInterrupts);
 1133              		.loc 1 1238 0
 1134 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1135              	.LVL81:
1239:.\Generated_Source\PSoC4/PWM_Green.c **** }
 1136              		.loc 1 1239 0
 1137              		@ sp needed
 1138              	.LVL82:
 1139 0014 38BD     		pop	{r3, r4, r5, pc}
 1140              	.L93:
 1141 0016 C046     		.align	2
 1142              	.L92:
 1143 0018 08002040 		.word	1075838984
 1144              		.cfi_endproc
 1145              	.LFE34:
 1146              		.size	PWM_Green_TriggerCommand, .-PWM_Green_TriggerCommand
 1147              		.section	.text.PWM_Green_Enable,"ax",%progbits
 1148              		.align	2
 1149              		.global	PWM_Green_Enable
 1150              		.code	16
 1151              		.thumb_func
 1152              		.type	PWM_Green_Enable, %function
 1153              	PWM_Green_Enable:
 1154              	.LFB2:
 178:.\Generated_Source\PSoC4/PWM_Green.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 43


 1155              		.loc 1 178 0
 1156              		.cfi_startproc
 1157 0000 08B5     		push	{r3, lr}
 1158              		.cfi_def_cfa_offset 8
 1159              		.cfi_offset 3, -8
 1160              		.cfi_offset 14, -4
 181:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_BLOCK_CONTROL_REG |= PWM_Green_MASK;
 1161              		.loc 1 181 0
 1162 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1163              	.LVL83:
 182:.\Generated_Source\PSoC4/PWM_Green.c ****     CyExitCriticalSection(enableInterrupts);
 1164              		.loc 1 182 0
 1165 0006 064A     		ldr	r2, .L95
 1166 0008 1168     		ldr	r1, [r2]
 1167 000a 0123     		mov	r3, #1
 1168 000c 0B43     		orr	r3, r1
 1169 000e 1360     		str	r3, [r2]
 183:.\Generated_Source\PSoC4/PWM_Green.c **** 
 1170              		.loc 1 183 0
 1171 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1172              	.LVL84:
 188:.\Generated_Source\PSoC4/PWM_Green.c ****         #endif /* (0u == PWM_Green_PWM_START_SIGNAL_PRESENT) */
 1173              		.loc 1 188 0
 1174 0014 0120     		mov	r0, #1
 1175 0016 1821     		mov	r1, #24
 1176 0018 FFF7FEFF 		bl	PWM_Green_TriggerCommand
 1177              	.LVL85:
 197:.\Generated_Source\PSoC4/PWM_Green.c **** 
 1178              		.loc 1 197 0
 1179              		@ sp needed
 1180 001c 08BD     		pop	{r3, pc}
 1181              	.L96:
 1182 001e C046     		.align	2
 1183              	.L95:
 1184 0020 00002040 		.word	1075838976
 1185              		.cfi_endproc
 1186              	.LFE2:
 1187              		.size	PWM_Green_Enable, .-PWM_Green_Enable
 1188              		.section	.text.PWM_Green_ReadStatus,"ax",%progbits
 1189              		.align	2
 1190              		.global	PWM_Green_ReadStatus
 1191              		.code	16
 1192              		.thumb_func
 1193              		.type	PWM_Green_ReadStatus, %function
 1194              	PWM_Green_ReadStatus:
 1195              	.LFB35:
1240:.\Generated_Source\PSoC4/PWM_Green.c **** 
1241:.\Generated_Source\PSoC4/PWM_Green.c **** 
1242:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
1243:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_ReadStatus
1244:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
1245:.\Generated_Source\PSoC4/PWM_Green.c **** *
1246:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
1247:.\Generated_Source\PSoC4/PWM_Green.c **** *  Reads the status of the PWM_Green.
1248:.\Generated_Source\PSoC4/PWM_Green.c **** *
1249:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
1250:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 44


1251:.\Generated_Source\PSoC4/PWM_Green.c **** *
1252:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
1253:.\Generated_Source\PSoC4/PWM_Green.c **** *  Status
1254:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
1255:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_STATUS_DOWN    - Set if counting down
1256:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_STATUS_RUNNING - Set if counter is running
1257:.\Generated_Source\PSoC4/PWM_Green.c **** *
1258:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
1259:.\Generated_Source\PSoC4/PWM_Green.c **** uint32 PWM_Green_ReadStatus(void)
1260:.\Generated_Source\PSoC4/PWM_Green.c **** {
 1196              		.loc 1 1260 0
 1197              		.cfi_startproc
1261:.\Generated_Source\PSoC4/PWM_Green.c ****     return ((PWM_Green_STATUS_REG >> PWM_Green_RUNNING_STATUS_SHIFT) |
 1198              		.loc 1 1261 0
 1199 0000 034B     		ldr	r3, .L98
 1200 0002 1868     		ldr	r0, [r3]
 1201 0004 820F     		lsr	r2, r0, #30
1262:.\Generated_Source\PSoC4/PWM_Green.c ****             (PWM_Green_STATUS_REG & PWM_Green_STATUS_DOWN));
 1202              		.loc 1 1262 0
 1203 0006 1B68     		ldr	r3, [r3]
 1204 0008 0120     		mov	r0, #1
 1205 000a 1840     		and	r0, r3
1261:.\Generated_Source\PSoC4/PWM_Green.c ****     return ((PWM_Green_STATUS_REG >> PWM_Green_RUNNING_STATUS_SHIFT) |
 1206              		.loc 1 1261 0
 1207 000c 1043     		orr	r0, r2
1263:.\Generated_Source\PSoC4/PWM_Green.c **** }
 1208              		.loc 1 1263 0
 1209              		@ sp needed
 1210 000e 7047     		bx	lr
 1211              	.L99:
 1212              		.align	2
 1213              	.L98:
 1214 0010 04012040 		.word	1075839236
 1215              		.cfi_endproc
 1216              	.LFE35:
 1217              		.size	PWM_Green_ReadStatus, .-PWM_Green_ReadStatus
 1218              		.section	.text.PWM_Green_SetInterruptMode,"ax",%progbits
 1219              		.align	2
 1220              		.global	PWM_Green_SetInterruptMode
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	PWM_Green_SetInterruptMode, %function
 1224              	PWM_Green_SetInterruptMode:
 1225              	.LFB36:
1264:.\Generated_Source\PSoC4/PWM_Green.c **** 
1265:.\Generated_Source\PSoC4/PWM_Green.c **** 
1266:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
1267:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_SetInterruptMode
1268:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
1269:.\Generated_Source\PSoC4/PWM_Green.c **** *
1270:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
1271:.\Generated_Source\PSoC4/PWM_Green.c **** *  Sets the interrupt mask to control which interrupt
1272:.\Generated_Source\PSoC4/PWM_Green.c **** *  requests generate the interrupt signal.
1273:.\Generated_Source\PSoC4/PWM_Green.c **** *
1274:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
1275:.\Generated_Source\PSoC4/PWM_Green.c **** *   interruptMask: Mask of bits to be enabled
1276:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 45


1277:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_INTR_MASK_TC       - Terminal count mask
1278:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_INTR_MASK_CC_MATCH - Compare count / capture mask
1279:.\Generated_Source\PSoC4/PWM_Green.c **** *
1280:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
1281:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
1282:.\Generated_Source\PSoC4/PWM_Green.c **** *
1283:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_SetInterruptMode(uint32 interruptMask)
1285:.\Generated_Source\PSoC4/PWM_Green.c **** {
 1226              		.loc 1 1285 0
 1227              		.cfi_startproc
 1228              	.LVL86:
1286:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_INTERRUPT_MASK_REG =  interruptMask;
 1229              		.loc 1 1286 0
 1230 0000 014B     		ldr	r3, .L101
 1231 0002 1860     		str	r0, [r3]
1287:.\Generated_Source\PSoC4/PWM_Green.c **** }
 1232              		.loc 1 1287 0
 1233              		@ sp needed
 1234 0004 7047     		bx	lr
 1235              	.L102:
 1236 0006 C046     		.align	2
 1237              	.L101:
 1238 0008 38012040 		.word	1075839288
 1239              		.cfi_endproc
 1240              	.LFE36:
 1241              		.size	PWM_Green_SetInterruptMode, .-PWM_Green_SetInterruptMode
 1242              		.section	.text.PWM_Green_Init,"ax",%progbits
 1243              		.align	2
 1244              		.global	PWM_Green_Init
 1245              		.code	16
 1246              		.thumb_func
 1247              		.type	PWM_Green_Init, %function
 1248              	PWM_Green_Init:
 1249              	.LFB1:
  39:.\Generated_Source\PSoC4/PWM_Green.c **** 
 1250              		.loc 1 39 0
 1251              		.cfi_startproc
 1252 0000 08B5     		push	{r3, lr}
 1253              		.cfi_def_cfa_offset 8
 1254              		.cfi_offset 3, -8
 1255              		.cfi_offset 14, -4
  89:.\Generated_Source\PSoC4/PWM_Green.c **** 
 1256              		.loc 1 89 0
 1257 0002 0D4B     		ldr	r3, .L104
 1258 0004 C022     		mov	r2, #192
 1259 0006 D204     		lsl	r2, r2, #19
 1260 0008 1A60     		str	r2, [r3]
  92:.\Generated_Source\PSoC4/PWM_Green.c ****             PWM_Green_WriteCounter(PWM_Green_PWM_PR_INIT_VALUE);
 1261              		.loc 1 92 0
 1262 000a 1A68     		ldr	r2, [r3]
 1263 000c 1A60     		str	r2, [r3]
  93:.\Generated_Source\PSoC4/PWM_Green.c ****         #else
 1264              		.loc 1 93 0
 1265 000e 0120     		mov	r0, #1
 1266 0010 FFF7FEFF 		bl	PWM_Green_WriteCounter
 1267              	.LVL87:
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 46


 116:.\Generated_Source\PSoC4/PWM_Green.c ****     
 1268              		.loc 1 116 0
 1269 0014 0C22     		mov	r2, #12
 1270 0016 094B     		ldr	r3, .L104+4
 1271 0018 1A60     		str	r2, [r3]
 119:.\Generated_Source\PSoC4/PWM_Green.c **** 
 1272              		.loc 1 119 0
 1273 001a 0020     		mov	r0, #0
 1274 001c FFF7FEFF 		bl	PWM_Green_SetInterruptMode
 1275              	.LVL88:
 123:.\Generated_Source\PSoC4/PWM_Green.c ****                     (PWM_Green_CC_MATCH_NO_CHANGE    |
 1276              		.loc 1 123 0
 1277 0020 3F22     		mov	r2, #63
 1278 0022 074B     		ldr	r3, .L104+8
 1279 0024 1A60     		str	r2, [r3]
 146:.\Generated_Source\PSoC4/PWM_Green.c ****         PWM_Green_WriteCompare(PWM_Green_PWM_COMPARE_VALUE);
 1280              		.loc 1 146 0
 1281 0026 0748     		ldr	r0, .L104+12
 1282 0028 FFF7FEFF 		bl	PWM_Green_WritePeriod
 1283              	.LVL89:
 147:.\Generated_Source\PSoC4/PWM_Green.c **** 
 1284              		.loc 1 147 0
 1285 002c FA20     		mov	r0, #250
 1286 002e C001     		lsl	r0, r0, #7
 1287 0030 FFF7FEFF 		bl	PWM_Green_WriteCompare
 1288              	.LVL90:
 160:.\Generated_Source\PSoC4/PWM_Green.c **** 
 1289              		.loc 1 160 0
 1290              		@ sp needed
 1291 0034 08BD     		pop	{r3, pc}
 1292              	.L105:
 1293 0036 C046     		.align	2
 1294              	.L104:
 1295 0038 00012040 		.word	1075839232
 1296 003c 24012040 		.word	1075839268
 1297 0040 28012040 		.word	1075839272
 1298 0044 FFFF0000 		.word	65535
 1299              		.cfi_endproc
 1300              	.LFE1:
 1301              		.size	PWM_Green_Init, .-PWM_Green_Init
 1302              		.section	.text.PWM_Green_Start,"ax",%progbits
 1303              		.align	2
 1304              		.global	PWM_Green_Start
 1305              		.code	16
 1306              		.thumb_func
 1307              		.type	PWM_Green_Start, %function
 1308              	PWM_Green_Start:
 1309              	.LFB3:
 225:.\Generated_Source\PSoC4/PWM_Green.c ****     if (0u == PWM_Green_initVar)
 1310              		.loc 1 225 0
 1311              		.cfi_startproc
 1312 0000 08B5     		push	{r3, lr}
 1313              		.cfi_def_cfa_offset 8
 1314              		.cfi_offset 3, -8
 1315              		.cfi_offset 14, -4
 226:.\Generated_Source\PSoC4/PWM_Green.c ****     {
 1316              		.loc 1 226 0
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 47


 1317 0002 064B     		ldr	r3, .L108
 1318 0004 1B78     		ldrb	r3, [r3]
 1319 0006 002B     		cmp	r3, #0
 1320 0008 04D1     		bne	.L107
 228:.\Generated_Source\PSoC4/PWM_Green.c ****         PWM_Green_initVar = 1u;
 1321              		.loc 1 228 0
 1322 000a FFF7FEFF 		bl	PWM_Green_Init
 1323              	.LVL91:
 229:.\Generated_Source\PSoC4/PWM_Green.c ****     }
 1324              		.loc 1 229 0
 1325 000e 0122     		mov	r2, #1
 1326 0010 024B     		ldr	r3, .L108
 1327 0012 1A70     		strb	r2, [r3]
 1328              	.L107:
 232:.\Generated_Source\PSoC4/PWM_Green.c **** }
 1329              		.loc 1 232 0
 1330 0014 FFF7FEFF 		bl	PWM_Green_Enable
 1331              	.LVL92:
 233:.\Generated_Source\PSoC4/PWM_Green.c **** 
 1332              		.loc 1 233 0
 1333              		@ sp needed
 1334 0018 08BD     		pop	{r3, pc}
 1335              	.L109:
 1336 001a C046     		.align	2
 1337              	.L108:
 1338 001c 00000000 		.word	.LANCHOR0
 1339              		.cfi_endproc
 1340              	.LFE3:
 1341              		.size	PWM_Green_Start, .-PWM_Green_Start
 1342              		.section	.text.PWM_Green_GetInterruptSourceMasked,"ax",%progbits
 1343              		.align	2
 1344              		.global	PWM_Green_GetInterruptSourceMasked
 1345              		.code	16
 1346              		.thumb_func
 1347              		.type	PWM_Green_GetInterruptSourceMasked, %function
 1348              	PWM_Green_GetInterruptSourceMasked:
 1349              	.LFB37:
1288:.\Generated_Source\PSoC4/PWM_Green.c **** 
1289:.\Generated_Source\PSoC4/PWM_Green.c **** 
1290:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
1291:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_GetInterruptSourceMasked
1292:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
1293:.\Generated_Source\PSoC4/PWM_Green.c **** *
1294:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
1295:.\Generated_Source\PSoC4/PWM_Green.c **** *  Gets the interrupt requests masked by the interrupt mask.
1296:.\Generated_Source\PSoC4/PWM_Green.c **** *
1297:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
1298:.\Generated_Source\PSoC4/PWM_Green.c **** *   None
1299:.\Generated_Source\PSoC4/PWM_Green.c **** *
1300:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
1301:.\Generated_Source\PSoC4/PWM_Green.c **** *  Masked interrupt source
1302:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
1303:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_INTR_MASK_TC       - Terminal count mask
1304:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_INTR_MASK_CC_MATCH - Compare count / capture mask
1305:.\Generated_Source\PSoC4/PWM_Green.c **** *
1306:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
1307:.\Generated_Source\PSoC4/PWM_Green.c **** uint32 PWM_Green_GetInterruptSourceMasked(void)
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 48


1308:.\Generated_Source\PSoC4/PWM_Green.c **** {
 1350              		.loc 1 1308 0
 1351              		.cfi_startproc
1309:.\Generated_Source\PSoC4/PWM_Green.c ****     return (PWM_Green_INTERRUPT_MASKED_REG);
 1352              		.loc 1 1309 0
 1353 0000 014B     		ldr	r3, .L111
 1354 0002 1868     		ldr	r0, [r3]
1310:.\Generated_Source\PSoC4/PWM_Green.c **** }
 1355              		.loc 1 1310 0
 1356              		@ sp needed
 1357 0004 7047     		bx	lr
 1358              	.L112:
 1359 0006 C046     		.align	2
 1360              	.L111:
 1361 0008 3C012040 		.word	1075839292
 1362              		.cfi_endproc
 1363              	.LFE37:
 1364              		.size	PWM_Green_GetInterruptSourceMasked, .-PWM_Green_GetInterruptSourceMasked
 1365              		.section	.text.PWM_Green_GetInterruptSource,"ax",%progbits
 1366              		.align	2
 1367              		.global	PWM_Green_GetInterruptSource
 1368              		.code	16
 1369              		.thumb_func
 1370              		.type	PWM_Green_GetInterruptSource, %function
 1371              	PWM_Green_GetInterruptSource:
 1372              	.LFB38:
1311:.\Generated_Source\PSoC4/PWM_Green.c **** 
1312:.\Generated_Source\PSoC4/PWM_Green.c **** 
1313:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
1314:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_GetInterruptSource
1315:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
1316:.\Generated_Source\PSoC4/PWM_Green.c **** *
1317:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
1318:.\Generated_Source\PSoC4/PWM_Green.c **** *  Gets the interrupt requests (without masking).
1319:.\Generated_Source\PSoC4/PWM_Green.c **** *
1320:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
1321:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
1322:.\Generated_Source\PSoC4/PWM_Green.c **** *
1323:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
1324:.\Generated_Source\PSoC4/PWM_Green.c **** *  Interrupt request value
1325:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
1326:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_INTR_MASK_TC       - Terminal count mask
1327:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_INTR_MASK_CC_MATCH - Compare count / capture mask
1328:.\Generated_Source\PSoC4/PWM_Green.c **** *
1329:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
1330:.\Generated_Source\PSoC4/PWM_Green.c **** uint32 PWM_Green_GetInterruptSource(void)
1331:.\Generated_Source\PSoC4/PWM_Green.c **** {
 1373              		.loc 1 1331 0
 1374              		.cfi_startproc
1332:.\Generated_Source\PSoC4/PWM_Green.c ****     return (PWM_Green_INTERRUPT_REQ_REG);
 1375              		.loc 1 1332 0
 1376 0000 014B     		ldr	r3, .L114
 1377 0002 1868     		ldr	r0, [r3]
1333:.\Generated_Source\PSoC4/PWM_Green.c **** }
 1378              		.loc 1 1333 0
 1379              		@ sp needed
 1380 0004 7047     		bx	lr
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 49


 1381              	.L115:
 1382 0006 C046     		.align	2
 1383              	.L114:
 1384 0008 30012040 		.word	1075839280
 1385              		.cfi_endproc
 1386              	.LFE38:
 1387              		.size	PWM_Green_GetInterruptSource, .-PWM_Green_GetInterruptSource
 1388              		.section	.text.PWM_Green_ClearInterrupt,"ax",%progbits
 1389              		.align	2
 1390              		.global	PWM_Green_ClearInterrupt
 1391              		.code	16
 1392              		.thumb_func
 1393              		.type	PWM_Green_ClearInterrupt, %function
 1394              	PWM_Green_ClearInterrupt:
 1395              	.LFB39:
1334:.\Generated_Source\PSoC4/PWM_Green.c **** 
1335:.\Generated_Source\PSoC4/PWM_Green.c **** 
1336:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
1337:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_ClearInterrupt
1338:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
1339:.\Generated_Source\PSoC4/PWM_Green.c **** *
1340:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
1341:.\Generated_Source\PSoC4/PWM_Green.c **** *  Clears the interrupt request.
1342:.\Generated_Source\PSoC4/PWM_Green.c **** *
1343:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
1344:.\Generated_Source\PSoC4/PWM_Green.c **** *   interruptMask: Mask of interrupts to clear
1345:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
1346:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_INTR_MASK_TC       - Terminal count mask
1347:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_INTR_MASK_CC_MATCH - Compare count / capture mask
1348:.\Generated_Source\PSoC4/PWM_Green.c **** *
1349:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
1350:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
1351:.\Generated_Source\PSoC4/PWM_Green.c **** *
1352:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
1353:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_ClearInterrupt(uint32 interruptMask)
1354:.\Generated_Source\PSoC4/PWM_Green.c **** {
 1396              		.loc 1 1354 0
 1397              		.cfi_startproc
 1398              	.LVL93:
1355:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_INTERRUPT_REQ_REG = interruptMask;
 1399              		.loc 1 1355 0
 1400 0000 014B     		ldr	r3, .L117
 1401 0002 1860     		str	r0, [r3]
1356:.\Generated_Source\PSoC4/PWM_Green.c **** }
 1402              		.loc 1 1356 0
 1403              		@ sp needed
 1404 0004 7047     		bx	lr
 1405              	.L118:
 1406 0006 C046     		.align	2
 1407              	.L117:
 1408 0008 30012040 		.word	1075839280
 1409              		.cfi_endproc
 1410              	.LFE39:
 1411              		.size	PWM_Green_ClearInterrupt, .-PWM_Green_ClearInterrupt
 1412              		.section	.text.PWM_Green_SetInterrupt,"ax",%progbits
 1413              		.align	2
 1414              		.global	PWM_Green_SetInterrupt
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 50


 1415              		.code	16
 1416              		.thumb_func
 1417              		.type	PWM_Green_SetInterrupt, %function
 1418              	PWM_Green_SetInterrupt:
 1419              	.LFB40:
1357:.\Generated_Source\PSoC4/PWM_Green.c **** 
1358:.\Generated_Source\PSoC4/PWM_Green.c **** 
1359:.\Generated_Source\PSoC4/PWM_Green.c **** /*******************************************************************************
1360:.\Generated_Source\PSoC4/PWM_Green.c **** * Function Name: PWM_Green_SetInterrupt
1361:.\Generated_Source\PSoC4/PWM_Green.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/PWM_Green.c **** *
1363:.\Generated_Source\PSoC4/PWM_Green.c **** * Summary:
1364:.\Generated_Source\PSoC4/PWM_Green.c **** *  Sets a software interrupt request.
1365:.\Generated_Source\PSoC4/PWM_Green.c **** *
1366:.\Generated_Source\PSoC4/PWM_Green.c **** * Parameters:
1367:.\Generated_Source\PSoC4/PWM_Green.c **** *   interruptMask: Mask of interrupts to set
1368:.\Generated_Source\PSoC4/PWM_Green.c **** *   Values:
1369:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_INTR_MASK_TC       - Terminal count mask
1370:.\Generated_Source\PSoC4/PWM_Green.c **** *     - PWM_Green_INTR_MASK_CC_MATCH - Compare count / capture mask
1371:.\Generated_Source\PSoC4/PWM_Green.c **** *
1372:.\Generated_Source\PSoC4/PWM_Green.c **** * Return:
1373:.\Generated_Source\PSoC4/PWM_Green.c **** *  None
1374:.\Generated_Source\PSoC4/PWM_Green.c **** *
1375:.\Generated_Source\PSoC4/PWM_Green.c **** *******************************************************************************/
1376:.\Generated_Source\PSoC4/PWM_Green.c **** void PWM_Green_SetInterrupt(uint32 interruptMask)
1377:.\Generated_Source\PSoC4/PWM_Green.c **** {
 1420              		.loc 1 1377 0
 1421              		.cfi_startproc
 1422              	.LVL94:
1378:.\Generated_Source\PSoC4/PWM_Green.c ****     PWM_Green_INTERRUPT_SET_REG = interruptMask;
 1423              		.loc 1 1378 0
 1424 0000 014B     		ldr	r3, .L120
 1425 0002 1860     		str	r0, [r3]
1379:.\Generated_Source\PSoC4/PWM_Green.c **** }
 1426              		.loc 1 1379 0
 1427              		@ sp needed
 1428 0004 7047     		bx	lr
 1429              	.L121:
 1430 0006 C046     		.align	2
 1431              	.L120:
 1432 0008 34012040 		.word	1075839284
 1433              		.cfi_endproc
 1434              	.LFE40:
 1435              		.size	PWM_Green_SetInterrupt, .-PWM_Green_SetInterrupt
 1436              		.global	PWM_Green_initVar
 1437              		.bss
 1438              		.set	.LANCHOR0,. + 0
 1439              		.type	PWM_Green_initVar, %object
 1440              		.size	PWM_Green_initVar, 1
 1441              	PWM_Green_initVar:
 1442 0000 00       		.space	1
 1443              		.text
 1444              	.Letext0:
 1445              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1446              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1447              		.section	.debug_info,"",%progbits
 1448              	.Ldebug_info0:
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 51


 1449 0000 FE080000 		.4byte	0x8fe
 1450 0004 0400     		.2byte	0x4
 1451 0006 00000000 		.4byte	.Ldebug_abbrev0
 1452 000a 04       		.byte	0x4
 1453 000b 01       		.uleb128 0x1
 1454 000c FB020000 		.4byte	.LASF76
 1455 0010 01       		.byte	0x1
 1456 0011 96010000 		.4byte	.LASF77
 1457 0015 2D050000 		.4byte	.LASF78
 1458 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1459 001d 00000000 		.4byte	0
 1460 0021 00000000 		.4byte	.Ldebug_line0
 1461 0025 02       		.uleb128 0x2
 1462 0026 01       		.byte	0x1
 1463 0027 06       		.byte	0x6
 1464 0028 AA000000 		.4byte	.LASF0
 1465 002c 02       		.uleb128 0x2
 1466 002d 01       		.byte	0x1
 1467 002e 08       		.byte	0x8
 1468 002f 07040000 		.4byte	.LASF1
 1469 0033 02       		.uleb128 0x2
 1470 0034 02       		.byte	0x2
 1471 0035 05       		.byte	0x5
 1472 0036 37040000 		.4byte	.LASF2
 1473 003a 02       		.uleb128 0x2
 1474 003b 02       		.byte	0x2
 1475 003c 07       		.byte	0x7
 1476 003d 45020000 		.4byte	.LASF3
 1477 0041 02       		.uleb128 0x2
 1478 0042 04       		.byte	0x4
 1479 0043 05       		.byte	0x5
 1480 0044 0A010000 		.4byte	.LASF4
 1481 0048 02       		.uleb128 0x2
 1482 0049 04       		.byte	0x4
 1483 004a 07       		.byte	0x7
 1484 004b E8010000 		.4byte	.LASF5
 1485 004f 02       		.uleb128 0x2
 1486 0050 08       		.byte	0x8
 1487 0051 05       		.byte	0x5
 1488 0052 9C000000 		.4byte	.LASF6
 1489 0056 02       		.uleb128 0x2
 1490 0057 08       		.byte	0x8
 1491 0058 07       		.byte	0x7
 1492 0059 7E000000 		.4byte	.LASF7
 1493 005d 03       		.uleb128 0x3
 1494 005e 04       		.byte	0x4
 1495 005f 05       		.byte	0x5
 1496 0060 696E7400 		.ascii	"int\000"
 1497 0064 02       		.uleb128 0x2
 1498 0065 04       		.byte	0x4
 1499 0066 07       		.byte	0x7
 1500 0067 C4010000 		.4byte	.LASF8
 1501 006b 04       		.uleb128 0x4
 1502 006c 41010000 		.4byte	.LASF9
 1503 0070 02       		.byte	0x2
 1504 0071 B3       		.byte	0xb3
 1505 0072 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 52


 1506 0076 04       		.uleb128 0x4
 1507 0077 65010000 		.4byte	.LASF10
 1508 007b 02       		.byte	0x2
 1509 007c B5       		.byte	0xb5
 1510 007d 48000000 		.4byte	0x48
 1511 0081 02       		.uleb128 0x2
 1512 0082 04       		.byte	0x4
 1513 0083 04       		.byte	0x4
 1514 0084 9E030000 		.4byte	.LASF11
 1515 0088 02       		.uleb128 0x2
 1516 0089 08       		.byte	0x8
 1517 008a 04       		.byte	0x4
 1518 008b 47010000 		.4byte	.LASF12
 1519 008f 02       		.uleb128 0x2
 1520 0090 01       		.byte	0x1
 1521 0091 08       		.byte	0x8
 1522 0092 8F040000 		.4byte	.LASF13
 1523 0096 05       		.uleb128 0x5
 1524 0097 89020000 		.4byte	.LASF14
 1525 009b 02       		.byte	0x2
 1526 009c 5F01     		.2byte	0x15f
 1527 009e A2000000 		.4byte	0xa2
 1528 00a2 06       		.uleb128 0x6
 1529 00a3 76000000 		.4byte	0x76
 1530 00a7 02       		.uleb128 0x2
 1531 00a8 04       		.byte	0x4
 1532 00a9 07       		.byte	0x7
 1533 00aa BA020000 		.4byte	.LASF15
 1534 00ae 07       		.uleb128 0x7
 1535 00af D9010000 		.4byte	.LASF16
 1536 00b3 01       		.byte	0x1
 1537 00b4 FA       		.byte	0xfa
 1538 00b5 00000000 		.4byte	.LFB4
 1539 00b9 1C000000 		.4byte	.LFE4-.LFB4
 1540 00bd 01       		.uleb128 0x1
 1541 00be 9C       		.byte	0x9c
 1542 00bf E5000000 		.4byte	0xe5
 1543 00c3 08       		.uleb128 0x8
 1544 00c4 82050000 		.4byte	.LASF18
 1545 00c8 01       		.byte	0x1
 1546 00c9 FC       		.byte	0xfc
 1547 00ca 6B000000 		.4byte	0x6b
 1548 00ce 00000000 		.4byte	.LLST0
 1549 00d2 09       		.uleb128 0x9
 1550 00d3 06000000 		.4byte	.LVL0
 1551 00d7 E9080000 		.4byte	0x8e9
 1552 00db 09       		.uleb128 0x9
 1553 00dc 14000000 		.4byte	.LVL1
 1554 00e0 F4080000 		.4byte	0x8f4
 1555 00e4 00       		.byte	0
 1556 00e5 0A       		.uleb128 0xa
 1557 00e6 A8020000 		.4byte	.LASF17
 1558 00ea 01       		.byte	0x1
 1559 00eb 1F01     		.2byte	0x11f
 1560 00ed 00000000 		.4byte	.LFB5
 1561 00f1 28000000 		.4byte	.LFE5-.LFB5
 1562 00f5 01       		.uleb128 0x1
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 53


 1563 00f6 9C       		.byte	0x9c
 1564 00f7 2E010000 		.4byte	0x12e
 1565 00fb 0B       		.uleb128 0xb
 1566 00fc 94040000 		.4byte	.LASF20
 1567 0100 01       		.byte	0x1
 1568 0101 1F01     		.2byte	0x11f
 1569 0103 76000000 		.4byte	0x76
 1570 0107 13000000 		.4byte	.LLST1
 1571 010b 0C       		.uleb128 0xc
 1572 010c 82050000 		.4byte	.LASF18
 1573 0110 01       		.byte	0x1
 1574 0111 2101     		.2byte	0x121
 1575 0113 6B000000 		.4byte	0x6b
 1576 0117 3F000000 		.4byte	.LLST2
 1577 011b 09       		.uleb128 0x9
 1578 011c 08000000 		.4byte	.LVL3
 1579 0120 E9080000 		.4byte	0x8e9
 1580 0124 09       		.uleb128 0x9
 1581 0125 1C000000 		.4byte	.LVL5
 1582 0129 F4080000 		.4byte	0x8f4
 1583 012d 00       		.byte	0
 1584 012e 0A       		.uleb128 0xa
 1585 012f E7020000 		.4byte	.LASF19
 1586 0133 01       		.byte	0x1
 1587 0134 4001     		.2byte	0x140
 1588 0136 00000000 		.4byte	.LFB6
 1589 013a 28000000 		.4byte	.LFE6-.LFB6
 1590 013e 01       		.uleb128 0x1
 1591 013f 9C       		.byte	0x9c
 1592 0140 77010000 		.4byte	0x177
 1593 0144 0B       		.uleb128 0xb
 1594 0145 95000000 		.4byte	.LASF21
 1595 0149 01       		.byte	0x1
 1596 014a 4001     		.2byte	0x140
 1597 014c 76000000 		.4byte	0x76
 1598 0150 52000000 		.4byte	.LLST3
 1599 0154 0C       		.uleb128 0xc
 1600 0155 82050000 		.4byte	.LASF18
 1601 0159 01       		.byte	0x1
 1602 015a 4201     		.2byte	0x142
 1603 015c 6B000000 		.4byte	0x6b
 1604 0160 7E000000 		.4byte	.LLST4
 1605 0164 09       		.uleb128 0x9
 1606 0165 08000000 		.4byte	.LVL7
 1607 0169 E9080000 		.4byte	0x8e9
 1608 016d 09       		.uleb128 0x9
 1609 016e 1C000000 		.4byte	.LVL9
 1610 0172 F4080000 		.4byte	0x8f4
 1611 0176 00       		.byte	0
 1612 0177 0A       		.uleb128 0xa
 1613 0178 13010000 		.4byte	.LASF22
 1614 017c 01       		.byte	0x1
 1615 017d 6501     		.2byte	0x165
 1616 017f 00000000 		.4byte	.LFB7
 1617 0183 28000000 		.4byte	.LFE7-.LFB7
 1618 0187 01       		.uleb128 0x1
 1619 0188 9C       		.byte	0x9c
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 54


 1620 0189 C0010000 		.4byte	0x1c0
 1621 018d 0B       		.uleb128 0xb
 1622 018e BD030000 		.4byte	.LASF23
 1623 0192 01       		.byte	0x1
 1624 0193 6501     		.2byte	0x165
 1625 0195 76000000 		.4byte	0x76
 1626 0199 91000000 		.4byte	.LLST5
 1627 019d 0C       		.uleb128 0xc
 1628 019e 82050000 		.4byte	.LASF18
 1629 01a2 01       		.byte	0x1
 1630 01a3 6701     		.2byte	0x167
 1631 01a5 6B000000 		.4byte	0x6b
 1632 01a9 BD000000 		.4byte	.LLST6
 1633 01ad 09       		.uleb128 0x9
 1634 01ae 08000000 		.4byte	.LVL11
 1635 01b2 E9080000 		.4byte	0x8e9
 1636 01b6 09       		.uleb128 0x9
 1637 01b7 1C000000 		.4byte	.LVL13
 1638 01bb F4080000 		.4byte	0x8f4
 1639 01bf 00       		.byte	0
 1640 01c0 0A       		.uleb128 0xa
 1641 01c1 D2020000 		.4byte	.LASF24
 1642 01c5 01       		.byte	0x1
 1643 01c6 8501     		.2byte	0x185
 1644 01c8 00000000 		.4byte	.LFB8
 1645 01cc 2C000000 		.4byte	.LFE8-.LFB8
 1646 01d0 01       		.uleb128 0x1
 1647 01d1 9C       		.byte	0x9c
 1648 01d2 09020000 		.4byte	0x209
 1649 01d6 0B       		.uleb128 0xb
 1650 01d7 7B020000 		.4byte	.LASF25
 1651 01db 01       		.byte	0x1
 1652 01dc 8501     		.2byte	0x185
 1653 01de 76000000 		.4byte	0x76
 1654 01e2 D0000000 		.4byte	.LLST7
 1655 01e6 0C       		.uleb128 0xc
 1656 01e7 82050000 		.4byte	.LASF18
 1657 01eb 01       		.byte	0x1
 1658 01ec 8701     		.2byte	0x187
 1659 01ee 6B000000 		.4byte	0x6b
 1660 01f2 FC000000 		.4byte	.LLST8
 1661 01f6 09       		.uleb128 0x9
 1662 01f7 08000000 		.4byte	.LVL15
 1663 01fb E9080000 		.4byte	0x8e9
 1664 01ff 09       		.uleb128 0x9
 1665 0200 22000000 		.4byte	.LVL17
 1666 0204 F4080000 		.4byte	0x8f4
 1667 0208 00       		.byte	0
 1668 0209 0A       		.uleb128 0xa
 1669 020a CE050000 		.4byte	.LASF26
 1670 020e 01       		.byte	0x1
 1671 020f BB01     		.2byte	0x1bb
 1672 0211 00000000 		.4byte	.LFB9
 1673 0215 10000000 		.4byte	.LFE9-.LFB9
 1674 0219 01       		.uleb128 0x1
 1675 021a 9C       		.byte	0x9c
 1676 021b 30020000 		.4byte	0x230
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 55


 1677 021f 0B       		.uleb128 0xb
 1678 0220 FA010000 		.4byte	.LASF27
 1679 0224 01       		.byte	0x1
 1680 0225 BB01     		.2byte	0x1bb
 1681 0227 76000000 		.4byte	0x76
 1682 022b 0F010000 		.4byte	.LLST9
 1683 022f 00       		.byte	0
 1684 0230 0A       		.uleb128 0xa
 1685 0231 4E000000 		.4byte	.LASF28
 1686 0235 01       		.byte	0x1
 1687 0236 DF01     		.2byte	0x1df
 1688 0238 00000000 		.4byte	.LFB10
 1689 023c 28000000 		.4byte	.LFE10-.LFB10
 1690 0240 01       		.uleb128 0x1
 1691 0241 9C       		.byte	0x9c
 1692 0242 79020000 		.4byte	0x279
 1693 0246 0B       		.uleb128 0xb
 1694 0247 C3020000 		.4byte	.LASF29
 1695 024b 01       		.byte	0x1
 1696 024c DF01     		.2byte	0x1df
 1697 024e 76000000 		.4byte	0x76
 1698 0252 30010000 		.4byte	.LLST10
 1699 0256 0C       		.uleb128 0xc
 1700 0257 82050000 		.4byte	.LASF18
 1701 025b 01       		.byte	0x1
 1702 025c E101     		.2byte	0x1e1
 1703 025e 6B000000 		.4byte	0x6b
 1704 0262 5C010000 		.4byte	.LLST11
 1705 0266 09       		.uleb128 0x9
 1706 0267 08000000 		.4byte	.LVL21
 1707 026b E9080000 		.4byte	0x8e9
 1708 026f 09       		.uleb128 0x9
 1709 0270 22000000 		.4byte	.LVL23
 1710 0274 F4080000 		.4byte	0x8f4
 1711 0278 00       		.byte	0
 1712 0279 0A       		.uleb128 0xa
 1713 027a 99040000 		.4byte	.LASF30
 1714 027e 01       		.byte	0x1
 1715 027f 0102     		.2byte	0x201
 1716 0281 00000000 		.4byte	.LFB11
 1717 0285 28000000 		.4byte	.LFE11-.LFB11
 1718 0289 01       		.uleb128 0x1
 1719 028a 9C       		.byte	0x9c
 1720 028b C2020000 		.4byte	0x2c2
 1721 028f 0B       		.uleb128 0xb
 1722 0290 26040000 		.4byte	.LASF31
 1723 0294 01       		.byte	0x1
 1724 0295 0102     		.2byte	0x201
 1725 0297 76000000 		.4byte	0x76
 1726 029b 6F010000 		.4byte	.LLST12
 1727 029f 0C       		.uleb128 0xc
 1728 02a0 82050000 		.4byte	.LASF18
 1729 02a4 01       		.byte	0x1
 1730 02a5 0302     		.2byte	0x203
 1731 02a7 6B000000 		.4byte	0x6b
 1732 02ab 9B010000 		.4byte	.LLST13
 1733 02af 09       		.uleb128 0x9
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 56


 1734 02b0 08000000 		.4byte	.LVL25
 1735 02b4 E9080000 		.4byte	0x8e9
 1736 02b8 09       		.uleb128 0x9
 1737 02b9 22000000 		.4byte	.LVL27
 1738 02bd F4080000 		.4byte	0x8f4
 1739 02c1 00       		.byte	0
 1740 02c2 0A       		.uleb128 0xa
 1741 02c3 2C020000 		.4byte	.LASF32
 1742 02c7 01       		.byte	0x1
 1743 02c8 2202     		.2byte	0x222
 1744 02ca 00000000 		.4byte	.LFB12
 1745 02ce 2C000000 		.4byte	.LFE12-.LFB12
 1746 02d2 01       		.uleb128 0x1
 1747 02d3 9C       		.byte	0x9c
 1748 02d4 0B030000 		.4byte	0x30b
 1749 02d8 0B       		.uleb128 0xb
 1750 02d9 BB010000 		.4byte	.LASF33
 1751 02dd 01       		.byte	0x1
 1752 02de 2202     		.2byte	0x222
 1753 02e0 76000000 		.4byte	0x76
 1754 02e4 AE010000 		.4byte	.LLST14
 1755 02e8 0C       		.uleb128 0xc
 1756 02e9 82050000 		.4byte	.LASF18
 1757 02ed 01       		.byte	0x1
 1758 02ee 2402     		.2byte	0x224
 1759 02f0 6B000000 		.4byte	0x6b
 1760 02f4 DA010000 		.4byte	.LLST15
 1761 02f8 09       		.uleb128 0x9
 1762 02f9 08000000 		.4byte	.LVL29
 1763 02fd E9080000 		.4byte	0x8e9
 1764 0301 09       		.uleb128 0x9
 1765 0302 20000000 		.4byte	.LVL31
 1766 0306 F4080000 		.4byte	0x8f4
 1767 030a 00       		.byte	0
 1768 030b 0A       		.uleb128 0xa
 1769 030c 4E010000 		.4byte	.LASF34
 1770 0310 01       		.byte	0x1
 1771 0311 4302     		.2byte	0x243
 1772 0313 00000000 		.4byte	.LFB13
 1773 0317 28000000 		.4byte	.LFE13-.LFB13
 1774 031b 01       		.uleb128 0x1
 1775 031c 9C       		.byte	0x9c
 1776 031d 54030000 		.4byte	0x354
 1777 0321 0B       		.uleb128 0xb
 1778 0322 78010000 		.4byte	.LASF35
 1779 0326 01       		.byte	0x1
 1780 0327 4302     		.2byte	0x243
 1781 0329 76000000 		.4byte	0x76
 1782 032d ED010000 		.4byte	.LLST16
 1783 0331 0C       		.uleb128 0xc
 1784 0332 82050000 		.4byte	.LASF18
 1785 0336 01       		.byte	0x1
 1786 0337 4502     		.2byte	0x245
 1787 0339 6B000000 		.4byte	0x6b
 1788 033d 19020000 		.4byte	.LLST17
 1789 0341 09       		.uleb128 0x9
 1790 0342 08000000 		.4byte	.LVL33
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 57


 1791 0346 E9080000 		.4byte	0x8e9
 1792 034a 09       		.uleb128 0x9
 1793 034b 1C000000 		.4byte	.LVL35
 1794 034f F4080000 		.4byte	0x8f4
 1795 0353 00       		.byte	0
 1796 0354 0A       		.uleb128 0xa
 1797 0355 2A010000 		.4byte	.LASF36
 1798 0359 01       		.byte	0x1
 1799 035a 6102     		.2byte	0x261
 1800 035c 00000000 		.4byte	.LFB14
 1801 0360 10000000 		.4byte	.LFE14-.LFB14
 1802 0364 01       		.uleb128 0x1
 1803 0365 9C       		.byte	0x9c
 1804 0366 7B030000 		.4byte	0x37b
 1805 036a 0B       		.uleb128 0xb
 1806 036b 00000000 		.4byte	.LASF37
 1807 036f 01       		.byte	0x1
 1808 0370 6102     		.2byte	0x261
 1809 0372 76000000 		.4byte	0x76
 1810 0376 2C020000 		.4byte	.LLST18
 1811 037a 00       		.byte	0
 1812 037b 0D       		.uleb128 0xd
 1813 037c E3050000 		.4byte	.LASF42
 1814 0380 01       		.byte	0x1
 1815 0381 7502     		.2byte	0x275
 1816 0383 76000000 		.4byte	0x76
 1817 0387 00000000 		.4byte	.LFB15
 1818 038b 10000000 		.4byte	.LFE15-.LFB15
 1819 038f 01       		.uleb128 0x1
 1820 0390 9C       		.byte	0x9c
 1821 0391 0A       		.uleb128 0xa
 1822 0392 4F040000 		.4byte	.LASF38
 1823 0396 01       		.byte	0x1
 1824 0397 9202     		.2byte	0x292
 1825 0399 00000000 		.4byte	.LFB16
 1826 039d 28000000 		.4byte	.LFE16-.LFB16
 1827 03a1 01       		.uleb128 0x1
 1828 03a2 9C       		.byte	0x9c
 1829 03a3 DA030000 		.4byte	0x3da
 1830 03a7 0B       		.uleb128 0xb
 1831 03a8 C9040000 		.4byte	.LASF39
 1832 03ac 01       		.byte	0x1
 1833 03ad 9202     		.2byte	0x292
 1834 03af 76000000 		.4byte	0x76
 1835 03b3 4D020000 		.4byte	.LLST19
 1836 03b7 0C       		.uleb128 0xc
 1837 03b8 82050000 		.4byte	.LASF18
 1838 03bc 01       		.byte	0x1
 1839 03bd 9402     		.2byte	0x294
 1840 03bf 6B000000 		.4byte	0x6b
 1841 03c3 79020000 		.4byte	.LLST20
 1842 03c7 09       		.uleb128 0x9
 1843 03c8 08000000 		.4byte	.LVL39
 1844 03cc E9080000 		.4byte	0x8e9
 1845 03d0 09       		.uleb128 0x9
 1846 03d1 1C000000 		.4byte	.LVL41
 1847 03d5 F4080000 		.4byte	0x8f4
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 58


 1848 03d9 00       		.byte	0
 1849 03da 0A       		.uleb128 0xa
 1850 03db D7030000 		.4byte	.LASF40
 1851 03df 01       		.byte	0x1
 1852 03e0 AF02     		.2byte	0x2af
 1853 03e2 00000000 		.4byte	.LFB17
 1854 03e6 10000000 		.4byte	.LFE17-.LFB17
 1855 03ea 01       		.uleb128 0x1
 1856 03eb 9C       		.byte	0x9c
 1857 03ec 01040000 		.4byte	0x401
 1858 03f0 0B       		.uleb128 0xb
 1859 03f1 D5040000 		.4byte	.LASF41
 1860 03f5 01       		.byte	0x1
 1861 03f6 AF02     		.2byte	0x2af
 1862 03f8 76000000 		.4byte	0x76
 1863 03fc 8C020000 		.4byte	.LLST21
 1864 0400 00       		.byte	0
 1865 0401 0D       		.uleb128 0xd
 1866 0402 B4040000 		.4byte	.LASF43
 1867 0406 01       		.byte	0x1
 1868 0407 C302     		.2byte	0x2c3
 1869 0409 76000000 		.4byte	0x76
 1870 040d 00000000 		.4byte	.LFB18
 1871 0411 10000000 		.4byte	.LFE18-.LFB18
 1872 0415 01       		.uleb128 0x1
 1873 0416 9C       		.byte	0x9c
 1874 0417 0A       		.uleb128 0xa
 1875 0418 03060000 		.4byte	.LASF44
 1876 041c 01       		.byte	0x1
 1877 041d DD02     		.2byte	0x2dd
 1878 041f 00000000 		.4byte	.LFB19
 1879 0423 24000000 		.4byte	.LFE19-.LFB19
 1880 0427 01       		.uleb128 0x1
 1881 0428 9C       		.byte	0x9c
 1882 0429 60040000 		.4byte	0x460
 1883 042d 0B       		.uleb128 0xb
 1884 042e AB050000 		.4byte	.LASF45
 1885 0432 01       		.byte	0x1
 1886 0433 DD02     		.2byte	0x2dd
 1887 0435 76000000 		.4byte	0x76
 1888 0439 AD020000 		.4byte	.LLST22
 1889 043d 0C       		.uleb128 0xc
 1890 043e 82050000 		.4byte	.LASF18
 1891 0442 01       		.byte	0x1
 1892 0443 DF02     		.2byte	0x2df
 1893 0445 6B000000 		.4byte	0x6b
 1894 0449 D9020000 		.4byte	.LLST23
 1895 044d 09       		.uleb128 0x9
 1896 044e 08000000 		.4byte	.LVL45
 1897 0452 E9080000 		.4byte	0x8e9
 1898 0456 09       		.uleb128 0x9
 1899 0457 1E000000 		.4byte	.LVL47
 1900 045b F4080000 		.4byte	0x8f4
 1901 045f 00       		.byte	0
 1902 0460 0A       		.uleb128 0xa
 1903 0461 8F020000 		.4byte	.LASF46
 1904 0465 01       		.byte	0x1
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 59


 1905 0466 F802     		.2byte	0x2f8
 1906 0468 00000000 		.4byte	.LFB20
 1907 046c 10000000 		.4byte	.LFE20-.LFB20
 1908 0470 01       		.uleb128 0x1
 1909 0471 9C       		.byte	0x9c
 1910 0472 87040000 		.4byte	0x487
 1911 0476 0B       		.uleb128 0xb
 1912 0477 F9050000 		.4byte	.LASF47
 1913 047b 01       		.byte	0x1
 1914 047c F802     		.2byte	0x2f8
 1915 047e 76000000 		.4byte	0x76
 1916 0482 EC020000 		.4byte	.LLST24
 1917 0486 00       		.byte	0
 1918 0487 0D       		.uleb128 0xd
 1919 0488 93050000 		.4byte	.LASF48
 1920 048c 01       		.byte	0x1
 1921 048d 0C03     		.2byte	0x30c
 1922 048f 76000000 		.4byte	0x76
 1923 0493 00000000 		.4byte	.LFB21
 1924 0497 10000000 		.4byte	.LFE21-.LFB21
 1925 049b 01       		.uleb128 0x1
 1926 049c 9C       		.byte	0x9c
 1927 049d 0A       		.uleb128 0xa
 1928 049e B6050000 		.4byte	.LASF49
 1929 04a2 01       		.byte	0x1
 1930 04a3 2603     		.2byte	0x326
 1931 04a5 00000000 		.4byte	.LFB22
 1932 04a9 28000000 		.4byte	.LFE22-.LFB22
 1933 04ad 01       		.uleb128 0x1
 1934 04ae 9C       		.byte	0x9c
 1935 04af E6040000 		.4byte	0x4e6
 1936 04b3 0B       		.uleb128 0xb
 1937 04b4 AB050000 		.4byte	.LASF45
 1938 04b8 01       		.byte	0x1
 1939 04b9 2603     		.2byte	0x326
 1940 04bb 76000000 		.4byte	0x76
 1941 04bf 0D030000 		.4byte	.LLST25
 1942 04c3 0C       		.uleb128 0xc
 1943 04c4 82050000 		.4byte	.LASF18
 1944 04c8 01       		.byte	0x1
 1945 04c9 2803     		.2byte	0x328
 1946 04cb 6B000000 		.4byte	0x6b
 1947 04cf 39030000 		.4byte	.LLST26
 1948 04d3 09       		.uleb128 0x9
 1949 04d4 08000000 		.4byte	.LVL51
 1950 04d8 E9080000 		.4byte	0x8e9
 1951 04dc 09       		.uleb128 0x9
 1952 04dd 22000000 		.4byte	.LVL53
 1953 04e1 F4080000 		.4byte	0x8f4
 1954 04e5 00       		.byte	0
 1955 04e6 0A       		.uleb128 0xa
 1956 04e7 67000000 		.4byte	.LASF50
 1957 04eb 01       		.byte	0x1
 1958 04ec 4303     		.2byte	0x343
 1959 04ee 00000000 		.4byte	.LFB23
 1960 04f2 10000000 		.4byte	.LFE23-.LFB23
 1961 04f6 01       		.uleb128 0x1
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 60


 1962 04f7 9C       		.byte	0x9c
 1963 04f8 0D050000 		.4byte	0x50d
 1964 04fc 0B       		.uleb128 0xb
 1965 04fd CC000000 		.4byte	.LASF51
 1966 0501 01       		.byte	0x1
 1967 0502 4303     		.2byte	0x343
 1968 0504 76000000 		.4byte	0x76
 1969 0508 4C030000 		.4byte	.LLST27
 1970 050c 00       		.byte	0
 1971 050d 0D       		.uleb128 0xd
 1972 050e FE040000 		.4byte	.LASF52
 1973 0512 01       		.byte	0x1
 1974 0513 6E03     		.2byte	0x36e
 1975 0515 76000000 		.4byte	0x76
 1976 0519 00000000 		.4byte	.LFB24
 1977 051d 10000000 		.4byte	.LFE24-.LFB24
 1978 0521 01       		.uleb128 0x1
 1979 0522 9C       		.byte	0x9c
 1980 0523 0A       		.uleb128 0xa
 1981 0524 ED030000 		.4byte	.LASF53
 1982 0528 01       		.byte	0x1
 1983 0529 9C03     		.2byte	0x39c
 1984 052b 00000000 		.4byte	.LFB25
 1985 052f 10000000 		.4byte	.LFE25-.LFB25
 1986 0533 01       		.uleb128 0x1
 1987 0534 9C       		.byte	0x9c
 1988 0535 4A050000 		.4byte	0x54a
 1989 0539 0B       		.uleb128 0xb
 1990 053a DC040000 		.4byte	.LASF54
 1991 053e 01       		.byte	0x1
 1992 053f 9C03     		.2byte	0x39c
 1993 0541 76000000 		.4byte	0x76
 1994 0545 6D030000 		.4byte	.LLST28
 1995 0549 00       		.byte	0
 1996 054a 0D       		.uleb128 0xd
 1997 054b 7D010000 		.4byte	.LASF55
 1998 054f 01       		.byte	0x1
 1999 0550 C503     		.2byte	0x3c5
 2000 0552 76000000 		.4byte	0x76
 2001 0556 00000000 		.4byte	.LFB26
 2002 055a 10000000 		.4byte	.LFE26-.LFB26
 2003 055e 01       		.uleb128 0x1
 2004 055f 9C       		.byte	0x9c
 2005 0560 0D       		.uleb128 0xd
 2006 0561 6C050000 		.4byte	.LASF56
 2007 0565 01       		.byte	0x1
 2008 0566 F303     		.2byte	0x3f3
 2009 0568 76000000 		.4byte	0x76
 2010 056c 00000000 		.4byte	.LFB27
 2011 0570 10000000 		.4byte	.LFE27-.LFB27
 2012 0574 01       		.uleb128 0x1
 2013 0575 9C       		.byte	0x9c
 2014 0576 0D       		.uleb128 0xd
 2015 0577 A4030000 		.4byte	.LASF57
 2016 057b 01       		.byte	0x1
 2017 057c 0804     		.2byte	0x408
 2018 057e 76000000 		.4byte	0x76
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 61


 2019 0582 00000000 		.4byte	.LFB28
 2020 0586 10000000 		.4byte	.LFE28-.LFB28
 2021 058a 01       		.uleb128 0x1
 2022 058b 9C       		.byte	0x9c
 2023 058c 0A       		.uleb128 0xa
 2024 058d 14050000 		.4byte	.LASF58
 2025 0591 01       		.byte	0x1
 2026 0592 2304     		.2byte	0x423
 2027 0594 00000000 		.4byte	.LFB29
 2028 0598 24000000 		.4byte	.LFE29-.LFB29
 2029 059c 01       		.uleb128 0x1
 2030 059d 9C       		.byte	0x9c
 2031 059e D5050000 		.4byte	0x5d5
 2032 05a2 0B       		.uleb128 0xb
 2033 05a3 6C010000 		.4byte	.LASF59
 2034 05a7 01       		.byte	0x1
 2035 05a8 2304     		.2byte	0x423
 2036 05aa 76000000 		.4byte	0x76
 2037 05ae 8E030000 		.4byte	.LLST29
 2038 05b2 0C       		.uleb128 0xc
 2039 05b3 82050000 		.4byte	.LASF18
 2040 05b7 01       		.byte	0x1
 2041 05b8 2504     		.2byte	0x425
 2042 05ba 6B000000 		.4byte	0x6b
 2043 05be BA030000 		.4byte	.LLST30
 2044 05c2 09       		.uleb128 0x9
 2045 05c3 08000000 		.4byte	.LVL59
 2046 05c7 E9080000 		.4byte	0x8e9
 2047 05cb 09       		.uleb128 0x9
 2048 05cc 1C000000 		.4byte	.LVL61
 2049 05d0 F4080000 		.4byte	0x8f4
 2050 05d4 00       		.byte	0
 2051 05d5 0A       		.uleb128 0xa
 2052 05d6 77040000 		.4byte	.LASF60
 2053 05da 01       		.byte	0x1
 2054 05db 4404     		.2byte	0x444
 2055 05dd 00000000 		.4byte	.LFB30
 2056 05e1 24000000 		.4byte	.LFE30-.LFB30
 2057 05e5 01       		.uleb128 0x1
 2058 05e6 9C       		.byte	0x9c
 2059 05e7 1E060000 		.4byte	0x61e
 2060 05eb 0B       		.uleb128 0xb
 2061 05ec 6C010000 		.4byte	.LASF59
 2062 05f0 01       		.byte	0x1
 2063 05f1 4404     		.2byte	0x444
 2064 05f3 76000000 		.4byte	0x76
 2065 05f7 CD030000 		.4byte	.LLST31
 2066 05fb 0C       		.uleb128 0xc
 2067 05fc 82050000 		.4byte	.LASF18
 2068 0600 01       		.byte	0x1
 2069 0601 4604     		.2byte	0x446
 2070 0603 6B000000 		.4byte	0x6b
 2071 0607 F9030000 		.4byte	.LLST32
 2072 060b 09       		.uleb128 0x9
 2073 060c 08000000 		.4byte	.LVL63
 2074 0610 E9080000 		.4byte	0x8e9
 2075 0614 09       		.uleb128 0x9
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 62


 2076 0615 1E000000 		.4byte	.LVL65
 2077 0619 F4080000 		.4byte	0x8f4
 2078 061d 00       		.byte	0
 2079 061e 0A       		.uleb128 0xa
 2080 061f 37000000 		.4byte	.LASF61
 2081 0623 01       		.byte	0x1
 2082 0624 6504     		.2byte	0x465
 2083 0626 00000000 		.4byte	.LFB31
 2084 062a 28000000 		.4byte	.LFE31-.LFB31
 2085 062e 01       		.uleb128 0x1
 2086 062f 9C       		.byte	0x9c
 2087 0630 67060000 		.4byte	0x667
 2088 0634 0B       		.uleb128 0xb
 2089 0635 6C010000 		.4byte	.LASF59
 2090 0639 01       		.byte	0x1
 2091 063a 6504     		.2byte	0x465
 2092 063c 76000000 		.4byte	0x76
 2093 0640 0C040000 		.4byte	.LLST33
 2094 0644 0C       		.uleb128 0xc
 2095 0645 82050000 		.4byte	.LASF18
 2096 0649 01       		.byte	0x1
 2097 064a 6704     		.2byte	0x467
 2098 064c 6B000000 		.4byte	0x6b
 2099 0650 38040000 		.4byte	.LLST34
 2100 0654 09       		.uleb128 0x9
 2101 0655 08000000 		.4byte	.LVL67
 2102 0659 E9080000 		.4byte	0x8e9
 2103 065d 09       		.uleb128 0x9
 2104 065e 1E000000 		.4byte	.LVL69
 2105 0662 F4080000 		.4byte	0x8f4
 2106 0666 00       		.byte	0
 2107 0667 0A       		.uleb128 0xa
 2108 0668 B6000000 		.4byte	.LASF62
 2109 066c 01       		.byte	0x1
 2110 066d 8504     		.2byte	0x485
 2111 066f 00000000 		.4byte	.LFB32
 2112 0673 24000000 		.4byte	.LFE32-.LFB32
 2113 0677 01       		.uleb128 0x1
 2114 0678 9C       		.byte	0x9c
 2115 0679 B0060000 		.4byte	0x6b0
 2116 067d 0B       		.uleb128 0xb
 2117 067e 6C010000 		.4byte	.LASF59
 2118 0682 01       		.byte	0x1
 2119 0683 8504     		.2byte	0x485
 2120 0685 76000000 		.4byte	0x76
 2121 0689 4B040000 		.4byte	.LLST35
 2122 068d 0C       		.uleb128 0xc
 2123 068e 82050000 		.4byte	.LASF18
 2124 0692 01       		.byte	0x1
 2125 0693 8704     		.2byte	0x487
 2126 0695 6B000000 		.4byte	0x6b
 2127 0699 77040000 		.4byte	.LLST36
 2128 069d 09       		.uleb128 0x9
 2129 069e 08000000 		.4byte	.LVL71
 2130 06a2 E9080000 		.4byte	0x8e9
 2131 06a6 09       		.uleb128 0x9
 2132 06a7 1E000000 		.4byte	.LVL73
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 63


 2133 06ab F4080000 		.4byte	0x8f4
 2134 06af 00       		.byte	0
 2135 06b0 0A       		.uleb128 0xa
 2136 06b1 35060000 		.4byte	.LASF63
 2137 06b5 01       		.byte	0x1
 2138 06b6 A604     		.2byte	0x4a6
 2139 06b8 00000000 		.4byte	.LFB33
 2140 06bc 24000000 		.4byte	.LFE33-.LFB33
 2141 06c0 01       		.uleb128 0x1
 2142 06c1 9C       		.byte	0x9c
 2143 06c2 F9060000 		.4byte	0x6f9
 2144 06c6 0B       		.uleb128 0xb
 2145 06c7 6C010000 		.4byte	.LASF59
 2146 06cb 01       		.byte	0x1
 2147 06cc A604     		.2byte	0x4a6
 2148 06ce 76000000 		.4byte	0x76
 2149 06d2 8A040000 		.4byte	.LLST37
 2150 06d6 0C       		.uleb128 0xc
 2151 06d7 82050000 		.4byte	.LASF18
 2152 06db 01       		.byte	0x1
 2153 06dc A804     		.2byte	0x4a8
 2154 06de 6B000000 		.4byte	0x6b
 2155 06e2 B6040000 		.4byte	.LLST38
 2156 06e6 09       		.uleb128 0x9
 2157 06e7 08000000 		.4byte	.LVL75
 2158 06eb E9080000 		.4byte	0x8e9
 2159 06ef 09       		.uleb128 0x9
 2160 06f0 1E000000 		.4byte	.LVL77
 2161 06f4 F4080000 		.4byte	0x8f4
 2162 06f8 00       		.byte	0
 2163 06f9 0A       		.uleb128 0xa
 2164 06fa F1000000 		.4byte	.LASF64
 2165 06fe 01       		.byte	0x1
 2166 06ff CE04     		.2byte	0x4ce
 2167 0701 00000000 		.4byte	.LFB34
 2168 0705 1C000000 		.4byte	.LFE34-.LFB34
 2169 0709 01       		.uleb128 0x1
 2170 070a 9C       		.byte	0x9c
 2171 070b 52070000 		.4byte	0x752
 2172 070f 0B       		.uleb128 0xb
 2173 0710 78010000 		.4byte	.LASF35
 2174 0714 01       		.byte	0x1
 2175 0715 CE04     		.2byte	0x4ce
 2176 0717 76000000 		.4byte	0x76
 2177 071b C9040000 		.4byte	.LLST39
 2178 071f 0B       		.uleb128 0xb
 2179 0720 D1010000 		.4byte	.LASF65
 2180 0724 01       		.byte	0x1
 2181 0725 CE04     		.2byte	0x4ce
 2182 0727 76000000 		.4byte	0x76
 2183 072b F5040000 		.4byte	.LLST40
 2184 072f 0C       		.uleb128 0xc
 2185 0730 82050000 		.4byte	.LASF18
 2186 0734 01       		.byte	0x1
 2187 0735 D004     		.2byte	0x4d0
 2188 0737 6B000000 		.4byte	0x6b
 2189 073b 21050000 		.4byte	.LLST41
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 64


 2190 073f 09       		.uleb128 0x9
 2191 0740 0A000000 		.4byte	.LVL79
 2192 0744 E9080000 		.4byte	0x8e9
 2193 0748 09       		.uleb128 0x9
 2194 0749 14000000 		.4byte	.LVL81
 2195 074d F4080000 		.4byte	0x8f4
 2196 0751 00       		.byte	0
 2197 0752 07       		.uleb128 0x7
 2198 0753 15040000 		.4byte	.LASF66
 2199 0757 01       		.byte	0x1
 2200 0758 B1       		.byte	0xb1
 2201 0759 00000000 		.4byte	.LFB2
 2202 075d 24000000 		.4byte	.LFE2-.LFB2
 2203 0761 01       		.uleb128 0x1
 2204 0762 9C       		.byte	0x9c
 2205 0763 9D070000 		.4byte	0x79d
 2206 0767 08       		.uleb128 0x8
 2207 0768 82050000 		.4byte	.LASF18
 2208 076c 01       		.byte	0x1
 2209 076d B3       		.byte	0xb3
 2210 076e 6B000000 		.4byte	0x6b
 2211 0772 34050000 		.4byte	.LLST42
 2212 0776 09       		.uleb128 0x9
 2213 0777 06000000 		.4byte	.LVL83
 2214 077b E9080000 		.4byte	0x8e9
 2215 077f 09       		.uleb128 0x9
 2216 0780 14000000 		.4byte	.LVL84
 2217 0784 F4080000 		.4byte	0x8f4
 2218 0788 0E       		.uleb128 0xe
 2219 0789 1C000000 		.4byte	.LVL85
 2220 078d F9060000 		.4byte	0x6f9
 2221 0791 0F       		.uleb128 0xf
 2222 0792 01       		.uleb128 0x1
 2223 0793 51       		.byte	0x51
 2224 0794 01       		.uleb128 0x1
 2225 0795 48       		.byte	0x48
 2226 0796 0F       		.uleb128 0xf
 2227 0797 01       		.uleb128 0x1
 2228 0798 50       		.byte	0x50
 2229 0799 01       		.uleb128 0x1
 2230 079a 31       		.byte	0x31
 2231 079b 00       		.byte	0
 2232 079c 00       		.byte	0
 2233 079d 0D       		.uleb128 0xd
 2234 079e 89030000 		.4byte	.LASF67
 2235 07a2 01       		.byte	0x1
 2236 07a3 EB04     		.2byte	0x4eb
 2237 07a5 76000000 		.4byte	0x76
 2238 07a9 00000000 		.4byte	.LFB35
 2239 07ad 14000000 		.4byte	.LFE35-.LFB35
 2240 07b1 01       		.uleb128 0x1
 2241 07b2 9C       		.byte	0x9c
 2242 07b3 0A       		.uleb128 0xa
 2243 07b4 06000000 		.4byte	.LASF68
 2244 07b8 01       		.byte	0x1
 2245 07b9 0405     		.2byte	0x504
 2246 07bb 00000000 		.4byte	.LFB36
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 65


 2247 07bf 0C000000 		.4byte	.LFE36-.LFB36
 2248 07c3 01       		.uleb128 0x1
 2249 07c4 9C       		.byte	0x9c
 2250 07c5 D8070000 		.4byte	0x7d8
 2251 07c9 10       		.uleb128 0x10
 2252 07ca 41040000 		.4byte	.LASF69
 2253 07ce 01       		.byte	0x1
 2254 07cf 0405     		.2byte	0x504
 2255 07d1 76000000 		.4byte	0x76
 2256 07d5 01       		.uleb128 0x1
 2257 07d6 50       		.byte	0x50
 2258 07d7 00       		.byte	0
 2259 07d8 07       		.uleb128 0x7
 2260 07d9 68040000 		.4byte	.LASF70
 2261 07dd 01       		.byte	0x1
 2262 07de 26       		.byte	0x26
 2263 07df 00000000 		.4byte	.LFB1
 2264 07e3 48000000 		.4byte	.LFE1-.LFB1
 2265 07e7 01       		.uleb128 0x1
 2266 07e8 9C       		.byte	0x9c
 2267 07e9 3A080000 		.4byte	0x83a
 2268 07ed 11       		.uleb128 0x11
 2269 07ee 14000000 		.4byte	.LVL87
 2270 07f2 54030000 		.4byte	0x354
 2271 07f6 00080000 		.4byte	0x800
 2272 07fa 0F       		.uleb128 0xf
 2273 07fb 01       		.uleb128 0x1
 2274 07fc 50       		.byte	0x50
 2275 07fd 01       		.uleb128 0x1
 2276 07fe 31       		.byte	0x31
 2277 07ff 00       		.byte	0
 2278 0800 11       		.uleb128 0x11
 2279 0801 20000000 		.4byte	.LVL88
 2280 0805 B3070000 		.4byte	0x7b3
 2281 0809 13080000 		.4byte	0x813
 2282 080d 0F       		.uleb128 0xf
 2283 080e 01       		.uleb128 0x1
 2284 080f 50       		.byte	0x50
 2285 0810 01       		.uleb128 0x1
 2286 0811 30       		.byte	0x30
 2287 0812 00       		.byte	0
 2288 0813 11       		.uleb128 0x11
 2289 0814 2C000000 		.4byte	.LVL89
 2290 0818 DA030000 		.4byte	0x3da
 2291 081c 28080000 		.4byte	0x828
 2292 0820 0F       		.uleb128 0xf
 2293 0821 01       		.uleb128 0x1
 2294 0822 50       		.byte	0x50
 2295 0823 03       		.uleb128 0x3
 2296 0824 0A       		.byte	0xa
 2297 0825 FFFF     		.2byte	0xffff
 2298 0827 00       		.byte	0
 2299 0828 0E       		.uleb128 0xe
 2300 0829 34000000 		.4byte	.LVL90
 2301 082d E6040000 		.4byte	0x4e6
 2302 0831 0F       		.uleb128 0xf
 2303 0832 01       		.uleb128 0x1
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 66


 2304 0833 50       		.byte	0x50
 2305 0834 03       		.uleb128 0x3
 2306 0835 0A       		.byte	0xa
 2307 0836 007D     		.2byte	0x7d00
 2308 0838 00       		.byte	0
 2309 0839 00       		.byte	0
 2310 083a 07       		.uleb128 0x7
 2311 083b C7030000 		.4byte	.LASF71
 2312 083f 01       		.byte	0x1
 2313 0840 E0       		.byte	0xe0
 2314 0841 00000000 		.4byte	.LFB3
 2315 0845 20000000 		.4byte	.LFE3-.LFB3
 2316 0849 01       		.uleb128 0x1
 2317 084a 9C       		.byte	0x9c
 2318 084b 62080000 		.4byte	0x862
 2319 084f 09       		.uleb128 0x9
 2320 0850 0E000000 		.4byte	.LVL91
 2321 0854 D8070000 		.4byte	0x7d8
 2322 0858 09       		.uleb128 0x9
 2323 0859 18000000 		.4byte	.LVL92
 2324 085d 52070000 		.4byte	0x752
 2325 0861 00       		.byte	0
 2326 0862 0D       		.uleb128 0xd
 2327 0863 58020000 		.4byte	.LASF72
 2328 0867 01       		.byte	0x1
 2329 0868 1B05     		.2byte	0x51b
 2330 086a 76000000 		.4byte	0x76
 2331 086e 00000000 		.4byte	.LFB37
 2332 0872 0C000000 		.4byte	.LFE37-.LFB37
 2333 0876 01       		.uleb128 0x1
 2334 0877 9C       		.byte	0x9c
 2335 0878 0D       		.uleb128 0xd
 2336 0879 D4000000 		.4byte	.LASF73
 2337 087d 01       		.byte	0x1
 2338 087e 3205     		.2byte	0x532
 2339 0880 76000000 		.4byte	0x76
 2340 0884 00000000 		.4byte	.LFB38
 2341 0888 0C000000 		.4byte	.LFE38-.LFB38
 2342 088c 01       		.uleb128 0x1
 2343 088d 9C       		.byte	0x9c
 2344 088e 0A       		.uleb128 0xa
 2345 088f 1C060000 		.4byte	.LASF74
 2346 0893 01       		.byte	0x1
 2347 0894 4905     		.2byte	0x549
 2348 0896 00000000 		.4byte	.LFB39
 2349 089a 0C000000 		.4byte	.LFE39-.LFB39
 2350 089e 01       		.uleb128 0x1
 2351 089f 9C       		.byte	0x9c
 2352 08a0 B3080000 		.4byte	0x8b3
 2353 08a4 10       		.uleb128 0x10
 2354 08a5 41040000 		.4byte	.LASF69
 2355 08a9 01       		.byte	0x1
 2356 08aa 4905     		.2byte	0x549
 2357 08ac 76000000 		.4byte	0x76
 2358 08b0 01       		.uleb128 0x1
 2359 08b1 50       		.byte	0x50
 2360 08b2 00       		.byte	0
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 67


 2361 08b3 0A       		.uleb128 0xa
 2362 08b4 E7040000 		.4byte	.LASF75
 2363 08b8 01       		.byte	0x1
 2364 08b9 6005     		.2byte	0x560
 2365 08bb 00000000 		.4byte	.LFB40
 2366 08bf 0C000000 		.4byte	.LFE40-.LFB40
 2367 08c3 01       		.uleb128 0x1
 2368 08c4 9C       		.byte	0x9c
 2369 08c5 D8080000 		.4byte	0x8d8
 2370 08c9 10       		.uleb128 0x10
 2371 08ca 41040000 		.4byte	.LASF69
 2372 08ce 01       		.byte	0x1
 2373 08cf 6005     		.2byte	0x560
 2374 08d1 76000000 		.4byte	0x76
 2375 08d5 01       		.uleb128 0x1
 2376 08d6 50       		.byte	0x50
 2377 08d7 00       		.byte	0
 2378 08d8 12       		.uleb128 0x12
 2379 08d9 1A020000 		.4byte	.LASF79
 2380 08dd 01       		.byte	0x1
 2381 08de 15       		.byte	0x15
 2382 08df 6B000000 		.4byte	0x6b
 2383 08e3 05       		.uleb128 0x5
 2384 08e4 03       		.byte	0x3
 2385 08e5 00000000 		.4byte	PWM_Green_initVar
 2386 08e9 13       		.uleb128 0x13
 2387 08ea 03020000 		.4byte	.LASF80
 2388 08ee 03       		.byte	0x3
 2389 08ef 5E       		.byte	0x5e
 2390 08f0 6B000000 		.4byte	0x6b
 2391 08f4 14       		.uleb128 0x14
 2392 08f5 21000000 		.4byte	.LASF81
 2393 08f9 03       		.byte	0x3
 2394 08fa 5F       		.byte	0x5f
 2395 08fb 15       		.uleb128 0x15
 2396 08fc 6B000000 		.4byte	0x6b
 2397 0900 00       		.byte	0
 2398 0901 00       		.byte	0
 2399              		.section	.debug_abbrev,"",%progbits
 2400              	.Ldebug_abbrev0:
 2401 0000 01       		.uleb128 0x1
 2402 0001 11       		.uleb128 0x11
 2403 0002 01       		.byte	0x1
 2404 0003 25       		.uleb128 0x25
 2405 0004 0E       		.uleb128 0xe
 2406 0005 13       		.uleb128 0x13
 2407 0006 0B       		.uleb128 0xb
 2408 0007 03       		.uleb128 0x3
 2409 0008 0E       		.uleb128 0xe
 2410 0009 1B       		.uleb128 0x1b
 2411 000a 0E       		.uleb128 0xe
 2412 000b 55       		.uleb128 0x55
 2413 000c 17       		.uleb128 0x17
 2414 000d 11       		.uleb128 0x11
 2415 000e 01       		.uleb128 0x1
 2416 000f 10       		.uleb128 0x10
 2417 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 68


 2418 0011 00       		.byte	0
 2419 0012 00       		.byte	0
 2420 0013 02       		.uleb128 0x2
 2421 0014 24       		.uleb128 0x24
 2422 0015 00       		.byte	0
 2423 0016 0B       		.uleb128 0xb
 2424 0017 0B       		.uleb128 0xb
 2425 0018 3E       		.uleb128 0x3e
 2426 0019 0B       		.uleb128 0xb
 2427 001a 03       		.uleb128 0x3
 2428 001b 0E       		.uleb128 0xe
 2429 001c 00       		.byte	0
 2430 001d 00       		.byte	0
 2431 001e 03       		.uleb128 0x3
 2432 001f 24       		.uleb128 0x24
 2433 0020 00       		.byte	0
 2434 0021 0B       		.uleb128 0xb
 2435 0022 0B       		.uleb128 0xb
 2436 0023 3E       		.uleb128 0x3e
 2437 0024 0B       		.uleb128 0xb
 2438 0025 03       		.uleb128 0x3
 2439 0026 08       		.uleb128 0x8
 2440 0027 00       		.byte	0
 2441 0028 00       		.byte	0
 2442 0029 04       		.uleb128 0x4
 2443 002a 16       		.uleb128 0x16
 2444 002b 00       		.byte	0
 2445 002c 03       		.uleb128 0x3
 2446 002d 0E       		.uleb128 0xe
 2447 002e 3A       		.uleb128 0x3a
 2448 002f 0B       		.uleb128 0xb
 2449 0030 3B       		.uleb128 0x3b
 2450 0031 0B       		.uleb128 0xb
 2451 0032 49       		.uleb128 0x49
 2452 0033 13       		.uleb128 0x13
 2453 0034 00       		.byte	0
 2454 0035 00       		.byte	0
 2455 0036 05       		.uleb128 0x5
 2456 0037 16       		.uleb128 0x16
 2457 0038 00       		.byte	0
 2458 0039 03       		.uleb128 0x3
 2459 003a 0E       		.uleb128 0xe
 2460 003b 3A       		.uleb128 0x3a
 2461 003c 0B       		.uleb128 0xb
 2462 003d 3B       		.uleb128 0x3b
 2463 003e 05       		.uleb128 0x5
 2464 003f 49       		.uleb128 0x49
 2465 0040 13       		.uleb128 0x13
 2466 0041 00       		.byte	0
 2467 0042 00       		.byte	0
 2468 0043 06       		.uleb128 0x6
 2469 0044 35       		.uleb128 0x35
 2470 0045 00       		.byte	0
 2471 0046 49       		.uleb128 0x49
 2472 0047 13       		.uleb128 0x13
 2473 0048 00       		.byte	0
 2474 0049 00       		.byte	0
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 69


 2475 004a 07       		.uleb128 0x7
 2476 004b 2E       		.uleb128 0x2e
 2477 004c 01       		.byte	0x1
 2478 004d 3F       		.uleb128 0x3f
 2479 004e 19       		.uleb128 0x19
 2480 004f 03       		.uleb128 0x3
 2481 0050 0E       		.uleb128 0xe
 2482 0051 3A       		.uleb128 0x3a
 2483 0052 0B       		.uleb128 0xb
 2484 0053 3B       		.uleb128 0x3b
 2485 0054 0B       		.uleb128 0xb
 2486 0055 27       		.uleb128 0x27
 2487 0056 19       		.uleb128 0x19
 2488 0057 11       		.uleb128 0x11
 2489 0058 01       		.uleb128 0x1
 2490 0059 12       		.uleb128 0x12
 2491 005a 06       		.uleb128 0x6
 2492 005b 40       		.uleb128 0x40
 2493 005c 18       		.uleb128 0x18
 2494 005d 9742     		.uleb128 0x2117
 2495 005f 19       		.uleb128 0x19
 2496 0060 01       		.uleb128 0x1
 2497 0061 13       		.uleb128 0x13
 2498 0062 00       		.byte	0
 2499 0063 00       		.byte	0
 2500 0064 08       		.uleb128 0x8
 2501 0065 34       		.uleb128 0x34
 2502 0066 00       		.byte	0
 2503 0067 03       		.uleb128 0x3
 2504 0068 0E       		.uleb128 0xe
 2505 0069 3A       		.uleb128 0x3a
 2506 006a 0B       		.uleb128 0xb
 2507 006b 3B       		.uleb128 0x3b
 2508 006c 0B       		.uleb128 0xb
 2509 006d 49       		.uleb128 0x49
 2510 006e 13       		.uleb128 0x13
 2511 006f 02       		.uleb128 0x2
 2512 0070 17       		.uleb128 0x17
 2513 0071 00       		.byte	0
 2514 0072 00       		.byte	0
 2515 0073 09       		.uleb128 0x9
 2516 0074 898201   		.uleb128 0x4109
 2517 0077 00       		.byte	0
 2518 0078 11       		.uleb128 0x11
 2519 0079 01       		.uleb128 0x1
 2520 007a 31       		.uleb128 0x31
 2521 007b 13       		.uleb128 0x13
 2522 007c 00       		.byte	0
 2523 007d 00       		.byte	0
 2524 007e 0A       		.uleb128 0xa
 2525 007f 2E       		.uleb128 0x2e
 2526 0080 01       		.byte	0x1
 2527 0081 3F       		.uleb128 0x3f
 2528 0082 19       		.uleb128 0x19
 2529 0083 03       		.uleb128 0x3
 2530 0084 0E       		.uleb128 0xe
 2531 0085 3A       		.uleb128 0x3a
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 70


 2532 0086 0B       		.uleb128 0xb
 2533 0087 3B       		.uleb128 0x3b
 2534 0088 05       		.uleb128 0x5
 2535 0089 27       		.uleb128 0x27
 2536 008a 19       		.uleb128 0x19
 2537 008b 11       		.uleb128 0x11
 2538 008c 01       		.uleb128 0x1
 2539 008d 12       		.uleb128 0x12
 2540 008e 06       		.uleb128 0x6
 2541 008f 40       		.uleb128 0x40
 2542 0090 18       		.uleb128 0x18
 2543 0091 9742     		.uleb128 0x2117
 2544 0093 19       		.uleb128 0x19
 2545 0094 01       		.uleb128 0x1
 2546 0095 13       		.uleb128 0x13
 2547 0096 00       		.byte	0
 2548 0097 00       		.byte	0
 2549 0098 0B       		.uleb128 0xb
 2550 0099 05       		.uleb128 0x5
 2551 009a 00       		.byte	0
 2552 009b 03       		.uleb128 0x3
 2553 009c 0E       		.uleb128 0xe
 2554 009d 3A       		.uleb128 0x3a
 2555 009e 0B       		.uleb128 0xb
 2556 009f 3B       		.uleb128 0x3b
 2557 00a0 05       		.uleb128 0x5
 2558 00a1 49       		.uleb128 0x49
 2559 00a2 13       		.uleb128 0x13
 2560 00a3 02       		.uleb128 0x2
 2561 00a4 17       		.uleb128 0x17
 2562 00a5 00       		.byte	0
 2563 00a6 00       		.byte	0
 2564 00a7 0C       		.uleb128 0xc
 2565 00a8 34       		.uleb128 0x34
 2566 00a9 00       		.byte	0
 2567 00aa 03       		.uleb128 0x3
 2568 00ab 0E       		.uleb128 0xe
 2569 00ac 3A       		.uleb128 0x3a
 2570 00ad 0B       		.uleb128 0xb
 2571 00ae 3B       		.uleb128 0x3b
 2572 00af 05       		.uleb128 0x5
 2573 00b0 49       		.uleb128 0x49
 2574 00b1 13       		.uleb128 0x13
 2575 00b2 02       		.uleb128 0x2
 2576 00b3 17       		.uleb128 0x17
 2577 00b4 00       		.byte	0
 2578 00b5 00       		.byte	0
 2579 00b6 0D       		.uleb128 0xd
 2580 00b7 2E       		.uleb128 0x2e
 2581 00b8 00       		.byte	0
 2582 00b9 3F       		.uleb128 0x3f
 2583 00ba 19       		.uleb128 0x19
 2584 00bb 03       		.uleb128 0x3
 2585 00bc 0E       		.uleb128 0xe
 2586 00bd 3A       		.uleb128 0x3a
 2587 00be 0B       		.uleb128 0xb
 2588 00bf 3B       		.uleb128 0x3b
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 71


 2589 00c0 05       		.uleb128 0x5
 2590 00c1 27       		.uleb128 0x27
 2591 00c2 19       		.uleb128 0x19
 2592 00c3 49       		.uleb128 0x49
 2593 00c4 13       		.uleb128 0x13
 2594 00c5 11       		.uleb128 0x11
 2595 00c6 01       		.uleb128 0x1
 2596 00c7 12       		.uleb128 0x12
 2597 00c8 06       		.uleb128 0x6
 2598 00c9 40       		.uleb128 0x40
 2599 00ca 18       		.uleb128 0x18
 2600 00cb 9742     		.uleb128 0x2117
 2601 00cd 19       		.uleb128 0x19
 2602 00ce 00       		.byte	0
 2603 00cf 00       		.byte	0
 2604 00d0 0E       		.uleb128 0xe
 2605 00d1 898201   		.uleb128 0x4109
 2606 00d4 01       		.byte	0x1
 2607 00d5 11       		.uleb128 0x11
 2608 00d6 01       		.uleb128 0x1
 2609 00d7 31       		.uleb128 0x31
 2610 00d8 13       		.uleb128 0x13
 2611 00d9 00       		.byte	0
 2612 00da 00       		.byte	0
 2613 00db 0F       		.uleb128 0xf
 2614 00dc 8A8201   		.uleb128 0x410a
 2615 00df 00       		.byte	0
 2616 00e0 02       		.uleb128 0x2
 2617 00e1 18       		.uleb128 0x18
 2618 00e2 9142     		.uleb128 0x2111
 2619 00e4 18       		.uleb128 0x18
 2620 00e5 00       		.byte	0
 2621 00e6 00       		.byte	0
 2622 00e7 10       		.uleb128 0x10
 2623 00e8 05       		.uleb128 0x5
 2624 00e9 00       		.byte	0
 2625 00ea 03       		.uleb128 0x3
 2626 00eb 0E       		.uleb128 0xe
 2627 00ec 3A       		.uleb128 0x3a
 2628 00ed 0B       		.uleb128 0xb
 2629 00ee 3B       		.uleb128 0x3b
 2630 00ef 05       		.uleb128 0x5
 2631 00f0 49       		.uleb128 0x49
 2632 00f1 13       		.uleb128 0x13
 2633 00f2 02       		.uleb128 0x2
 2634 00f3 18       		.uleb128 0x18
 2635 00f4 00       		.byte	0
 2636 00f5 00       		.byte	0
 2637 00f6 11       		.uleb128 0x11
 2638 00f7 898201   		.uleb128 0x4109
 2639 00fa 01       		.byte	0x1
 2640 00fb 11       		.uleb128 0x11
 2641 00fc 01       		.uleb128 0x1
 2642 00fd 31       		.uleb128 0x31
 2643 00fe 13       		.uleb128 0x13
 2644 00ff 01       		.uleb128 0x1
 2645 0100 13       		.uleb128 0x13
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 72


 2646 0101 00       		.byte	0
 2647 0102 00       		.byte	0
 2648 0103 12       		.uleb128 0x12
 2649 0104 34       		.uleb128 0x34
 2650 0105 00       		.byte	0
 2651 0106 03       		.uleb128 0x3
 2652 0107 0E       		.uleb128 0xe
 2653 0108 3A       		.uleb128 0x3a
 2654 0109 0B       		.uleb128 0xb
 2655 010a 3B       		.uleb128 0x3b
 2656 010b 0B       		.uleb128 0xb
 2657 010c 49       		.uleb128 0x49
 2658 010d 13       		.uleb128 0x13
 2659 010e 3F       		.uleb128 0x3f
 2660 010f 19       		.uleb128 0x19
 2661 0110 02       		.uleb128 0x2
 2662 0111 18       		.uleb128 0x18
 2663 0112 00       		.byte	0
 2664 0113 00       		.byte	0
 2665 0114 13       		.uleb128 0x13
 2666 0115 2E       		.uleb128 0x2e
 2667 0116 00       		.byte	0
 2668 0117 3F       		.uleb128 0x3f
 2669 0118 19       		.uleb128 0x19
 2670 0119 03       		.uleb128 0x3
 2671 011a 0E       		.uleb128 0xe
 2672 011b 3A       		.uleb128 0x3a
 2673 011c 0B       		.uleb128 0xb
 2674 011d 3B       		.uleb128 0x3b
 2675 011e 0B       		.uleb128 0xb
 2676 011f 27       		.uleb128 0x27
 2677 0120 19       		.uleb128 0x19
 2678 0121 49       		.uleb128 0x49
 2679 0122 13       		.uleb128 0x13
 2680 0123 3C       		.uleb128 0x3c
 2681 0124 19       		.uleb128 0x19
 2682 0125 00       		.byte	0
 2683 0126 00       		.byte	0
 2684 0127 14       		.uleb128 0x14
 2685 0128 2E       		.uleb128 0x2e
 2686 0129 01       		.byte	0x1
 2687 012a 3F       		.uleb128 0x3f
 2688 012b 19       		.uleb128 0x19
 2689 012c 03       		.uleb128 0x3
 2690 012d 0E       		.uleb128 0xe
 2691 012e 3A       		.uleb128 0x3a
 2692 012f 0B       		.uleb128 0xb
 2693 0130 3B       		.uleb128 0x3b
 2694 0131 0B       		.uleb128 0xb
 2695 0132 27       		.uleb128 0x27
 2696 0133 19       		.uleb128 0x19
 2697 0134 3C       		.uleb128 0x3c
 2698 0135 19       		.uleb128 0x19
 2699 0136 00       		.byte	0
 2700 0137 00       		.byte	0
 2701 0138 15       		.uleb128 0x15
 2702 0139 05       		.uleb128 0x5
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 73


 2703 013a 00       		.byte	0
 2704 013b 49       		.uleb128 0x49
 2705 013c 13       		.uleb128 0x13
 2706 013d 00       		.byte	0
 2707 013e 00       		.byte	0
 2708 013f 00       		.byte	0
 2709              		.section	.debug_loc,"",%progbits
 2710              	.Ldebug_loc0:
 2711              	.LLST0:
 2712 0000 06000000 		.4byte	.LVL0
 2713 0004 13000000 		.4byte	.LVL1-1
 2714 0008 0100     		.2byte	0x1
 2715 000a 50       		.byte	0x50
 2716 000b 00000000 		.4byte	0
 2717 000f 00000000 		.4byte	0
 2718              	.LLST1:
 2719 0013 00000000 		.4byte	.LVL2
 2720 0017 07000000 		.4byte	.LVL3-1
 2721 001b 0100     		.2byte	0x1
 2722 001d 50       		.byte	0x50
 2723 001e 07000000 		.4byte	.LVL3-1
 2724 0022 16000000 		.4byte	.LVL4
 2725 0026 0100     		.2byte	0x1
 2726 0028 54       		.byte	0x54
 2727 0029 16000000 		.4byte	.LVL4
 2728 002d 28000000 		.4byte	.LFE5
 2729 0031 0400     		.2byte	0x4
 2730 0033 F3       		.byte	0xf3
 2731 0034 01       		.uleb128 0x1
 2732 0035 50       		.byte	0x50
 2733 0036 9F       		.byte	0x9f
 2734 0037 00000000 		.4byte	0
 2735 003b 00000000 		.4byte	0
 2736              	.LLST2:
 2737 003f 08000000 		.4byte	.LVL3
 2738 0043 1B000000 		.4byte	.LVL5-1
 2739 0047 0100     		.2byte	0x1
 2740 0049 50       		.byte	0x50
 2741 004a 00000000 		.4byte	0
 2742 004e 00000000 		.4byte	0
 2743              	.LLST3:
 2744 0052 00000000 		.4byte	.LVL6
 2745 0056 07000000 		.4byte	.LVL7-1
 2746 005a 0100     		.2byte	0x1
 2747 005c 50       		.byte	0x50
 2748 005d 07000000 		.4byte	.LVL7-1
 2749 0061 16000000 		.4byte	.LVL8
 2750 0065 0100     		.2byte	0x1
 2751 0067 54       		.byte	0x54
 2752 0068 16000000 		.4byte	.LVL8
 2753 006c 28000000 		.4byte	.LFE6
 2754 0070 0400     		.2byte	0x4
 2755 0072 F3       		.byte	0xf3
 2756 0073 01       		.uleb128 0x1
 2757 0074 50       		.byte	0x50
 2758 0075 9F       		.byte	0x9f
 2759 0076 00000000 		.4byte	0
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 74


 2760 007a 00000000 		.4byte	0
 2761              	.LLST4:
 2762 007e 08000000 		.4byte	.LVL7
 2763 0082 1B000000 		.4byte	.LVL9-1
 2764 0086 0100     		.2byte	0x1
 2765 0088 50       		.byte	0x50
 2766 0089 00000000 		.4byte	0
 2767 008d 00000000 		.4byte	0
 2768              	.LLST5:
 2769 0091 00000000 		.4byte	.LVL10
 2770 0095 07000000 		.4byte	.LVL11-1
 2771 0099 0100     		.2byte	0x1
 2772 009b 50       		.byte	0x50
 2773 009c 07000000 		.4byte	.LVL11-1
 2774 00a0 16000000 		.4byte	.LVL12
 2775 00a4 0100     		.2byte	0x1
 2776 00a6 54       		.byte	0x54
 2777 00a7 16000000 		.4byte	.LVL12
 2778 00ab 28000000 		.4byte	.LFE7
 2779 00af 0400     		.2byte	0x4
 2780 00b1 F3       		.byte	0xf3
 2781 00b2 01       		.uleb128 0x1
 2782 00b3 50       		.byte	0x50
 2783 00b4 9F       		.byte	0x9f
 2784 00b5 00000000 		.4byte	0
 2785 00b9 00000000 		.4byte	0
 2786              	.LLST6:
 2787 00bd 08000000 		.4byte	.LVL11
 2788 00c1 1B000000 		.4byte	.LVL13-1
 2789 00c5 0100     		.2byte	0x1
 2790 00c7 50       		.byte	0x50
 2791 00c8 00000000 		.4byte	0
 2792 00cc 00000000 		.4byte	0
 2793              	.LLST7:
 2794 00d0 00000000 		.4byte	.LVL14
 2795 00d4 07000000 		.4byte	.LVL15-1
 2796 00d8 0100     		.2byte	0x1
 2797 00da 50       		.byte	0x50
 2798 00db 07000000 		.4byte	.LVL15-1
 2799 00df 18000000 		.4byte	.LVL16
 2800 00e3 0100     		.2byte	0x1
 2801 00e5 54       		.byte	0x54
 2802 00e6 18000000 		.4byte	.LVL16
 2803 00ea 2C000000 		.4byte	.LFE8
 2804 00ee 0400     		.2byte	0x4
 2805 00f0 F3       		.byte	0xf3
 2806 00f1 01       		.uleb128 0x1
 2807 00f2 50       		.byte	0x50
 2808 00f3 9F       		.byte	0x9f
 2809 00f4 00000000 		.4byte	0
 2810 00f8 00000000 		.4byte	0
 2811              	.LLST8:
 2812 00fc 08000000 		.4byte	.LVL15
 2813 0100 21000000 		.4byte	.LVL17-1
 2814 0104 0100     		.2byte	0x1
 2815 0106 50       		.byte	0x50
 2816 0107 00000000 		.4byte	0
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 75


 2817 010b 00000000 		.4byte	0
 2818              	.LLST9:
 2819 010f 00000000 		.4byte	.LVL18
 2820 0113 04000000 		.4byte	.LVL19
 2821 0117 0100     		.2byte	0x1
 2822 0119 50       		.byte	0x50
 2823 011a 04000000 		.4byte	.LVL19
 2824 011e 10000000 		.4byte	.LFE9
 2825 0122 0400     		.2byte	0x4
 2826 0124 F3       		.byte	0xf3
 2827 0125 01       		.uleb128 0x1
 2828 0126 50       		.byte	0x50
 2829 0127 9F       		.byte	0x9f
 2830 0128 00000000 		.4byte	0
 2831 012c 00000000 		.4byte	0
 2832              	.LLST10:
 2833 0130 00000000 		.4byte	.LVL20
 2834 0134 07000000 		.4byte	.LVL21-1
 2835 0138 0100     		.2byte	0x1
 2836 013a 50       		.byte	0x50
 2837 013b 07000000 		.4byte	.LVL21-1
 2838 013f 18000000 		.4byte	.LVL22
 2839 0143 0100     		.2byte	0x1
 2840 0145 54       		.byte	0x54
 2841 0146 18000000 		.4byte	.LVL22
 2842 014a 28000000 		.4byte	.LFE10
 2843 014e 0400     		.2byte	0x4
 2844 0150 F3       		.byte	0xf3
 2845 0151 01       		.uleb128 0x1
 2846 0152 50       		.byte	0x50
 2847 0153 9F       		.byte	0x9f
 2848 0154 00000000 		.4byte	0
 2849 0158 00000000 		.4byte	0
 2850              	.LLST11:
 2851 015c 08000000 		.4byte	.LVL21
 2852 0160 21000000 		.4byte	.LVL23-1
 2853 0164 0100     		.2byte	0x1
 2854 0166 50       		.byte	0x50
 2855 0167 00000000 		.4byte	0
 2856 016b 00000000 		.4byte	0
 2857              	.LLST12:
 2858 016f 00000000 		.4byte	.LVL24
 2859 0173 07000000 		.4byte	.LVL25-1
 2860 0177 0100     		.2byte	0x1
 2861 0179 50       		.byte	0x50
 2862 017a 07000000 		.4byte	.LVL25-1
 2863 017e 18000000 		.4byte	.LVL26
 2864 0182 0100     		.2byte	0x1
 2865 0184 54       		.byte	0x54
 2866 0185 18000000 		.4byte	.LVL26
 2867 0189 28000000 		.4byte	.LFE11
 2868 018d 0400     		.2byte	0x4
 2869 018f F3       		.byte	0xf3
 2870 0190 01       		.uleb128 0x1
 2871 0191 50       		.byte	0x50
 2872 0192 9F       		.byte	0x9f
 2873 0193 00000000 		.4byte	0
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 76


 2874 0197 00000000 		.4byte	0
 2875              	.LLST13:
 2876 019b 08000000 		.4byte	.LVL25
 2877 019f 21000000 		.4byte	.LVL27-1
 2878 01a3 0100     		.2byte	0x1
 2879 01a5 50       		.byte	0x50
 2880 01a6 00000000 		.4byte	0
 2881 01aa 00000000 		.4byte	0
 2882              	.LLST14:
 2883 01ae 00000000 		.4byte	.LVL28
 2884 01b2 07000000 		.4byte	.LVL29-1
 2885 01b6 0100     		.2byte	0x1
 2886 01b8 50       		.byte	0x50
 2887 01b9 07000000 		.4byte	.LVL29-1
 2888 01bd 16000000 		.4byte	.LVL30
 2889 01c1 0100     		.2byte	0x1
 2890 01c3 54       		.byte	0x54
 2891 01c4 16000000 		.4byte	.LVL30
 2892 01c8 2C000000 		.4byte	.LFE12
 2893 01cc 0400     		.2byte	0x4
 2894 01ce F3       		.byte	0xf3
 2895 01cf 01       		.uleb128 0x1
 2896 01d0 50       		.byte	0x50
 2897 01d1 9F       		.byte	0x9f
 2898 01d2 00000000 		.4byte	0
 2899 01d6 00000000 		.4byte	0
 2900              	.LLST15:
 2901 01da 08000000 		.4byte	.LVL29
 2902 01de 1F000000 		.4byte	.LVL31-1
 2903 01e2 0100     		.2byte	0x1
 2904 01e4 50       		.byte	0x50
 2905 01e5 00000000 		.4byte	0
 2906 01e9 00000000 		.4byte	0
 2907              	.LLST16:
 2908 01ed 00000000 		.4byte	.LVL32
 2909 01f1 07000000 		.4byte	.LVL33-1
 2910 01f5 0100     		.2byte	0x1
 2911 01f7 50       		.byte	0x50
 2912 01f8 07000000 		.4byte	.LVL33-1
 2913 01fc 16000000 		.4byte	.LVL34
 2914 0200 0100     		.2byte	0x1
 2915 0202 54       		.byte	0x54
 2916 0203 16000000 		.4byte	.LVL34
 2917 0207 28000000 		.4byte	.LFE13
 2918 020b 0400     		.2byte	0x4
 2919 020d F3       		.byte	0xf3
 2920 020e 01       		.uleb128 0x1
 2921 020f 50       		.byte	0x50
 2922 0210 9F       		.byte	0x9f
 2923 0211 00000000 		.4byte	0
 2924 0215 00000000 		.4byte	0
 2925              	.LLST17:
 2926 0219 08000000 		.4byte	.LVL33
 2927 021d 1B000000 		.4byte	.LVL35-1
 2928 0221 0100     		.2byte	0x1
 2929 0223 50       		.byte	0x50
 2930 0224 00000000 		.4byte	0
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 77


 2931 0228 00000000 		.4byte	0
 2932              	.LLST18:
 2933 022c 00000000 		.4byte	.LVL36
 2934 0230 02000000 		.4byte	.LVL37
 2935 0234 0100     		.2byte	0x1
 2936 0236 50       		.byte	0x50
 2937 0237 02000000 		.4byte	.LVL37
 2938 023b 10000000 		.4byte	.LFE14
 2939 023f 0400     		.2byte	0x4
 2940 0241 F3       		.byte	0xf3
 2941 0242 01       		.uleb128 0x1
 2942 0243 50       		.byte	0x50
 2943 0244 9F       		.byte	0x9f
 2944 0245 00000000 		.4byte	0
 2945 0249 00000000 		.4byte	0
 2946              	.LLST19:
 2947 024d 00000000 		.4byte	.LVL38
 2948 0251 07000000 		.4byte	.LVL39-1
 2949 0255 0100     		.2byte	0x1
 2950 0257 50       		.byte	0x50
 2951 0258 07000000 		.4byte	.LVL39-1
 2952 025c 16000000 		.4byte	.LVL40
 2953 0260 0100     		.2byte	0x1
 2954 0262 54       		.byte	0x54
 2955 0263 16000000 		.4byte	.LVL40
 2956 0267 28000000 		.4byte	.LFE16
 2957 026b 0400     		.2byte	0x4
 2958 026d F3       		.byte	0xf3
 2959 026e 01       		.uleb128 0x1
 2960 026f 50       		.byte	0x50
 2961 0270 9F       		.byte	0x9f
 2962 0271 00000000 		.4byte	0
 2963 0275 00000000 		.4byte	0
 2964              	.LLST20:
 2965 0279 08000000 		.4byte	.LVL39
 2966 027d 1B000000 		.4byte	.LVL41-1
 2967 0281 0100     		.2byte	0x1
 2968 0283 50       		.byte	0x50
 2969 0284 00000000 		.4byte	0
 2970 0288 00000000 		.4byte	0
 2971              	.LLST21:
 2972 028c 00000000 		.4byte	.LVL42
 2973 0290 02000000 		.4byte	.LVL43
 2974 0294 0100     		.2byte	0x1
 2975 0296 50       		.byte	0x50
 2976 0297 02000000 		.4byte	.LVL43
 2977 029b 10000000 		.4byte	.LFE17
 2978 029f 0400     		.2byte	0x4
 2979 02a1 F3       		.byte	0xf3
 2980 02a2 01       		.uleb128 0x1
 2981 02a3 50       		.byte	0x50
 2982 02a4 9F       		.byte	0x9f
 2983 02a5 00000000 		.4byte	0
 2984 02a9 00000000 		.4byte	0
 2985              	.LLST22:
 2986 02ad 00000000 		.4byte	.LVL44
 2987 02b1 07000000 		.4byte	.LVL45-1
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 78


 2988 02b5 0100     		.2byte	0x1
 2989 02b7 50       		.byte	0x50
 2990 02b8 07000000 		.4byte	.LVL45-1
 2991 02bc 16000000 		.4byte	.LVL46
 2992 02c0 0100     		.2byte	0x1
 2993 02c2 54       		.byte	0x54
 2994 02c3 16000000 		.4byte	.LVL46
 2995 02c7 24000000 		.4byte	.LFE19
 2996 02cb 0400     		.2byte	0x4
 2997 02cd F3       		.byte	0xf3
 2998 02ce 01       		.uleb128 0x1
 2999 02cf 50       		.byte	0x50
 3000 02d0 9F       		.byte	0x9f
 3001 02d1 00000000 		.4byte	0
 3002 02d5 00000000 		.4byte	0
 3003              	.LLST23:
 3004 02d9 08000000 		.4byte	.LVL45
 3005 02dd 1D000000 		.4byte	.LVL47-1
 3006 02e1 0100     		.2byte	0x1
 3007 02e3 50       		.byte	0x50
 3008 02e4 00000000 		.4byte	0
 3009 02e8 00000000 		.4byte	0
 3010              	.LLST24:
 3011 02ec 00000000 		.4byte	.LVL48
 3012 02f0 02000000 		.4byte	.LVL49
 3013 02f4 0100     		.2byte	0x1
 3014 02f6 50       		.byte	0x50
 3015 02f7 02000000 		.4byte	.LVL49
 3016 02fb 10000000 		.4byte	.LFE20
 3017 02ff 0400     		.2byte	0x4
 3018 0301 F3       		.byte	0xf3
 3019 0302 01       		.uleb128 0x1
 3020 0303 50       		.byte	0x50
 3021 0304 9F       		.byte	0x9f
 3022 0305 00000000 		.4byte	0
 3023 0309 00000000 		.4byte	0
 3024              	.LLST25:
 3025 030d 00000000 		.4byte	.LVL50
 3026 0311 07000000 		.4byte	.LVL51-1
 3027 0315 0100     		.2byte	0x1
 3028 0317 50       		.byte	0x50
 3029 0318 07000000 		.4byte	.LVL51-1
 3030 031c 18000000 		.4byte	.LVL52
 3031 0320 0100     		.2byte	0x1
 3032 0322 54       		.byte	0x54
 3033 0323 18000000 		.4byte	.LVL52
 3034 0327 28000000 		.4byte	.LFE22
 3035 032b 0400     		.2byte	0x4
 3036 032d F3       		.byte	0xf3
 3037 032e 01       		.uleb128 0x1
 3038 032f 50       		.byte	0x50
 3039 0330 9F       		.byte	0x9f
 3040 0331 00000000 		.4byte	0
 3041 0335 00000000 		.4byte	0
 3042              	.LLST26:
 3043 0339 08000000 		.4byte	.LVL51
 3044 033d 21000000 		.4byte	.LVL53-1
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 79


 3045 0341 0100     		.2byte	0x1
 3046 0343 50       		.byte	0x50
 3047 0344 00000000 		.4byte	0
 3048 0348 00000000 		.4byte	0
 3049              	.LLST27:
 3050 034c 00000000 		.4byte	.LVL54
 3051 0350 02000000 		.4byte	.LVL55
 3052 0354 0100     		.2byte	0x1
 3053 0356 50       		.byte	0x50
 3054 0357 02000000 		.4byte	.LVL55
 3055 035b 10000000 		.4byte	.LFE23
 3056 035f 0400     		.2byte	0x4
 3057 0361 F3       		.byte	0xf3
 3058 0362 01       		.uleb128 0x1
 3059 0363 50       		.byte	0x50
 3060 0364 9F       		.byte	0x9f
 3061 0365 00000000 		.4byte	0
 3062 0369 00000000 		.4byte	0
 3063              	.LLST28:
 3064 036d 00000000 		.4byte	.LVL56
 3065 0371 02000000 		.4byte	.LVL57
 3066 0375 0100     		.2byte	0x1
 3067 0377 50       		.byte	0x50
 3068 0378 02000000 		.4byte	.LVL57
 3069 037c 10000000 		.4byte	.LFE25
 3070 0380 0400     		.2byte	0x4
 3071 0382 F3       		.byte	0xf3
 3072 0383 01       		.uleb128 0x1
 3073 0384 50       		.byte	0x50
 3074 0385 9F       		.byte	0x9f
 3075 0386 00000000 		.4byte	0
 3076 038a 00000000 		.4byte	0
 3077              	.LLST29:
 3078 038e 00000000 		.4byte	.LVL58
 3079 0392 07000000 		.4byte	.LVL59-1
 3080 0396 0100     		.2byte	0x1
 3081 0398 50       		.byte	0x50
 3082 0399 07000000 		.4byte	.LVL59-1
 3083 039d 16000000 		.4byte	.LVL60
 3084 03a1 0100     		.2byte	0x1
 3085 03a3 54       		.byte	0x54
 3086 03a4 16000000 		.4byte	.LVL60
 3087 03a8 24000000 		.4byte	.LFE29
 3088 03ac 0400     		.2byte	0x4
 3089 03ae F3       		.byte	0xf3
 3090 03af 01       		.uleb128 0x1
 3091 03b0 50       		.byte	0x50
 3092 03b1 9F       		.byte	0x9f
 3093 03b2 00000000 		.4byte	0
 3094 03b6 00000000 		.4byte	0
 3095              	.LLST30:
 3096 03ba 08000000 		.4byte	.LVL59
 3097 03be 1B000000 		.4byte	.LVL61-1
 3098 03c2 0100     		.2byte	0x1
 3099 03c4 50       		.byte	0x50
 3100 03c5 00000000 		.4byte	0
 3101 03c9 00000000 		.4byte	0
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 80


 3102              	.LLST31:
 3103 03cd 00000000 		.4byte	.LVL62
 3104 03d1 07000000 		.4byte	.LVL63-1
 3105 03d5 0100     		.2byte	0x1
 3106 03d7 50       		.byte	0x50
 3107 03d8 07000000 		.4byte	.LVL63-1
 3108 03dc 16000000 		.4byte	.LVL64
 3109 03e0 0100     		.2byte	0x1
 3110 03e2 54       		.byte	0x54
 3111 03e3 16000000 		.4byte	.LVL64
 3112 03e7 24000000 		.4byte	.LFE30
 3113 03eb 0400     		.2byte	0x4
 3114 03ed F3       		.byte	0xf3
 3115 03ee 01       		.uleb128 0x1
 3116 03ef 50       		.byte	0x50
 3117 03f0 9F       		.byte	0x9f
 3118 03f1 00000000 		.4byte	0
 3119 03f5 00000000 		.4byte	0
 3120              	.LLST32:
 3121 03f9 08000000 		.4byte	.LVL63
 3122 03fd 1D000000 		.4byte	.LVL65-1
 3123 0401 0100     		.2byte	0x1
 3124 0403 50       		.byte	0x50
 3125 0404 00000000 		.4byte	0
 3126 0408 00000000 		.4byte	0
 3127              	.LLST33:
 3128 040c 00000000 		.4byte	.LVL66
 3129 0410 07000000 		.4byte	.LVL67-1
 3130 0414 0100     		.2byte	0x1
 3131 0416 50       		.byte	0x50
 3132 0417 07000000 		.4byte	.LVL67-1
 3133 041b 16000000 		.4byte	.LVL68
 3134 041f 0100     		.2byte	0x1
 3135 0421 54       		.byte	0x54
 3136 0422 16000000 		.4byte	.LVL68
 3137 0426 28000000 		.4byte	.LFE31
 3138 042a 0400     		.2byte	0x4
 3139 042c F3       		.byte	0xf3
 3140 042d 01       		.uleb128 0x1
 3141 042e 50       		.byte	0x50
 3142 042f 9F       		.byte	0x9f
 3143 0430 00000000 		.4byte	0
 3144 0434 00000000 		.4byte	0
 3145              	.LLST34:
 3146 0438 08000000 		.4byte	.LVL67
 3147 043c 1D000000 		.4byte	.LVL69-1
 3148 0440 0100     		.2byte	0x1
 3149 0442 50       		.byte	0x50
 3150 0443 00000000 		.4byte	0
 3151 0447 00000000 		.4byte	0
 3152              	.LLST35:
 3153 044b 00000000 		.4byte	.LVL70
 3154 044f 07000000 		.4byte	.LVL71-1
 3155 0453 0100     		.2byte	0x1
 3156 0455 50       		.byte	0x50
 3157 0456 07000000 		.4byte	.LVL71-1
 3158 045a 16000000 		.4byte	.LVL72
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 81


 3159 045e 0100     		.2byte	0x1
 3160 0460 54       		.byte	0x54
 3161 0461 16000000 		.4byte	.LVL72
 3162 0465 24000000 		.4byte	.LFE32
 3163 0469 0400     		.2byte	0x4
 3164 046b F3       		.byte	0xf3
 3165 046c 01       		.uleb128 0x1
 3166 046d 50       		.byte	0x50
 3167 046e 9F       		.byte	0x9f
 3168 046f 00000000 		.4byte	0
 3169 0473 00000000 		.4byte	0
 3170              	.LLST36:
 3171 0477 08000000 		.4byte	.LVL71
 3172 047b 1D000000 		.4byte	.LVL73-1
 3173 047f 0100     		.2byte	0x1
 3174 0481 50       		.byte	0x50
 3175 0482 00000000 		.4byte	0
 3176 0486 00000000 		.4byte	0
 3177              	.LLST37:
 3178 048a 00000000 		.4byte	.LVL74
 3179 048e 07000000 		.4byte	.LVL75-1
 3180 0492 0100     		.2byte	0x1
 3181 0494 50       		.byte	0x50
 3182 0495 07000000 		.4byte	.LVL75-1
 3183 0499 16000000 		.4byte	.LVL76
 3184 049d 0100     		.2byte	0x1
 3185 049f 54       		.byte	0x54
 3186 04a0 16000000 		.4byte	.LVL76
 3187 04a4 24000000 		.4byte	.LFE33
 3188 04a8 0400     		.2byte	0x4
 3189 04aa F3       		.byte	0xf3
 3190 04ab 01       		.uleb128 0x1
 3191 04ac 50       		.byte	0x50
 3192 04ad 9F       		.byte	0x9f
 3193 04ae 00000000 		.4byte	0
 3194 04b2 00000000 		.4byte	0
 3195              	.LLST38:
 3196 04b6 08000000 		.4byte	.LVL75
 3197 04ba 1D000000 		.4byte	.LVL77-1
 3198 04be 0100     		.2byte	0x1
 3199 04c0 50       		.byte	0x50
 3200 04c1 00000000 		.4byte	0
 3201 04c5 00000000 		.4byte	0
 3202              	.LLST39:
 3203 04c9 00000000 		.4byte	.LVL78
 3204 04cd 09000000 		.4byte	.LVL79-1
 3205 04d1 0100     		.2byte	0x1
 3206 04d3 50       		.byte	0x50
 3207 04d4 09000000 		.4byte	.LVL79-1
 3208 04d8 0C000000 		.4byte	.LVL80
 3209 04dc 0100     		.2byte	0x1
 3210 04de 54       		.byte	0x54
 3211 04df 0C000000 		.4byte	.LVL80
 3212 04e3 1C000000 		.4byte	.LFE34
 3213 04e7 0400     		.2byte	0x4
 3214 04e9 F3       		.byte	0xf3
 3215 04ea 01       		.uleb128 0x1
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 82


 3216 04eb 50       		.byte	0x50
 3217 04ec 9F       		.byte	0x9f
 3218 04ed 00000000 		.4byte	0
 3219 04f1 00000000 		.4byte	0
 3220              	.LLST40:
 3221 04f5 00000000 		.4byte	.LVL78
 3222 04f9 09000000 		.4byte	.LVL79-1
 3223 04fd 0100     		.2byte	0x1
 3224 04ff 51       		.byte	0x51
 3225 0500 09000000 		.4byte	.LVL79-1
 3226 0504 14000000 		.4byte	.LVL82
 3227 0508 0100     		.2byte	0x1
 3228 050a 55       		.byte	0x55
 3229 050b 14000000 		.4byte	.LVL82
 3230 050f 1C000000 		.4byte	.LFE34
 3231 0513 0400     		.2byte	0x4
 3232 0515 F3       		.byte	0xf3
 3233 0516 01       		.uleb128 0x1
 3234 0517 51       		.byte	0x51
 3235 0518 9F       		.byte	0x9f
 3236 0519 00000000 		.4byte	0
 3237 051d 00000000 		.4byte	0
 3238              	.LLST41:
 3239 0521 0A000000 		.4byte	.LVL79
 3240 0525 13000000 		.4byte	.LVL81-1
 3241 0529 0100     		.2byte	0x1
 3242 052b 50       		.byte	0x50
 3243 052c 00000000 		.4byte	0
 3244 0530 00000000 		.4byte	0
 3245              	.LLST42:
 3246 0534 06000000 		.4byte	.LVL83
 3247 0538 13000000 		.4byte	.LVL84-1
 3248 053c 0100     		.2byte	0x1
 3249 053e 50       		.byte	0x50
 3250 053f 00000000 		.4byte	0
 3251 0543 00000000 		.4byte	0
 3252              		.section	.debug_aranges,"",%progbits
 3253 0000 54010000 		.4byte	0x154
 3254 0004 0200     		.2byte	0x2
 3255 0006 00000000 		.4byte	.Ldebug_info0
 3256 000a 04       		.byte	0x4
 3257 000b 00       		.byte	0
 3258 000c 0000     		.2byte	0
 3259 000e 0000     		.2byte	0
 3260 0010 00000000 		.4byte	.LFB4
 3261 0014 1C000000 		.4byte	.LFE4-.LFB4
 3262 0018 00000000 		.4byte	.LFB5
 3263 001c 28000000 		.4byte	.LFE5-.LFB5
 3264 0020 00000000 		.4byte	.LFB6
 3265 0024 28000000 		.4byte	.LFE6-.LFB6
 3266 0028 00000000 		.4byte	.LFB7
 3267 002c 28000000 		.4byte	.LFE7-.LFB7
 3268 0030 00000000 		.4byte	.LFB8
 3269 0034 2C000000 		.4byte	.LFE8-.LFB8
 3270 0038 00000000 		.4byte	.LFB9
 3271 003c 10000000 		.4byte	.LFE9-.LFB9
 3272 0040 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 83


 3273 0044 28000000 		.4byte	.LFE10-.LFB10
 3274 0048 00000000 		.4byte	.LFB11
 3275 004c 28000000 		.4byte	.LFE11-.LFB11
 3276 0050 00000000 		.4byte	.LFB12
 3277 0054 2C000000 		.4byte	.LFE12-.LFB12
 3278 0058 00000000 		.4byte	.LFB13
 3279 005c 28000000 		.4byte	.LFE13-.LFB13
 3280 0060 00000000 		.4byte	.LFB14
 3281 0064 10000000 		.4byte	.LFE14-.LFB14
 3282 0068 00000000 		.4byte	.LFB15
 3283 006c 10000000 		.4byte	.LFE15-.LFB15
 3284 0070 00000000 		.4byte	.LFB16
 3285 0074 28000000 		.4byte	.LFE16-.LFB16
 3286 0078 00000000 		.4byte	.LFB17
 3287 007c 10000000 		.4byte	.LFE17-.LFB17
 3288 0080 00000000 		.4byte	.LFB18
 3289 0084 10000000 		.4byte	.LFE18-.LFB18
 3290 0088 00000000 		.4byte	.LFB19
 3291 008c 24000000 		.4byte	.LFE19-.LFB19
 3292 0090 00000000 		.4byte	.LFB20
 3293 0094 10000000 		.4byte	.LFE20-.LFB20
 3294 0098 00000000 		.4byte	.LFB21
 3295 009c 10000000 		.4byte	.LFE21-.LFB21
 3296 00a0 00000000 		.4byte	.LFB22
 3297 00a4 28000000 		.4byte	.LFE22-.LFB22
 3298 00a8 00000000 		.4byte	.LFB23
 3299 00ac 10000000 		.4byte	.LFE23-.LFB23
 3300 00b0 00000000 		.4byte	.LFB24
 3301 00b4 10000000 		.4byte	.LFE24-.LFB24
 3302 00b8 00000000 		.4byte	.LFB25
 3303 00bc 10000000 		.4byte	.LFE25-.LFB25
 3304 00c0 00000000 		.4byte	.LFB26
 3305 00c4 10000000 		.4byte	.LFE26-.LFB26
 3306 00c8 00000000 		.4byte	.LFB27
 3307 00cc 10000000 		.4byte	.LFE27-.LFB27
 3308 00d0 00000000 		.4byte	.LFB28
 3309 00d4 10000000 		.4byte	.LFE28-.LFB28
 3310 00d8 00000000 		.4byte	.LFB29
 3311 00dc 24000000 		.4byte	.LFE29-.LFB29
 3312 00e0 00000000 		.4byte	.LFB30
 3313 00e4 24000000 		.4byte	.LFE30-.LFB30
 3314 00e8 00000000 		.4byte	.LFB31
 3315 00ec 28000000 		.4byte	.LFE31-.LFB31
 3316 00f0 00000000 		.4byte	.LFB32
 3317 00f4 24000000 		.4byte	.LFE32-.LFB32
 3318 00f8 00000000 		.4byte	.LFB33
 3319 00fc 24000000 		.4byte	.LFE33-.LFB33
 3320 0100 00000000 		.4byte	.LFB34
 3321 0104 1C000000 		.4byte	.LFE34-.LFB34
 3322 0108 00000000 		.4byte	.LFB2
 3323 010c 24000000 		.4byte	.LFE2-.LFB2
 3324 0110 00000000 		.4byte	.LFB35
 3325 0114 14000000 		.4byte	.LFE35-.LFB35
 3326 0118 00000000 		.4byte	.LFB36
 3327 011c 0C000000 		.4byte	.LFE36-.LFB36
 3328 0120 00000000 		.4byte	.LFB1
 3329 0124 48000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 84


 3330 0128 00000000 		.4byte	.LFB3
 3331 012c 20000000 		.4byte	.LFE3-.LFB3
 3332 0130 00000000 		.4byte	.LFB37
 3333 0134 0C000000 		.4byte	.LFE37-.LFB37
 3334 0138 00000000 		.4byte	.LFB38
 3335 013c 0C000000 		.4byte	.LFE38-.LFB38
 3336 0140 00000000 		.4byte	.LFB39
 3337 0144 0C000000 		.4byte	.LFE39-.LFB39
 3338 0148 00000000 		.4byte	.LFB40
 3339 014c 0C000000 		.4byte	.LFE40-.LFB40
 3340 0150 00000000 		.4byte	0
 3341 0154 00000000 		.4byte	0
 3342              		.section	.debug_ranges,"",%progbits
 3343              	.Ldebug_ranges0:
 3344 0000 00000000 		.4byte	.LFB4
 3345 0004 1C000000 		.4byte	.LFE4
 3346 0008 00000000 		.4byte	.LFB5
 3347 000c 28000000 		.4byte	.LFE5
 3348 0010 00000000 		.4byte	.LFB6
 3349 0014 28000000 		.4byte	.LFE6
 3350 0018 00000000 		.4byte	.LFB7
 3351 001c 28000000 		.4byte	.LFE7
 3352 0020 00000000 		.4byte	.LFB8
 3353 0024 2C000000 		.4byte	.LFE8
 3354 0028 00000000 		.4byte	.LFB9
 3355 002c 10000000 		.4byte	.LFE9
 3356 0030 00000000 		.4byte	.LFB10
 3357 0034 28000000 		.4byte	.LFE10
 3358 0038 00000000 		.4byte	.LFB11
 3359 003c 28000000 		.4byte	.LFE11
 3360 0040 00000000 		.4byte	.LFB12
 3361 0044 2C000000 		.4byte	.LFE12
 3362 0048 00000000 		.4byte	.LFB13
 3363 004c 28000000 		.4byte	.LFE13
 3364 0050 00000000 		.4byte	.LFB14
 3365 0054 10000000 		.4byte	.LFE14
 3366 0058 00000000 		.4byte	.LFB15
 3367 005c 10000000 		.4byte	.LFE15
 3368 0060 00000000 		.4byte	.LFB16
 3369 0064 28000000 		.4byte	.LFE16
 3370 0068 00000000 		.4byte	.LFB17
 3371 006c 10000000 		.4byte	.LFE17
 3372 0070 00000000 		.4byte	.LFB18
 3373 0074 10000000 		.4byte	.LFE18
 3374 0078 00000000 		.4byte	.LFB19
 3375 007c 24000000 		.4byte	.LFE19
 3376 0080 00000000 		.4byte	.LFB20
 3377 0084 10000000 		.4byte	.LFE20
 3378 0088 00000000 		.4byte	.LFB21
 3379 008c 10000000 		.4byte	.LFE21
 3380 0090 00000000 		.4byte	.LFB22
 3381 0094 28000000 		.4byte	.LFE22
 3382 0098 00000000 		.4byte	.LFB23
 3383 009c 10000000 		.4byte	.LFE23
 3384 00a0 00000000 		.4byte	.LFB24
 3385 00a4 10000000 		.4byte	.LFE24
 3386 00a8 00000000 		.4byte	.LFB25
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 85


 3387 00ac 10000000 		.4byte	.LFE25
 3388 00b0 00000000 		.4byte	.LFB26
 3389 00b4 10000000 		.4byte	.LFE26
 3390 00b8 00000000 		.4byte	.LFB27
 3391 00bc 10000000 		.4byte	.LFE27
 3392 00c0 00000000 		.4byte	.LFB28
 3393 00c4 10000000 		.4byte	.LFE28
 3394 00c8 00000000 		.4byte	.LFB29
 3395 00cc 24000000 		.4byte	.LFE29
 3396 00d0 00000000 		.4byte	.LFB30
 3397 00d4 24000000 		.4byte	.LFE30
 3398 00d8 00000000 		.4byte	.LFB31
 3399 00dc 28000000 		.4byte	.LFE31
 3400 00e0 00000000 		.4byte	.LFB32
 3401 00e4 24000000 		.4byte	.LFE32
 3402 00e8 00000000 		.4byte	.LFB33
 3403 00ec 24000000 		.4byte	.LFE33
 3404 00f0 00000000 		.4byte	.LFB34
 3405 00f4 1C000000 		.4byte	.LFE34
 3406 00f8 00000000 		.4byte	.LFB2
 3407 00fc 24000000 		.4byte	.LFE2
 3408 0100 00000000 		.4byte	.LFB35
 3409 0104 14000000 		.4byte	.LFE35
 3410 0108 00000000 		.4byte	.LFB36
 3411 010c 0C000000 		.4byte	.LFE36
 3412 0110 00000000 		.4byte	.LFB1
 3413 0114 48000000 		.4byte	.LFE1
 3414 0118 00000000 		.4byte	.LFB3
 3415 011c 20000000 		.4byte	.LFE3
 3416 0120 00000000 		.4byte	.LFB37
 3417 0124 0C000000 		.4byte	.LFE37
 3418 0128 00000000 		.4byte	.LFB38
 3419 012c 0C000000 		.4byte	.LFE38
 3420 0130 00000000 		.4byte	.LFB39
 3421 0134 0C000000 		.4byte	.LFE39
 3422 0138 00000000 		.4byte	.LFB40
 3423 013c 0C000000 		.4byte	.LFE40
 3424 0140 00000000 		.4byte	0
 3425 0144 00000000 		.4byte	0
 3426              		.section	.debug_line,"",%progbits
 3427              	.Ldebug_line0:
 3428 0000 7D030000 		.section	.debug_str,"MS",%progbits,1
 3428      02005300 
 3428      00000201 
 3428      FB0E0D00 
 3428      01010101 
 3429              	.LASF37:
 3430 0000 636F756E 		.ascii	"count\000"
 3430      7400
 3431              	.LASF68:
 3432 0006 50574D5F 		.ascii	"PWM_Green_SetInterruptMode\000"
 3432      47726565 
 3432      6E5F5365 
 3432      74496E74 
 3432      65727275 
 3433              	.LASF81:
 3434 0021 43794578 		.ascii	"CyExitCriticalSection\000"
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 86


 3434      69744372 
 3434      69746963 
 3434      616C5365 
 3434      6374696F 
 3435              	.LASF61:
 3436 0037 50574D5F 		.ascii	"PWM_Green_SetStartMode\000"
 3436      47726565 
 3436      6E5F5365 
 3436      74537461 
 3436      72744D6F 
 3437              	.LASF28:
 3438 004e 50574D5F 		.ascii	"PWM_Green_SetPWMSyncKill\000"
 3438      47726565 
 3438      6E5F5365 
 3438      7450574D 
 3438      53796E63 
 3439              	.LASF50:
 3440 0067 50574D5F 		.ascii	"PWM_Green_WriteCompare\000"
 3440      47726565 
 3440      6E5F5772 
 3440      69746543 
 3440      6F6D7061 
 3441              	.LASF7:
 3442 007e 6C6F6E67 		.ascii	"long long unsigned int\000"
 3442      206C6F6E 
 3442      6720756E 
 3442      7369676E 
 3442      65642069 
 3443              	.LASF21:
 3444 0095 71644D6F 		.ascii	"qdMode\000"
 3444      646500
 3445              	.LASF6:
 3446 009c 6C6F6E67 		.ascii	"long long int\000"
 3446      206C6F6E 
 3446      6720696E 
 3446      7400
 3447              	.LASF0:
 3448 00aa 7369676E 		.ascii	"signed char\000"
 3448      65642063 
 3448      68617200 
 3449              	.LASF62:
 3450 00b6 50574D5F 		.ascii	"PWM_Green_SetStopMode\000"
 3450      47726565 
 3450      6E5F5365 
 3450      7453746F 
 3450      704D6F64 
 3451              	.LASF51:
 3452 00cc 636F6D70 		.ascii	"compare\000"
 3452      61726500 
 3453              	.LASF73:
 3454 00d4 50574D5F 		.ascii	"PWM_Green_GetInterruptSource\000"
 3454      47726565 
 3454      6E5F4765 
 3454      74496E74 
 3454      65727275 
 3455              	.LASF64:
 3456 00f1 50574D5F 		.ascii	"PWM_Green_TriggerCommand\000"
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 87


 3456      47726565 
 3456      6E5F5472 
 3456      69676765 
 3456      72436F6D 
 3457              	.LASF4:
 3458 010a 6C6F6E67 		.ascii	"long int\000"
 3458      20696E74 
 3458      00
 3459              	.LASF22:
 3460 0113 50574D5F 		.ascii	"PWM_Green_SetPrescaler\000"
 3460      47726565 
 3460      6E5F5365 
 3460      74507265 
 3460      7363616C 
 3461              	.LASF36:
 3462 012a 50574D5F 		.ascii	"PWM_Green_WriteCounter\000"
 3462      47726565 
 3462      6E5F5772 
 3462      69746543 
 3462      6F756E74 
 3463              	.LASF9:
 3464 0141 75696E74 		.ascii	"uint8\000"
 3464      3800
 3465              	.LASF12:
 3466 0147 646F7562 		.ascii	"double\000"
 3466      6C6500
 3467              	.LASF34:
 3468 014e 50574D5F 		.ascii	"PWM_Green_SetPWMInvert\000"
 3468      47726565 
 3468      6E5F5365 
 3468      7450574D 
 3468      496E7665 
 3469              	.LASF10:
 3470 0165 75696E74 		.ascii	"uint32\000"
 3470      333200
 3471              	.LASF59:
 3472 016c 74726967 		.ascii	"triggerMode\000"
 3472      6765724D 
 3472      6F646500 
 3473              	.LASF35:
 3474 0178 6D61736B 		.ascii	"mask\000"
 3474      00
 3475              	.LASF55:
 3476 017d 50574D5F 		.ascii	"PWM_Green_ReadCompareBuf\000"
 3476      47726565 
 3476      6E5F5265 
 3476      6164436F 
 3476      6D706172 
 3477              	.LASF77:
 3478 0196 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_Green.c\000"
 3478      6E657261 
 3478      7465645F 
 3478      536F7572 
 3478      63655C50 
 3479              	.LASF33:
 3480 01bb 64656164 		.ascii	"deadTime\000"
 3480      54696D65 
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 88


 3480      00
 3481              	.LASF8:
 3482 01c4 756E7369 		.ascii	"unsigned int\000"
 3482      676E6564 
 3482      20696E74 
 3482      00
 3483              	.LASF65:
 3484 01d1 636F6D6D 		.ascii	"command\000"
 3484      616E6400 
 3485              	.LASF16:
 3486 01d9 50574D5F 		.ascii	"PWM_Green_Stop\000"
 3486      47726565 
 3486      6E5F5374 
 3486      6F7000
 3487              	.LASF5:
 3488 01e8 6C6F6E67 		.ascii	"long unsigned int\000"
 3488      20756E73 
 3488      69676E65 
 3488      6420696E 
 3488      7400
 3489              	.LASF27:
 3490 01fa 6D6F6465 		.ascii	"modeMask\000"
 3490      4D61736B 
 3490      00
 3491              	.LASF80:
 3492 0203 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3492      74657243 
 3492      72697469 
 3492      63616C53 
 3492      65637469 
 3493              	.LASF79:
 3494 021a 50574D5F 		.ascii	"PWM_Green_initVar\000"
 3494      47726565 
 3494      6E5F696E 
 3494      69745661 
 3494      7200
 3495              	.LASF32:
 3496 022c 50574D5F 		.ascii	"PWM_Green_SetPWMDeadTime\000"
 3496      47726565 
 3496      6E5F5365 
 3496      7450574D 
 3496      44656164 
 3497              	.LASF3:
 3498 0245 73686F72 		.ascii	"short unsigned int\000"
 3498      7420756E 
 3498      7369676E 
 3498      65642069 
 3498      6E7400
 3499              	.LASF72:
 3500 0258 50574D5F 		.ascii	"PWM_Green_GetInterruptSourceMasked\000"
 3500      47726565 
 3500      6E5F4765 
 3500      74496E74 
 3500      65727275 
 3501              	.LASF25:
 3502 027b 6F6E6553 		.ascii	"oneShotEnable\000"
 3502      686F7445 
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 89


 3502      6E61626C 
 3502      6500
 3503              	.LASF14:
 3504 0289 72656733 		.ascii	"reg32\000"
 3504      3200
 3505              	.LASF46:
 3506 028f 50574D5F 		.ascii	"PWM_Green_WritePeriodBuf\000"
 3506      47726565 
 3506      6E5F5772 
 3506      69746550 
 3506      6572696F 
 3507              	.LASF17:
 3508 02a8 50574D5F 		.ascii	"PWM_Green_SetMode\000"
 3508      47726565 
 3508      6E5F5365 
 3508      744D6F64 
 3508      6500
 3509              	.LASF15:
 3510 02ba 73697A65 		.ascii	"sizetype\000"
 3510      74797065 
 3510      00
 3511              	.LASF29:
 3512 02c3 73796E63 		.ascii	"syncKillEnable\000"
 3512      4B696C6C 
 3512      456E6162 
 3512      6C6500
 3513              	.LASF24:
 3514 02d2 50574D5F 		.ascii	"PWM_Green_SetOneShot\000"
 3514      47726565 
 3514      6E5F5365 
 3514      744F6E65 
 3514      53686F74 
 3515              	.LASF19:
 3516 02e7 50574D5F 		.ascii	"PWM_Green_SetQDMode\000"
 3516      47726565 
 3516      6E5F5365 
 3516      7451444D 
 3516      6F646500 
 3517              	.LASF76:
 3518 02fb 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3518      4320342E 
 3518      392E3320 
 3518      32303135 
 3518      30333033 
 3519 032e 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3519      20726576 
 3519      6973696F 
 3519      6E203232 
 3519      31323230 
 3520 0361 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3520      66756E63 
 3520      74696F6E 
 3520      2D736563 
 3520      74696F6E 
 3521              	.LASF67:
 3522 0389 50574D5F 		.ascii	"PWM_Green_ReadStatus\000"
 3522      47726565 
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 90


 3522      6E5F5265 
 3522      61645374 
 3522      61747573 
 3523              	.LASF11:
 3524 039e 666C6F61 		.ascii	"float\000"
 3524      7400
 3525              	.LASF57:
 3526 03a4 50574D5F 		.ascii	"PWM_Green_ReadCaptureBuf\000"
 3526      47726565 
 3526      6E5F5265 
 3526      61644361 
 3526      70747572 
 3527              	.LASF23:
 3528 03bd 70726573 		.ascii	"prescaler\000"
 3528      63616C65 
 3528      7200
 3529              	.LASF71:
 3530 03c7 50574D5F 		.ascii	"PWM_Green_Start\000"
 3530      47726565 
 3530      6E5F5374 
 3530      61727400 
 3531              	.LASF40:
 3532 03d7 50574D5F 		.ascii	"PWM_Green_WritePeriod\000"
 3532      47726565 
 3532      6E5F5772 
 3532      69746550 
 3532      6572696F 
 3533              	.LASF53:
 3534 03ed 50574D5F 		.ascii	"PWM_Green_WriteCompareBuf\000"
 3534      47726565 
 3534      6E5F5772 
 3534      69746543 
 3534      6F6D7061 
 3535              	.LASF1:
 3536 0407 756E7369 		.ascii	"unsigned char\000"
 3536      676E6564 
 3536      20636861 
 3536      7200
 3537              	.LASF66:
 3538 0415 50574D5F 		.ascii	"PWM_Green_Enable\000"
 3538      47726565 
 3538      6E5F456E 
 3538      61626C65 
 3538      00
 3539              	.LASF31:
 3540 0426 73746F70 		.ascii	"stopOnKillEnable\000"
 3540      4F6E4B69 
 3540      6C6C456E 
 3540      61626C65 
 3540      00
 3541              	.LASF2:
 3542 0437 73686F72 		.ascii	"short int\000"
 3542      7420696E 
 3542      7400
 3543              	.LASF69:
 3544 0441 696E7465 		.ascii	"interruptMask\000"
 3544      72727570 
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 91


 3544      744D6173 
 3544      6B00
 3545              	.LASF38:
 3546 044f 50574D5F 		.ascii	"PWM_Green_SetCounterMode\000"
 3546      47726565 
 3546      6E5F5365 
 3546      74436F75 
 3546      6E746572 
 3547              	.LASF70:
 3548 0468 50574D5F 		.ascii	"PWM_Green_Init\000"
 3548      47726565 
 3548      6E5F496E 
 3548      697400
 3549              	.LASF60:
 3550 0477 50574D5F 		.ascii	"PWM_Green_SetReloadMode\000"
 3550      47726565 
 3550      6E5F5365 
 3550      7452656C 
 3550      6F61644D 
 3551              	.LASF13:
 3552 048f 63686172 		.ascii	"char\000"
 3552      00
 3553              	.LASF20:
 3554 0494 6D6F6465 		.ascii	"mode\000"
 3554      00
 3555              	.LASF30:
 3556 0499 50574D5F 		.ascii	"PWM_Green_SetPWMStopOnKill\000"
 3556      47726565 
 3556      6E5F5365 
 3556      7450574D 
 3556      53746F70 
 3557              	.LASF43:
 3558 04b4 50574D5F 		.ascii	"PWM_Green_ReadPeriod\000"
 3558      47726565 
 3558      6E5F5265 
 3558      61645065 
 3558      72696F64 
 3559              	.LASF39:
 3560 04c9 636F756E 		.ascii	"counterMode\000"
 3560      7465724D 
 3560      6F646500 
 3561              	.LASF41:
 3562 04d5 70657269 		.ascii	"period\000"
 3562      6F6400
 3563              	.LASF54:
 3564 04dc 636F6D70 		.ascii	"compareBuf\000"
 3564      61726542 
 3564      756600
 3565              	.LASF75:
 3566 04e7 50574D5F 		.ascii	"PWM_Green_SetInterrupt\000"
 3566      47726565 
 3566      6E5F5365 
 3566      74496E74 
 3566      65727275 
 3567              	.LASF52:
 3568 04fe 50574D5F 		.ascii	"PWM_Green_ReadCompare\000"
 3568      47726565 
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 92


 3568      6E5F5265 
 3568      6164436F 
 3568      6D706172 
 3569              	.LASF58:
 3570 0514 50574D5F 		.ascii	"PWM_Green_SetCaptureMode\000"
 3570      47726565 
 3570      6E5F5365 
 3570      74436170 
 3570      74757265 
 3571              	.LASF78:
 3572 052d 433A5C55 		.ascii	"C:\\Users\\merlin\\Documents\\PSoC Creator\\Sandbox"
 3572      73657273 
 3572      5C6D6572 
 3572      6C696E5C 
 3572      446F6375 
 3573 055b 5F437261 		.ascii	"_CrazyEyes.cydsn\000"
 3573      7A794579 
 3573      65732E63 
 3573      7964736E 
 3573      00
 3574              	.LASF56:
 3575 056c 50574D5F 		.ascii	"PWM_Green_ReadCapture\000"
 3575      47726565 
 3575      6E5F5265 
 3575      61644361 
 3575      70747572 
 3576              	.LASF18:
 3577 0582 656E6162 		.ascii	"enableInterrupts\000"
 3577      6C65496E 
 3577      74657272 
 3577      75707473 
 3577      00
 3578              	.LASF48:
 3579 0593 50574D5F 		.ascii	"PWM_Green_ReadPeriodBuf\000"
 3579      47726565 
 3579      6E5F5265 
 3579      61645065 
 3579      72696F64 
 3580              	.LASF45:
 3581 05ab 73776170 		.ascii	"swapEnable\000"
 3581      456E6162 
 3581      6C6500
 3582              	.LASF49:
 3583 05b6 50574D5F 		.ascii	"PWM_Green_SetPeriodSwap\000"
 3583      47726565 
 3583      6E5F5365 
 3583      74506572 
 3583      696F6453 
 3584              	.LASF26:
 3585 05ce 50574D5F 		.ascii	"PWM_Green_SetPWMMode\000"
 3585      47726565 
 3585      6E5F5365 
 3585      7450574D 
 3585      4D6F6465 
 3586              	.LASF42:
 3587 05e3 50574D5F 		.ascii	"PWM_Green_ReadCounter\000"
 3587      47726565 
ARM GAS  C:\Users\merlin\AppData\Local\Temp\ccebwTMt.s 			page 93


 3587      6E5F5265 
 3587      6164436F 
 3587      756E7465 
 3588              	.LASF47:
 3589 05f9 70657269 		.ascii	"periodBuf\000"
 3589      6F644275 
 3589      6600
 3590              	.LASF44:
 3591 0603 50574D5F 		.ascii	"PWM_Green_SetCompareSwap\000"
 3591      47726565 
 3591      6E5F5365 
 3591      74436F6D 
 3591      70617265 
 3592              	.LASF74:
 3593 061c 50574D5F 		.ascii	"PWM_Green_ClearInterrupt\000"
 3593      47726565 
 3593      6E5F436C 
 3593      65617249 
 3593      6E746572 
 3594              	.LASF63:
 3595 0635 50574D5F 		.ascii	"PWM_Green_SetCountMode\000"
 3595      47726565 
 3595      6E5F5365 
 3595      74436F75 
 3595      6E744D6F 
 3596              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
